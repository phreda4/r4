| Clock - 2012-2013
| Adapts better to different screen dimensions
| Continuous movement of seconds arm

^r4/lib/gui.txt
^r4/lib/polygr.txt

#imsec 0 #start 0
#tickmin 0 #ticksize 0  | clock ticks
#hlen 0 #mlen 0 #slen 0 | lengths of arms
#hg 0 #mg 0 #sg 0       | arms thickness


:center | ( -- xc yc ) screen center coordinates
	sw 2/ sh 2/ ;

:ccircle_ | ( r angle -- x y )
	center 2swap swap xy+polar ;

:angle | ( val basis -- angle)
	swap $10000 * swap / $10000 2/ swap - ;

:radseg | ( angle r1 r2 g -- ) draws radius circle (xc, yc)
	>r pick2 >r r ccircle_ rot r> ccircle_ r> glineg drop ;

:ticks | draw clock ticks
	0 ( 12 <? )( dup $10000 12 / * tickmin dup ticksize + sg radseg 1 + ) drop ;

:drawh time 12 mod 60 * + 60 12 * angle 0 hlen hg radseg drop ;

:drawm time drop 60 * + 3600 angle 0 mlen mg radseg ;

:seconds imsec msec start - 10 / + 6000 mod ;

:draws seconds 6000 angle 0 slen sg radseg ;

:drawticks blanco ticks ;

:drawhms drawh drawm rojo draws ;

:drawclock drawticks drawhms ;

:th | ( val x y -- (val*x/y )
    >r * r> / ;

:getsec | ( -- sec )
	time drop drop ;

:getstart msec 'start ! ;

:init 
      getstart
      getsec 1- 100 * 'imsec !
      sw sh min 2/
      dup 4 5 th 'tickmin !
      dup 1 20 th 'ticksize !
      dup 4 5 th 'slen !
      dup 2 3 th 'mlen !
      dup 1 3 th 'hlen !
      dup 1 200 th 1 max 'sg !
      dup 1 100 th 1 max 'mg !
          1 50 th 1 max 'hg ! ;

:debug dup "%d" amarillo print ;

:main init show clrscr debug drawclock 'exit >esc< ;

: 33 main ;
