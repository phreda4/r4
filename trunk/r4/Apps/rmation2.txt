| reanimator.txt
| PHReda Nov2006
|----------------
^r4/lib/gui.txt
^r4/lib/dlg.txt
^r4/lib/fontt.txt
^r4/lib/trazo.txt

^r4/lib/polygr.txt

^r4/lib/trace.txt

|--------------------------------
#cuadrocursor 0
#cuadroultimo 0

#dibujo )( $ffff
#dibujo> 'dibujo

#cambio )( $ffff
#cambio> 'cambio

#index )( 8192
#index> 'index

#rmation
#rmation>

|----------------
:,dib
	dibujo> !+ 0 over ! 'dibujo> ! ;

#puntocursor -1
#polycursor -1

#colorultimo

|--------- rmation sprite (3d+move)
| 9 . 9 . 9 . 5 | tipo 1
| x=9 bits y=9 bits z=9 bits control=5bit
| 27 .5 | tipo 2
| 3 << porque usa 14 bits a 17 bits queda 1.0

:3d>xy | valor -- x y
	dup 23 >> 8 <<
	over 9 << 23 >> 8 <<
	rot 18 << 23 >> 8 <<
	project3d ;

:xy>3d | x y -- valor
	5 >> $1ff and 14 << swap
	5 >> $1ff and 23 <<
	or
	;

#p1 #p2 #p3

|-------- ordenes de control
:s0	| tiempo, fin
	;
:s1 | color
	8 >> ink ;
:s2 | color+poli
	8 >> ink poli ;
:s3 | param
	23 >> linegr! ;
:s4 | marca puntos
	dup 8 >> $3fff and 'p1 !
	14 8 + >> $3fff and 'p2 ! 0 'p3 !
	;
:s5 | marca puntos rle
	dup 8 >> $3fff and 'p1 !
	14 8 + >> $3fff and 'p3 ! 0 'p2 !
	;
:s6 | mueve punto
	>xyz
	drop drop drop
	;
:s7 | borra puntos
	dup 8 >> $3fff and 'p1 !
	14 8 + >> $3fff and 'p2 !
	;
|------- vacios por ahora
:s8	:s9	:sa	:sb	:sc	:sd	:se	:sf drop ;
|------- de aca dibujo/crea
| linea
:s10 3d>xy op ;			:s11 3d>xy line ;		:s12 3d>xy cp ;		:s13 3d>xy curve ;
| glinea
:s14 3d>xy gop ;		:s15 3d>xy gline ;		:s16 3d>xy gcp ;	:s17 3d>xy gcurve ;
| poly
:s18 3d>xy op ;			:s19 3d>xy pline ;		:s1a 3d>xy cp ;		:s1b 3d>xy pcurve ;
| points
:s1c 3d>xy circleg ;	:s1d 3d>xy circleg ;	:s1e 3d>xy cp ;		:s1f 3d>xy circleg ;

#sa s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sa sb sc sd se sf
s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s1a s1b s1c s1d s1e s1f

:rsdraw | ad --
	( @+ 1? )(
		dup $1f and 2 << 'sa + @ exec
		) 2drop ;

|--------------------------------- EDITA NODO
:espunto
    3d>xy 2 box
	;

:rsdrawe | ad --
	verde
	( @+ 1? )(
		dup $1f and $f >? ( drop espunto )( 2drop )
		) 2drop
	puntocursor 1+ 0? ( drop ; ) 1-
	blanco
	@ 3d>xy 4 box
	;

|---------------------------------
:indot | x y x y -- 1/0
	rot - dup * swap rot - dup * + | dx2+dy2
	64 <=? ( 1 )( 0 ) nip ; |

:tocopunto
	3d>xy xymouse indot 0? ( drop ; ) drop
	dup 4 - 'puntocursor !
	;

:rbuscapunto | ad --
	-1 'puntocursor !
	( @+ 1? )(
		dup $1f and $f >? ( drop tocopunto )( 2drop )
		) 2drop
	;

:rmuevepunto
	puntocursor 1+ 0? ( drop ; ) 1-
	xymouse xy>gc
	d>xy 5 >> $1ff and 14 << swap
	5 >> $1ff and 23 <<
	or
	over @ $1f and or
	swap !
	;

:delnode
	puntocursor 1+ 0? ( drop ; ) 1-
	drop
	;

:newnode
	puntocursor 1+ 0? ( drop ; ) 1-
	drop
	;
|---------------------------------------
:r0 :r1 :r2 :r3 :r4 :r5 :r6 :r7 :r8 :r9 :ra :rb :rc :rd :re :rf
:r10 :r11 :r12 :r13 :r14 :r15 :r16 :r17 :r18 :r19 :r1a :r1b :r1c
:r1d :r1e :r1f
	drop ;

#dr r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 ra rb rc rd re rf
r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r1a r1b r1c r1d r1e r1f

:rdrawstatic
	( @+ 1? )(
		dup $1f and 2 << 'dr + @ exec
		) 2drop ;

|---------------
#testrm
$00ff0001 | verde
$10200010
$20100011
$0000ff00
$00100205
$10000006
$00010006
0

#rspr1 0 'testrm 0

:inirdraw | adr+ 0 --
	| calc espacio,
	;

:rdraw | 'rspr1 --
	@+ 0? ( inirdraw ; ) | tiempo actual

	;

|---uso

| 0 0 0 mtransi
| 0 mrotzi
| 'rauto rdraw | animacion anda sola
|
|--------------
:playall
	;
|-----------

#nexttime 0
#ftime 0

#zoom
#xd #yd
#xcycwh 0 0 0 0

:savebox
	xc yc w h 'xcycwh !+ !+ !+ ! ;

:loadbox
	'xcycwh @+ 'h ! @+ 'w ! @+ 'yc ! @ 'xc ! ;


|----
:setdibujo
	cuadrocursor cuadroultimo =? ( drop ; ) drop
	| retrocede y rearma dibujo
	;

:getdibujo
	cuadrocursor cuadroultimo =? ( drop ; ) drop
	;

:primt
	setdibujo
	0 'cuadrocursor !
	getdibujo ;

:ultit
	setdibujo
	cuadroultimo 'cuadrocursor !
	getdibujo ;

:nextt
	cuadrocursor cuadroultimo >? ( drop ; )
	setdibujo
	1+ 'cuadrocursor !
	getdibujo ;

:prevt
	cuadrocursor 0? ( drop ; )
	setdibujo
	1- 'cuadrocursor !
	getdibujo ;

|----
:play | --
	0 'ftime !
	usogui
	show clrscr

		'exit >esc<
		;

|---modos
#modo 0
#mododibu $10 | $10 $14 $18 $1c

#primero
:cadapunto | tr --
	d>xy 5 >> $1ff and 14 << swap
	5 >> $1ff and 23 <<
	or
	primero
	$10 =? ( $11 'primero ! )
	$14 =? ( $15 'primero ! )
	$18 =? ( $19 'primero ! )
	$1c =? ( $1d 'primero ! )
	or
	,dib
	;

:addtrazo
	trazo.cnt 2 <? ( drop ; ) drop
	mododibu
	$18 <>? ( coloractual colorultimo <>? ( dup 'colorultimo ! 8 << 2 or ,dib )( drop ) )
	'primero !
	'cadapunto trazo.map
	mododibu
	$18 =? ( coloractual dup 'colorultimo ! 8 << 2 or ,dib )
	drop
	;

:mododraw
	verde oscuro
	[ 1 'modo ! ; ] "EDIT" sp btnt
	verde
	0 "DRAW" sp btnt
	sp
	cyan oscuro
	[ $10 'mododibu ! ; ] "LINE" sp btnt
	[ $14 'mododibu ! ; ] "GLINE" sp btnt
	[ $18 'mododibu ! ; ] "POLY" sp btnt
	[ $1c 'mododibu ! ; ] "CIRCLE" sp btnt
	0 " DEL " sp btnt

	loadbox
    coloractual ink
	'addtrazo trazo.draw

	omode
	0 0 2.5 mtrans
	'dibujo rsdraw
	;

#xa #ya

:modoedit
	verde
	0 "EDIT" sp btnt
	verde oscuro
	[ 0 'modo ! ; ] "DRAW" sp btnt
	sp
	cyan oscuro
	[ newnode ; ] " NEW " sp btnt
	[ delnode ; ] " DEL " sp btnt

	loadbox
    coloractual ink

	omode
	0 0 2.5 mtrans
	'dibujo rsdraw
	'dibujo rsdrawe
	[ 'dibujo rbuscapunto ; ]
	[ rmuevepunto ; ]
	guiDnMove
	;

:modoactual
	modo
	0? ( drop mododraw ; )
	1- 0? ( drop modoedit ; )
	drop ;

:dodibs
	scr omode
	0 0 2.5 mtrans
	-1.0 -1.0 0 project3d
	1.0 1.0 0 project3d rot - abs >r - abs r> dim
	0 dup fpos
	savebox

	10 sh 230 - dlgColat!

	usogui
	fonti |font-vard-12-bold
	show clrscr cr
		modoactual
		blanco | recuadro
		-1.0 -1.0 0 project3d 2dup op
		1.0 -1.0 0 project3d line
		1.0 1.0 0 project3d line
		-1.0 1.0 0 project3d line line

|		'dibujo ( dibujo> <? )( @+ "%h " allowcr print ) drop
|		coloractual "%h" print
		cr cr coloractual ink
		dlg.color

		violeta oscuro
		'primt dup <f1> "|<" sp btnt
		'prevt dup <f1> "<" sp btnt
		blanco cuadrocursor " %d" print
		violeta oscuro
		'nextt dup <f2> ">" sp btnt
		'ultit dup <f2> ">|" sp btnt
		sp
    	verde
		[ play ; ] dup <f3> "|>" sp btnt
		sp
		rojo oscuro
		'exit dup >esc< "EXIT" sp btnt

		cminiflecha ;

:clearanim
	here 'rmation ! 'rmation> !
	0 'cuadrocursor !
	0 'cuadroultimo !

	'dibujo 'dibujo> !
	'cambio 'cambio> !
	'index 'index>  !

	-1 'puntocursor !
	-1 'polycursor !

	coloractual 1- 'colorultimo !
	4 linegr!
	0 'modo !
	;

|**********************************
: 	0 paper
	mark
	clearanim
	33
	dodibs ;
