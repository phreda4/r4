| reanimator.txt
| PHReda Nov2006
|----------------
^r4/lib/gui.txt
^r4/lib/dlg.txt
^r4/lib/fontt.txt
^r4/lib/trazo.txt
^r4/lib/usedrw.txt
^r4/lib/trace.txt

#dibu1.spr
#dibu2.spr
#dibu3.spr
#dibu4.spr
#dibu5.spr
#dibu6.spr
#dibu7.spr
#dibu8.spr

#dibus 'dibu1.spr 'dibu2.spr 'dibu3.spr 'dibu4.spr 'dibu5.spr 'dibu6.spr 'dibu7.spr 'dibu8.spr
#dibusc 8

#ftime 0

#guion )( 8192
#guion> 'guion

#actor )( 8192 | pos dim rs
#dactor )( 8192 | diferencia de actor
#actor> 'actor

#tocado 0

#ifin ( -30 -31 -60 -55 -82 -71 -66 -87 -50 -63 -26 -31 4 -63 36 -87 62 -71 78 -55 94 -31 70 1 36 33 68 57 94 73 78 89 62 65 38 33 4 65 -28 89 -50 73 -66 57 -82 33 -58 1 -28 0 )
#iok ( -95 -30 -41 -31 6 -15 -74 103 1 -26 -31 70 -47 -2 -95 -26 0 )
#iplay ( -63 -62 65 4 -63 68 -60 0 )
#iprev ( 65 -62 68 9 4 65 -60 -13 68 -71 4 -15 -60 0 )
#inext ( 17 66 73 4 17 -60 68 -63 -62 68 -7 4 -63 -60 0 )
#ireloj ( -78 -73 6 86 7 87 6 -74 7 2 -23 -12 -68 1 -28 4 17 -12 41 4 17 20 1 4 -7 -46 13 -60 -3 -44 -47 10 -4 -59 12 -43 49 -6 12 69 -4 53 -7 50 68 13 52 -3 0 )
#imueve ( -63 34 20 -11 68 -27 1 116 33 68 21 20 61 36 105 4 57 -28 -12 21 -60 37 1 -108 -31 -60 -11 -12 -59 -28 -111 4 -63 36 0 )
#iescala ( -79 -78 -28 -63 -44 -15 4 -63 52 -79 36 84 -27 -47 68 1 20 49 68 25 84 85 73 36 65 52 17 4 65 -44 73 -28 -76 37 49 -60 1 -12 -47 -60 -31 -76 -75 0 )
#irota ( -111 34 -71 28 -79 94 15 87 73 46 61 49 62 15 -41 -55 30 -15 36 -63 -36 -111 36 -55 -46 -67 -79 -98 -1 87 73 -26 105 -36 65 36 25 -36 57 -28 49 -66 -1 -41 -55 -42 0 )
#ibotonera 'imueve 'iescala 'irota

|--------------------------------
#dibujo )( $3ffff
#dibujo>
#dibujo<

#seleccion )( $ffff
#seleccion> 'seleccion

#colorultimo

#xa -1 #ya #xb #yb
#cursorp
#campocursor
#modot	| modo aux para trazo

#zoom
#xd #yd
#xcycwh 0 0 0 0

:savebox
	xc yc w h 'xcycwh !+ !+ !+ ! ;

:loadbox
	'xcycwh @+ 'h ! @+ 'w ! @+ 'yc ! @ 'xc ! ;

|----------------
:,dib
	dibujo> !+ 0 over ! 'dibujo> ! ;

:,dibcolor
	coloractual 4 << $b  or ,dib ;

|-------------
:reset
	'dibujo dup 'dibujo> !+ !
	0 'dibujo !
	coloractual 1- 'colorultimo !
	-trazo
    ;

::savegst | "nombre" --
	mark
	'dibujo dibujo> over - 2 >> ,
	( dibujo> <? )( @+ , ) drop
	savemem
	empty ;

:savemem    "mem/test.gst" savegst ;

::loadgst | "nombre" --
	mark
	here dup rot load
	'here !
	here =? ( drop empty reset ; )
	@+ 'dibujo swap
	( 1? )( 1- >r
		swap @+ rot !+
		r> ) drop 'dibujo> !
	drop
	dibujo> 'dibujo< !
	empty ;

:loadmem	"mem/test.gst" loadgst ;

|---- GUION
:creadib | nro ang sx sy x y --
	guion> >r 1 r!+
	xy>d r!+ xy>d r!+ xy>d r!+ r> 'guion> ! ;

:modifica
	;

|---- FRAME
#nexttime 0

:fcmd
	2 >> 'nexttime ! rdrop 	;
	
:fcrea 
	2 >> | cnt de actores
	drop
	actor> >r @+ r!+ @+ r!+ @+ r!+ r> 'actor> !
	;
:fmod
	2 >> | nro actor
	drop 
	;
:fera
	2 >> | nro actor
	drop
	;

#cmdfrm 'fcmd 'fcrea 'fmod 'fera

:inidibus
	'actor 'actor> !	| borrar todo
	30 'nexttime !		| tiempo por omision
	'guion ( guion> <? )(
		@+ dup $3 and 2 <<  'cmdfrm + @ exec
		) drop ;

|------ ajusta guion
:ajustaguion
	'guion ( guion> <? )(
		
		) drop ;

|------ dibujos
:adibuja
	'actor ( actor> <? )( 
		@+ d>xy pos @+ d>xy dim @+ d>xy 2 << 'dibus + @ swap rnsprite
		) drop ;

:toconodo | x y -- x y 0/point
	'actor ( actor> <? )( 
		@+ d>xy pos @+ d>xy dim >r 
		2dup whin 1? ( drop r> 8 - ; ) drop r> 4+
		) drop 0 ;

:avanzat
	;


#dx #dy		
|----
:move.calc | x y b --
	0? ( 3drop ; )
	1- 0? ( drop tocado 1? ( >r dy + swap dx + swap xy>d r> ! )( 3drop ) ; )
	drop toconodo dup 'tocado ! 1? ( @ d>xy rot - 'dy ! swap - 'dx ! )( 3drop ) ;

:move.draw
	tocado 1? (	
		@+ d>xy pos @+ d>xy dim rojo gc.fbox
		) drop 
	adibuja ;
		
|----
:esca.calc | x y b --
	0? ( 3drop ; )
	1- 0? ( drop tocado 1? ( >r dy + swap dx + swap xy>d r> 4+ ! )( 3drop ) ; )
	drop toconodo dup 'tocado ! 1? ( 4+ @ d>xy rot - 'dy ! swap - 'dx ! )( 3drop ) ;

:esca.draw
	tocado 1? (	
		@+ d>xy pos @+ d>xy dim azul gc.fbox
		) drop 
	adibuja	;

#aa

|----
:rota.calc | x y b --
	0? ( 3drop ; )
	1- 0? ( drop tocado 1? ( >r dy - swap dx - + aa + r> 8 + dup @ $ffff and rot 16 << or swap ! )( 3drop ) ; )
	drop toconodo dup 'tocado ! 1? ( 8 + @ d>xy drop 'aa ! 'dy ! 'dx ! )( 3drop ) ;

:rota.draw
	tocado 1? (	
		@+ d>xy pos @+ d>xy dim verde gc.fbox
		) drop 
	adibuja	;

|----
:reajust
	;
	
:nextt
	1 'ftime +! 
	reajust ; 
	
:prevt
	ftime 0? ( drop ; )
	1- 'ftime ! 
	reajust ; 

|----
:play | --
	0 'ftime !
	usogui
	show clrscr
		adibuja
		avanzat
	 
		'exit >esc<
		;

|---- elige dibujo
:ddraw | nro --
	2 << 'dibus + @ 1? ( nsprite )( drop ) ;
	
:dclick | nro --
	0 swap 200 200 sw 2/ sh 2/ 
|		creadib exit 
		;

:showtabla | v h --
	2drop
	;

|----
:addd
	usogui
	show clrscr

		rojo oscuro
	0.1 dup fdim
	0 0.9 fpos 'ifin 'exit dup >esc< btnd
	0.1 dup fpos
		0.8 0.1 fpos
		
|	1 1 .at 8 1 .to 
	'ddraw 'dclick 8 1 showtabla

	 cflecha  
	'exit <esc>
	;
	
|----
:test
	inidibus ;

:drawguion
		verde
		'guion ( guion> <? )( @+ "%d " print ) drop ;

:drawactor
		azul
		'actor ( actor> <? )( @+ "%d " print ) drop ;

#estado 0

:dodibs
	usogui
	fonti
	show clrscr font-vard-12-bold home cr
		inidibus
|		.page 12 12 .table
|		0 0 .at 12 12 .to
|		'estado 0 1 .cond 'move.calc 'move.draw .ug
|		'estado 1 1 .cond 'esca.calc 'esca.draw .ug
|		'estado 2 1 .cond 'rota.calc 'rota.draw .ug|
|		0 11 .at
rojo oscuro
		'exit dup >esc< "X" sp btnt
		violeta oscuro
		'prevt dup <f1> "<" sp btnt
		'nextt dup <f2> ">" sp btnt
		[ play ; ] dup <f3> "|>" sp btnt
		[ addd ; ] dup <f4> "+" sp btnt
		[ test ; ] dup <f4> "*" sp btnt
|		3 1 .to 'ibotonera 'estado 3 .htool

		nexttime ftime " %d %d" blanco print
		drawguion cr
		drawactor
		|dup tocado "%d %d" blanco print
		|drawd
		cminiflecha
		'exit >esc<
		;


|---- cursor de dibujo
:creapoli | tr --
	dr>xy
	2dup whin 0? ( 3drop ; ) drop   | si no esta adentro no agrega
	xy>dr modot 1 =? ( 5 'modot ! ) or
	,dib
	;

:addline
	1 'modot !
	trazo.cnt 2 <? ( drop -trazo ; ) drop
	coloractual colorultimo <>? ( 'colorultimo ! ,dibcolor )( drop )
	'creapoli trazo.map
	-trazo
	;

:dibujando
	'trazo.start 'trazo.add 'addline guiMap ;

:bbdib
	'reset "Clear" sp btnt
	;

|--- modo hoja
#xv #yv

:vista.move
	xymouse
	dup yv - 'yc +! 'yv !
	dup xv - 'xc +! 'xv !
	savebox
	;

:vista.dn
	xymouse 'yv ! 'xv ! ;

:hojayzoom
	'vista.dn 'vista.move guiDnMove ;

:zoomin
	loadbox
	w $3fff >? ( drop ; )
	2* 'w !
	h 2* 'h !
	savebox ;

:zoomout
	loadbox
	w $3f <? ( drop ; )
	2/ 'w !
	h 2/ 'h !
	savebox ;

:bbhyz | zoom
	'zoomin "Z+" sp btnt
	'zoomout "Z-" sp btnt
	;

|---- modo linea
:,dibline
	xa -? ( drop xb yb 2dup 'ya ! 'xa ! xy>gc 1 or ,dib ; )
	xb - abs ya yb - abs + 0? ( drop ; ) drop
	xb yb 2dup 'ya ! 'xa ! xy>gc 5 or ,dib
	;

:dibulinea
	[ xymouse 'yb ! 'xb ! ; ] dup
|	[ xymouse 'yb ! 'xb ! ; ]
	[ ,dibline ; ]
	guiMap
	xa -? ( drop ; )
	ya op xb yb line
	;

:bbtra
	'reset "Clear" sp btnt
	[ -1 'xa ! ; ] "Break" sp btnt
	;

|---- modo caja
:,dibcaja
	xa xb =? ( drop ; ) ya yb =? ( 2drop ; )
	xy>gc dup 1 or ,dib
	xa yb xy>gc 5 or ,dib
	xb yb xy>gc 5 or ,dib
	xb ya xy>gc 5 or ,dib
	5 or ,dib
	;

:dibucaja
	[ xymouse 2dup 'ya ! 'xa ! 'yb ! 'xb ! ; ]
	[ xymouse 'yb ! 'xb ! ; ]
	[ ,dibcaja -1 'xa ! ; ]
	guiMap
	xa -? ( drop ; ) ya xb yb caja
	;
:bbcaj
	'reset "Clear" sp btnt
	;

|---- modo circulo
:,dibelip
	xa xb =? ( drop ; ) ya yb =? ( 2drop ; )
	yb ya - abs xb xa - abs
	>r >r r - 2dup
	2dup xy>gc 1 or ,dib |op
    swap r> r> dup >r swap >r  - swap 2dup xy>gc 2 or ,dib	|cp
	r + 2dup xy>gc 6 or ,dib |curve
	r + 2dup xy>gc 2 or ,dib |cp
	swap r> r> dup >r swap >r + swap 2dup xy>gc 6 or ,dib |curve
	swap r> r> dup >r swap >r + swap 2dup xy>gc 2 or ,dib |cp
	r - 2dup xy>gc 6 or ,dib |curve
	r> - xy>gc 2 or ,dib |cp
	xy>gc 6 or ,dib |curve
	rdrop
	;

:dibucirc
	[ xymouse 2dup 'ya ! 'xa ! 'yb ! 'xb ! ; ]
	[ xymouse 'yb ! 'xb ! ; ]
	[ ,dibelip -1 'xa ! ; ]
	guiMap
	xa -? ( drop ; ) xb =? ( drop ; ) ya yb =? ( 2drop ; )
	yb ya - abs xb xa - abs ellipse ;

:bbcir
	'reset "Clear" sp btnt
	;

|---- modo seleccion
:sortab
	xa xb >? ( xb 'xa ! dup 'xb ! ) drop
	ya yb >? ( yb 'ya ! dup 'yb ! ) drop
	;

:inab | x y -- 1/0
	ya <? ( 2drop 0 ; ) yb >? ( 2drop 0 ; ) drop
	xa <? ( drop 0 ; ) xb >? ( drop 0 ; ) drop
	1
	;

#ycen #xcen

:dd1 gc>xy 2 box ;
:dd2 gc>xy 3 cruz ;
:dd3 gc>xy 2 fbox ;
:dd4 gc>xy 3 cruz ;
:dd5 gc>xy 2 fbox ;
:dd6 gc>xy 3 cruz ;
:dd7 gc>xy 2dup 'ycen !+ ! 2 box ; | centro
:dd8 gc>xy 2dup 2 cruz op xcen ycen line ; | relativo

#acdd 0 dd1 dd2 dd3 dd4 dd5 dd6 dd7 dd8

:selecc.draw
	'seleccion ( seleccion> <? )(
		@+ @
		dup $f and 8 >? ( 2drop )( 2 << 'acdd + @ exec )
		) drop ;

:selecc.reset
	'seleccion 'seleccion> ! ;

:selecc.set
	sortab
	'dibujo ( dibujo> <? )(
		@+ gc>xy inab 1? ( over 4 - seleccion> !+ 'seleccion> ! ) drop
		) drop
	;

:seleccion | --
	[ xymouse 2dup 'ya ! 'xa ! 'yb ! 'xb ! ; ]
	[ xymouse 'yb ! 'xb ! ; ]
	[ selecc.set -1 'xa ! ; ]
	guiMap cyan
	selecc.draw
	xa -? ( drop ; ) ya xb yb caja
	;


:bbsel
	'selecc.reset "Clear" sp btnt
	'exit "<" sp btnt
	'exit cursorp " %d " sp btnt
	'exit ">" sp btnt

	;

|--- modo
#modov 0
| dibujo
#listam 'idibuja 'itrazo 'istop 'irec  'ifin 'ilupa
| accion sobre hoja
#listaa 'dibujando 'dibulinea 'dibucaja 'dibucirc 'seleccion 'hojayzoom
| cursor
#listac cminilapiz cminilapiz cminilapiz cminilapiz cminiflecha cminimano
| botnes
#listab bbdib bbtra bbcaj bbcir bbsel bbhyz

|--- MAIN ---
:main
	0 dup fpos
	sw sh min -64 dup 2 >> 'yc +! +
	dup dim
	savebox

    usogui
	show clrscr

|------ DIBUJO
		loadbox
|		cursormodo exec
		'listaa modov 2 << + @ exec | modo de cursor
		'dibujo nsprite

	    coloractual ink blanco
		trazo.in
		gc.box

		scr
		font-vard-12-bold home verde

		verde dup " :R%d" print
		blanco "GESTO " print cr
| 		trazo.debug
|		gui.debug
|		'dibujo ( dibujo> <? )( @+ "%h " allowcr print ) drop

		32 gc.botton $00000f gc.hfill
		home
		dlg.color
		cr2
		"     " printx
		cyan
|		'exit 'xcycwh @+ swap @ " %dx%d " btnt

		sp
		'modov 'listam 6 sp btnve

		rojo
		sp 'exit dup >esc< "X" btnt
		sp verde
|		'listab modov 2 << + @ exec | botones de modo
|		'listac modov 2 << + @ exec | dibujo del cursor

|	'pasatrazo <f1>
|	'keyenter <enter>
		;


: 0 paper 33 dodibs ;
