| reanimator.txt
| PHReda Nov2006
|----------------
^r4/lib/gui.txt
^r4/lib/dlg.txt
^r4/lib/fontt.txt
^r4/lib/trazo.txt

^r4/lib/polygr.txt

^r4/lib/trace.txt

|--------- rmation sprite (3d+move)
| 9 . 9 . 9 . 5 | tipo 1
| x=9 bits y=9 bits z=9 bits control=5bit
| 27 .5 | tipo 2

| 3 << porque usa 14 bits a 17 bits queda 1.0
:3d>xy | valor -- x y
	dup 23 >> 8 <<
	over 9 << 23 >> 8 <<
	rot 18 << 23 >> 8 <<
	project3d ;

:>z 18 << 23 >> ;
:>y 9 <<
:>x 23 >> ;

:>xyz | v -- x y z
	dup >z 8 << >r dup >y 8 << >r  >x 8 << r> r> ;

#p1 #p2 #p3

|-------- ordenes de control
:s0	| tiempo, fin
	;
:s1 | color
	8 >> ink ;
:s2 | poli
	drop poli ;
:s3 | param
	23 >> linegr! ;
:s4 | marca puntos
	dup 8 >> $3fff and 'p1 !
	14 8 + >> $3fff and 'p2 ! 0 'p3 !
	;
:s5 | marca puntos rle
	dup 8 >> $3fff and 'p1 !
	14 8 + >> $3fff and 'p3 ! 0 'p2 !
	;
:s6 | mueve punto
	>xyz
	drop drop drop
	;
:s7 | borra puntos
	dup 8 >> $3fff and 'p1 !
	14 8 + >> $3fff and 'p2 !
	;
|------- vacios por ahora
:s8	:s9	:sa	:sb	:sc	:sd	:se	:sf drop ;
|------- de aca dibujo/crea
| linea
:s10 3d>xy op ;			:s11 3d>xy line ;		:s12 3d>xy cp ;		:s13 3d>xy curve ;
| glinea
:s14 3d>xy gop ;		:s15 3d>xy gline ;		:s16 3d>xy gcp ;	:s17 3d>xy gcurve ;
| poly
:s18 3d>xy op ;			:s19 3d>xy pline ;		:s1a 3d>xy cp ;		:s1b 3d>xy pcurve ;
| points
:s1c 3d>xy circleg ;	:s1d 3d>xy circleg ;	:s1e 3d>xy cp ;		:s1f 3d>xy circleg ;

#sa s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sa sb sc sd se sf
s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s1a s1b s1c s1d s1e s1f

:rsdraw | ad --
	( @+ 1? )(
		dup $1f and 2 << 'sa + @ exec
		) 2drop ;

#testrm
$00ff0001 | verde
$10200010
$20100011
$0000ff00
$00100205
$10000006
$00010006
0



|--------------
#dibu1.spr
#dibu2.spr
#dibu3.spr
#dibu4.spr
#dibu5.spr
#dibu6.spr
#dibu7.spr
#dibu8.spr

#dibus 'dibu1.spr 'dibu2.spr 'dibu3.spr 'dibu4.spr 'dibu5.spr 'dibu6.spr 'dibu7.spr 'dibu8.spr
#dibusc 8

#ftime 0

#guion )( 8192
#guion> 'guion

#actor )( 8192 | pos dim rs
#dactor )( 8192 | diferencia de actor
#actor> 'actor

#tocado 0

#ifin ( -30 -31 -60 -55 -82 -71 -66 -87 -50 -63 -26 -31 4 -63 36 -87 62 -71 78 -55 94 -31 70 1 36 33 68 57 94 73 78 89 62 65 38 33 4 65 -28 89 -50 73 -66 57 -82 33 -58 1 -28 0 )
#iok ( -95 -30 -41 -31 6 -15 -74 103 1 -26 -31 70 -47 -2 -95 -26 0 )
#iplay ( -63 -62 65 4 -63 68 -60 0 )
#iprev ( 65 -62 68 9 4 65 -60 -13 68 -71 4 -15 -60 0 )
#inext ( 17 66 73 4 17 -60 68 -63 -62 68 -7 4 -63 -60 0 )
#ireloj ( -78 -73 6 86 7 87 6 -74 7 2 -23 -12 -68 1 -28 4 17 -12 41 4 17 20 1 4 -7 -46 13 -60 -3 -44 -47 10 -4 -59 12 -43 49 -6 12 69 -4 53 -7 50 68 13 52 -3 0 )
#imueve ( -63 34 20 -11 68 -27 1 116 33 68 21 20 61 36 105 4 57 -28 -12 21 -60 37 1 -108 -31 -60 -11 -12 -59 -28 -111 4 -63 36 0 )
#iescala ( -79 -78 -28 -63 -44 -15 4 -63 52 -79 36 84 -27 -47 68 1 20 49 68 25 84 85 73 36 65 52 17 4 65 -44 73 -28 -76 37 49 -60 1 -12 -47 -60 -31 -76 -75 0 )
#irota ( -111 34 -71 28 -79 94 15 87 73 46 61 49 62 15 -41 -55 30 -15 36 -63 -36 -111 36 -55 -46 -67 -79 -98 -1 87 73 -26 105 -36 65 36 25 -36 57 -28 49 -66 -1 -41 -55 -42 0 )
#ibotonera 'imueve 'iescala 'irota

|--------------------------------
#dibujo )( $3ffff
#dibujo>
#dibujo<

#seleccion )( $ffff
#seleccion> 'seleccion

#colorultimo

#xa -1 #ya #xb #yb
#cursorp
#campocursor
#modot	| modo aux para trazo

#zoom
#xd #yd
#xcycwh 0 0 0 0

:savebox
	xc yc w h 'xcycwh !+ !+ !+ ! ;

:loadbox
	'xcycwh @+ 'h ! @+ 'w ! @+ 'yc ! @ 'xc ! ;

|----------------
:,dib
	dibujo> !+ 0 over ! 'dibujo> ! ;

:,dibcolor
	coloractual 4 << $b  or ,dib ;

|-------------
:reset
	'dibujo dup 'dibujo> !+ !
	0 'dibujo !
	coloractual 1- 'colorultimo !
	-trazo
    ;

::savegst | "nombre" --
	mark
	'dibujo dibujo> over - 2 >> ,
	( dibujo> <? )( @+ , ) drop
	savemem
	empty ;

:savemem    "mem/test.gst" savegst ;

::loadgst | "nombre" --
	mark
	here dup rot load
	'here !
	here =? ( drop empty reset ; )
	@+ 'dibujo swap
	( 1? )( 1- >r
		swap @+ rot !+
		r> ) drop 'dibujo> !
	drop
	dibujo> 'dibujo< !
	empty ;

:loadmem	"mem/test.gst" loadgst ;

|---- GUION
:creadib | nro ang sx sy x y --
	guion> >r 1 r!+
	xy>d r!+ xy>d r!+ xy>d r!+ r> 'guion> ! ;

:modifica
	;

|---- FRAME
#nexttime 0

:fcmd
	2 >> 'nexttime ! rdrop 	;
	
:fcrea 
	2 >> | cnt de actores
	drop
	actor> >r @+ r!+ @+ r!+ @+ r!+ r> 'actor> !
	;
:fmod
	2 >> | nro actor
	drop 
	;
:fera
	2 >> | nro actor
	drop
	;

#cmdfrm 'fcmd 'fcrea 'fmod 'fera

:inidibus
	'actor 'actor> !	| borrar todo
	30 'nexttime !		| tiempo por omision
	'guion ( guion> <? )(
		@+ dup $3 and 2 <<  'cmdfrm + @ exec
		) drop ;

|------ ajusta guion
:ajustaguion
	'guion ( guion> <? )(
		
		) drop ;

|------ dibujos
:adibuja
	'actor ( actor> <? )( 
		@+ d>xy pos @+ d>xy dim @+ d>xy 2 << 'dibus + @ swap rnsprite
		) drop ;

:toconodo | x y -- x y 0/point
	'actor ( actor> <? )( 
		@+ d>xy pos @+ d>xy dim >r 
		2dup whin 1? ( drop r> 8 - ; ) drop r> 4+
		) drop 0 ;

:avanzat
	;


#dx #dy		
|----
:move.calc | x y b --
	0? ( 3drop ; )
	1- 0? ( drop tocado 1? ( >r dy + swap dx + swap xy>d r> ! )( 3drop ) ; )
	drop toconodo dup 'tocado ! 1? ( @ d>xy rot - 'dy ! swap - 'dx ! )( 3drop ) ;

:move.draw
	tocado 1? (	
		@+ d>xy pos @+ d>xy dim rojo gc.fbox
		) drop 
	adibuja ;
		
|----
:esca.calc | x y b --
	0? ( 3drop ; )
	1- 0? ( drop tocado 1? ( >r dy + swap dx + swap xy>d r> 4+ ! )( 3drop ) ; )
	drop toconodo dup 'tocado ! 1? ( 4+ @ d>xy rot - 'dy ! swap - 'dx ! )( 3drop ) ;

:esca.draw
	tocado 1? (	
		@+ d>xy pos @+ d>xy dim azul gc.fbox
		) drop 
	adibuja	;

#aa

|----
:rota.calc | x y b --
	0? ( 3drop ; )
	1- 0? ( drop tocado 1? ( >r dy - swap dx - + aa + r> 8 + dup @ $ffff and rot 16 << or swap ! )( 3drop ) ; )
	drop toconodo dup 'tocado ! 1? ( 8 + @ d>xy drop 'aa ! 'dy ! 'dx ! )( 3drop ) ;

:rota.draw
	tocado 1? (	
		@+ d>xy pos @+ d>xy dim verde gc.fbox
		) drop 
	adibuja	;

|----
:reajust
	;

:nextt
	1 'ftime +! 
	reajust ; 

:prevt
	ftime 0? ( drop ; )
	1- 'ftime ! 
	reajust ; 

|----
:play | --
	0 'ftime !
	usogui
	show clrscr
		adibuja
		avanzat
	 
		'exit >esc<
		;

|---- elige dibujo
:ddraw | nro --
	2 << 'dibus + @ 1? ( nsprite )( drop ) ;
	
:dclick | nro --
	0 swap 200 200 sw 2/ sh 2/ 
|		creadib exit
		;

:showtabla | v h --
	2drop
	;

|----
:addd
	usogui
	show clrscr

		rojo oscuro
	0.1 dup fdim
	0 0.9 fpos 'ifin 'exit dup >esc< btnd
	0.1 dup fpos
		0.8 0.1 fpos
		
|	1 1 .at 8 1 .to
	'ddraw 'dclick 8 1 showtabla

	 cflecha  
	'exit <esc>
	;
	
|----
:test
	inidibus ;

:drawguion
		verde
		'guion ( guion> <? )( @+ "%d " print ) drop ;

:drawactor
		azul
		'actor ( actor> <? )( @+ "%d " print ) drop ;

#estado 0


:dodibs
	0 dup fpos
	sw sh min -64 dup 2 >> 'yc +! +
	dup dim
	savebox

	usogui
	fonti
	show clrscr font-vard-12-bold home cr
		inidibus
		rojo oscuro
		'exit dup >esc< "X" sp btnt
		violeta oscuro
		'prevt dup <f1> "<" sp btnt
		'nextt dup <f2> ">" sp btnt
		[ play ; ] dup <f3> "|>" sp btnt
		[ addd ; ] dup <f4> "+" sp btnt
		[ test ; ] dup <f4> "*" sp btnt
		nexttime ftime " %d %d" blanco print
		drawguion cr
		drawactor
		|dup tocado "%d %d" blanco print
		|drawd

		loadbox

	    coloractual ink
		trazo.in
		gc.box

		'exit >esc<
		cminiflecha

		;



: 0 paper 33 dodibs ;
