|  particulas 3d
| 16 LUGARES
|
| 'acc x y z rx ry rz sx sy 'DRAW vx vy vz rvx rvy rvz
|---- generic list

::p3d.update | org -- org
	dup 4+ dup >r | org r@+ r@+ r@+
	36 r+
	r@+ over +!
	4+ r@+ over +!
	4+ r@+ over +!
	4+ r@+ over +!
	4+ r@+ over +!
	4+ r@+ over +!
	rdrop drop ;

::p3d.pos | org -- org
	dup 4+ >r
	r@+ r@+ r@+ mtransi
	r@+ 1? ( mrotxi )( drop )
	r@+ 1? ( mrotyi )( drop )
	r@+ 1? ( mrotzi )( drop )
	r@+ r@+ 1.0 mscalei
	rdrop ;

::p3d.create | size 'fx --
	here over 4+ !
	swap 'here +!
::p3d.clear | 'fx --
	dup 4+ @ swap ! ;

::p3d!+ | 'vec 'fx -- adr
	dup >r @ !+
	64 r> +! ;

::p3d.del1 | 'fx last now -- 'fx last now
	dup pick2 64 - 16 move
	-64 pick3 +!
	swap 64 - swap 64 - ;

::p3d.draw | 'fx --
	dup @+ swap @
	( over <? )(
		dup @ exec 0? ( drop p3d.del1 )
		64 + ) 3drop ;

::p3d.mapo | vec 'fx --
	dup @+ swap @
	( over <? )(
		pick3 exec 0? ( drop p3d.del1 )
		64 + ) 4drop ;

::p3d.map0o | vec 'fx --
	dup @+ swap @
	( over <? )(
		pick3 exec 0? ( drop p3d.del1 4drop 0 ; )
		64 + ) 4drop ;

::p3d.deln | adr 'fx --
	dup @ -64 rot +!
	64 - 16 move ;

::p3d.cnt | 'fx -- cnt
	@+ swap @ - 6 >> ;

::p3d.dump | 'fx
	dup @+ swap @
	( over <? )(
		dup 4+
		@+ "x:%f " print
		@+ "y:%f " print
		@ "z:%f " print cr
		64 + ) 3drop ;

|---- zbuffer
#zbuffer
::p3d.zclear |
	mark
	here 'zbuffer !
	;

::p3d.z+ | --
	dup 12 + @ neg ,
	dup ,	| graba direccion particula
	;

::p3d.zdraw
	here zbuffer - 3 >> >r
	empty
	r here shellsort
	here r>
	( 1? )( 1-
		swap 4+ @+
		dup 36 + @ exec drop | llama a dibujar
		swap )
	2drop ;
