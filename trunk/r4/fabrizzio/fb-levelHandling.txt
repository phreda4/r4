|||| Exported words:

| setActions		arguments: 'list listCnt	returns: --
| loadLevel			arguments: level			returns: --
| nextLevel			arguments: --				returns: 'level (0 if there's no next level)
| gotoLevel			arguments: levelNumber		returns: --
| gotoNextLevel		arguments: --				returns: --
| createGoal		arguments: x y				returns: --

#actions 'defaultAction 'platform1Action 'platform2Action

#:currentLevel 0

#:changeLevel 0

#:levels 24 "r4\fabrizzio\level1.fbl" "r4\fabrizzio\level2.fbl" 0
			"r4\fabrizzio\level3.fbl" "r4\fabrizzio\level4.fbl"
			"r4\fabrizzio\level5.fbl" "r4\fabrizzio\level6.fbl" 0


| arguments: 'list listCnt | returns: --
::setActions
	( 0 >? )(						| 'act cnt
		swap
		| Set action code
		dup 44 + dup @				| cnt 'act 'action actionNumber
		2 << 'actions +				| cnt 'act 'action actionNumber*4+'actions
		@							| cnt 'act 'action 'properAction
		swap !						| cnt 'act							| action = 'properAction

		| Correct x & y coordinates
		dup @ 						| cnt 'act x
		32 / 16 << 15 / 14 *		| cnt 'act toFloat(x/32)
		over !						| cnt 'act 							| x = toFloat(x/32)
		dup 4 + @					| cnt 'act y
		32 / 25 - 16 << 15 / 14 *	| cnt 'act toFloat(y/32)-25
		over 4 + !					| cnt 'act							| y = toFloat(y/32)

		nodeBytes + swap
		1 -
	)
	2drop
	;

| arguments: level | returns: --
::loadLevel
	'listob swap LOAD			| LOAD | direccion "nombredearchivo" -- findireccion
	drop						| --

	'listenCnt dup @ 4 >> swap !
	'listobCnt dup @ 4 >> swap !
	'listfxCnt dup @ 4 >> swap !

	'listfx listfxCnt setActions
	'listen listenCnt setActions
	'listob listobCnt setActions

	CreatePlayer
	;

| arguments: -- | returns: 'level (0 if there's no next level)
::nextLevel
	currentLevel levels * 4 + 'levels +		| 'levels+(currentLevel*chars+4)
	dup @
	0? ( nip )( drop )
	;

| arguments: levelNumber | returns: --
::gotoLevel
	1 - levels * 4 + 'levels +		| 'levels+((levelNumber-1)*chars+4)
	loadLevel
	;

| arguments: -- | returns: Boolean
::gotoNextLevel
	nextLevel

	1? (
		'currentLevel dup @ 1 + swap !
		loadLevel
		1
	)(
		drop
		0
	)
	;

| arguments: 'particle | returns: newAddr
::goalAction
	dup @alpha alpha
	'spr_goal over @xy DrawExt
	255 alpha				| 'particle
	
	dup 'player hit? 1? (
		drop
		1 'changeLevel !
	)(
		drop
	)
	;

| arguments: x y | returns: --
::createGoal
	listobCnt listobSize >=? (
		drop
		;
	)(
		drop
	)
	
	swap >r >r
	
	-1					| tl
	255					| alpha
	2					| flags = visible
	'defaultHitAction	| hitAction
	'goalAction			| action
	0.5					| vmask
	1.0					| hmask
	0.25				| gravityDir
	0					| gravity
	0					| friction
	0					| vspeed
	0					| hspeed
	0					| direction
	1.0					| scale
	r> r>				| y x
	'listob
	'listobCnt
	+list
	;
