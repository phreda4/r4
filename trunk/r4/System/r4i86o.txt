| R4i86o.txt - PHREDA 2010
| Generacion de codigo para i86-FASM
|
| .. [esp] - pila R
| .. [esi] eax - pila D
|
| ebx edi - Libres
| ecx - libre | sar sal
| edx - libre | * /
|
| ebp - VFRAME pointer
| MMX - auxiliares de almacenamiento
|
| nivel 0 -- solo macros,variable y direcciones
| nivel 1 -- llamada a palabras de nivel 0
| nivel 2 -- llamada a palabras de nivel 1 y 0
|--------------------------------------------
^r4/lib/gui.txt
^r4/lib/parse.txt

^r4/system/r4code.txt
^r4/system/vstack.txt
^r4/system/r4i86.txt

^r4/lib/trace.txt

:TOS,
:TOSb,
:NOS,
:RTOS,
	"*" ;

|--------------------------------------------
:,AND	NOS, TOS, "and %w,%w" ,print ;
:,OR	NOS, TOS, "or %w,%w" ,print ;
:,XOR	NOS, TOS, "xor %w,%w" ,print ;
:,NOT	TOS, "not %w" ,print ;
:,+		NOS, TOS, "add %w,%w" ,print ;
:,-		TOS, NOS, "sub %w,%w" ,print ;
:,*		NOS, TOS, "imul %w,%w" ,print ;
:,/		NOS, TOS, "idiv %w,%w" ,print ;
:,*/
	"cdq" ,ln
	NOS, "imul %w" ,print ,cr
	TOS, "idiv %w" ,print ;

:,*>>
	"cdq" ,ln
	"imul dword [esi]" ,ln
	"shrd eax,edx,cl" ,ln ;

:,<</
	"cdq" ,ln
    TOSb, "shld eax,edx,%w" ,print cr
	NOS, "idiv %w" ,print ;

:,/MOD
	"cdq" ,ln TOS, "idiv %w" ,print ;

:,MOD
	TOS, "idiv %w" ,print ,cr
	"mov eax,edx" ,ln ;

:,<< TOS, NOS, "sal %w,%w" ,print ;
:,>> TOS, NOS, "sar %w,%w" ,print ;

:,ABS
	"cdq" ,ln
	NOS, "add %w,edx" ,ln
	NOS, "xor %w,edx" ,ln ;

:,CLZ
	TOS, dup "bsr %w,%w" ,print ,cr
	TOS, "xor %w,31" ,print ;

:,NEG 	TOS, "neg %w" ,print ;
:,1+	TOS, "add %w,1" ,print ;
:,1-	TOS, "add %w,-1" ,print ;
:,4+ 	TOS, "add %w,4" ,print ;
:,2/ 	TOS, "sar %w,1" ,print ;
:,2* 	TOS, "sal %w,1" ,print ;

|---------------------
:,EXEC
	TOS, "mov ecx,%w" ,print
   	"or ecx,ecx" ,ln
	"jz @f" ,ln
	"call ecx" ,ln
	"@@:" ,ln ;
	;

:,EXECx1 | 2 >> + @ exec
	"mov ecx,[eax*4+ebx]" ,ln
	"call ecx" ,ln ;


:,>R	TOS, "push %w" ,print ;
:,>Rv	TOS, RTOS, "mov %w,%w" ,print ;

:,R>    TOS, "pop %w" ,print ;
:,R>v   ;

:,R 	RTOS, TOS, "mov %w,%w" ,print ;
:,R+    TOS, RTOS, "add [%w],%w" ,print ;

:,R!+
	TOS, RTOS, "mov [%w],%w" ,print ,cr
	RTOS, "add %w,4" ,print ;

:,R@+
	RTOS, TOS, "mov %w,[%w]" ,print ,cr
	RTOS, "add %w,4" ,print ;

:,RDROP
	;

:,@		TOS, TOS, "mov %w,dword [%w]" ,print ;
:,C@	TOS, TOS, "movsx %w,byte [%w]" ,print ;
:,W@    TOS, TOS, "movsx %w,word [%w]" ,print ;

:,@x1	"lea %w,[%w+%w]" ,print ;
:,@x2	"lea %w,[%w+%w*%w]" ,print ;
:,@x3	"lea %w,[%w+%w+%w*%w]" ,print ;

:,!ex	"mov [%w+%w*%w],%w" ,print ;

:,!		NOS, TOS, "mov [%w],%w" ,print ;
:,C!    NOS, TOS, "mov byte [%w],%w" ,print ;
:,W!    NOS, TOS, "mov word [%w],%w" ,print ;

:,+!    TOS, NOS, "add [%w],%w" ,print ;
:,W+!   TOS, NOS, "add word [%w],%w" ,print ;
:,C+!   TOS, NOS, "add byte [%w],%w" ,print ;

:,!+
	NOS, TOS, "mov [%w],%w" ,print ,cr
	TOS, "add %w,4" ,print ;
:,W!+
	"mov word [%w],%w" ,print ,cr
	TOS, "add %w,2" ,print ;
:,C!+
	"mov byte [%w],%w" ,print ,cr
	TOS, "add %w,1" ,print ;

:,@+
	"mov %w,[%w]" ,print ,cr
	TOS, "add %w,4" ,print ;

:,W@+
	"movsx %w,word [%w]" ,print ,cr
	TOS, "add %w,2" ,print ;

:,C@+
	"movsx %w,byte [%w]" ,print ,cr
	TOS, "add %w,1" ,print ;

|------------------------------------
:,0?
	TOS, dup "or %w,%w" ,print ,cr
	"jnz " ,s ;
:,+?
	TOS, dup "or %w,%w" ,print ,cr
	"js " ,s ;
:,-?
	TOS, dup "or %w,%w" ,print ,cr
	"jns " ,s ;
:,1?
	TOS, dup "or %w,%w" ,print ,cr
	"jz " ,s ;

:,=?
	TOS, NOS, "cmp %w,%w" ,print ,cr
	"jnz " ,s ;
:,<?
	TOS, NOS, "cmp %w,%w" ,print ,cr
	"jge " ,s ;
:,>?
	TOS, NOS, "cmp %w,%w" ,print ,cr
	"jle " ,s ;
:,<=?
	TOS, NOS, "cmp %w,%w" ,print ,cr
	"jg " ,s ;
:,>=?
	TOS, NOS, "cmp %w,%w" ,print ,cr
	"jl " ,s ;
:,<>?
	TOS, NOS, "cmp %w,%w" ,print ,cr
	"jz " ,s ;
:,and?
	TOS, NOS, "test %w,%w" ,print ,cr
	"jz " ,s ;
:,nand?
	TOS, NOS, "test %w,%w" ,print ,cr
	"jnz " ,s ;

|--------- Sistema
:,END   	"jmp SYSEND" ,ln ;

:,DIR		"call SYSDIR" ,ln ;
:,FILE  	"call SYSFILE" ,ln ;
:,FSIZE 	"call SYSFSIZE" ,ln ;
:,VOL   	"call SYSVOL" ,ln ;
:,LOAD  	"call SYSLOAD" ,ln ;
:,SAVE  	"call SYSSAVE" ,ln ;
:,UPDATE 	"call SYSUPDATE" ,ln ;
:,MSEC		"call SYSMSEC" ,ln ;
:,TIME  	"call SYSTIME" ,ln ;
:,DATE  	"call SYSDATE" ,ln ;
:,RUN  		"call SYSRUN" ,ln ;
:,CLS       "call SYSCLS" ,ln ;
:,REDRAW    "call SYSREDRAW" ,ln ;
:,>XFB      "call SYSTOXFB" ,ln ;
:,XFB>      "call SYSXFBTO" ,ln ;

:,MEM   	"mov eax,FREE_MEM" ,ln ;
:,FRAMEV    "mov eax,SYSFRAME" ,ln ;
:,XFB       "mov eax,XFB" ,ln ;

:,SW    	"mov eax,[SYSW]" ,ln ;
:,SH    	"mov eax,[SYSH]" ,ln ;
:,KEY		"mov eax,[SYSKEY]" ,ln ;
:,BMOUSE 	"mov eax,[SYSBM]" ,ln ;

:,KEY! 		"mov [SYSKEY],eax" ,ln ;
:,PAPER		"mov [SYSPAPER],eax" ,ln ;

:,SETXY | x y --
	"imul eax,dword [SYSW]" ,ln
	"add eax,[esi]" ,ln
	"lea ebp,[SYSFRAME+eax*4]" ,ln ;

:,PX+!	| s --
	"lea ebp,[ebp+eax*4]" ,ln ;

:,PX!+	| rgb --
	"mov [ebp],eax" ,ln
	"add ebp,4" ,ln ;

:,PX@	| -- rgb
	"mov eax,[ebp]" ,ln ;

:,XYMOUSE | -- x y
	"lea esi,[esi-4]" ,ln
	"mov eax,[SYSXYM]" ,ln
	"mov ecx,eax" ,ln
	"and ecx,$ffff" ,ln
	"shr eax,16" ,ln
	"mov [esi],ecx" ,ln ;

|-----------definiciones en asmbase.txt ---------------
:,MOVE :,MOVE> :,CMOVE :,CMOVE>
:,SQRT
:,INK :,INK@ :,ALPHA :,OP :,CP :,LINE :,CURVE :,PLINE :,PCURVE
:,POLI :,FCOL :,FCEN :,FMAT :,SFILL :,LFILL :,RFILL :,TFILL

|-- falta definir
:,CNTJOY :,GETJOY
:,SLOAD :,SPLAY :,MLOAD :,MPLAY
:,OPENURL
:,DOCINI :,DOCEND :,DOCAT :,DOCLINE :,DOCTEXT :,DOCFONT :,DOCBIT
:,DOCRES :,DOCSIZE

:,SYSTEM ;

|---- nivel 0 - sin desordenar la pila
#nivel0

,0? ,+? ,-? ,1? ,=? ,<? ,>? ,<=? ,>=? ,<>? ,AND? ,NAND? |..30

,>R ,R> ,R ,R+ ,R@+ ,R!+ ,RDROP					|--- pila direcciones  52
,AND ,OR ,XOR ,NOT  								|--- logicas
,+ ,- ,* ,/ ,*/ ,*>> ,/MOD ,MOD ,ABS  			|--- aritmeticas
,SQRT ,CLZ ,<</
,NEG ,1+ ,4+ ,1- ,2/ ,2* ,<< ,>> | 73
,@ ,C@ ,W@ ,! ,C! ,W! ,+! ,C+! ,W+!  			|--- memoria
,@+ ,!+ ,C@+ ,C!+ ,W@+ ,W!+ | 88
,MOVE ,MOVE> ,CMOVE ,CMOVE>
,MEM ,DIR ,FILE ,FSIZE ,VOL ,LOAD ,SAVE			|--- memoria bloques
,UPDATE
,XYMOUSE ,BMOUSE
,KEY! ,KEY
,CNTJOY ,GETJOY
,MSEC ,TIME ,DATE ,END ,RUN 				|--- sistema
,SW ,SH ,CLS ,REDRAW ,FRAMEV  						|--- pantalla
,SETXY ,PX+! ,PX!+ ,PX@
,XFB ,>XFB ,XFB>
,PAPER ,INK ,INK@ ,ALPHA							|--- color
,OP ,CP ,LINE ,CURVE ,PLINE ,PCURVE ,POLI		|--- dibujo
,FCOL ,FCEN ,FMAT ,SFILL ,LFILL ,RFILL ,TFILL
,SLOAD ,SPLAY	,MLOAD ,MPLAY					|--- Sonido
,OPENURL
,DOCINI ,DOCEND ,DOCAT ,DOCLINE ,DOCTEXT ,DOCFONT ,DOCBIT ,DOCRES ,DOCSIZE  |-- impresora
,SYSTEM

| compila nivel 0 de palabras
:,token1 | a -- a.
	@+ dup
	$ff and 2 << 'nivel0 + @ exec
	drop ;

::,compword | nro --
	";OPTIMIZADO" ,print ,cr

	nro>toklen
	( 1? )( 1- swap	,token0 swap )
	2drop ;

