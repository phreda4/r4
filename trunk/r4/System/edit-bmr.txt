| Editor de bmr (BITMAPR)
| PHREDA 2010
|--------------------------------------------------
^r4/lib/gui.txt
^r4/lib/dlg.txt
^r4/lib/sprite.txt
^r4/lib/trazo.txt
^r4/lib/leebmp.txt

^r4/lib/trace.txt

|-- ancho alto
#name		| nombre
#wpx #hpx	| size
#res 		|olucion
#frame  	| bitmap
#inim

|-- pantalla
#xi #yi		| donde esta el pixel 0,0
#wi #hi		| ancho y alto de todo los pixels

|-- origen
#xo #yo		| origen de pantalla

#res 2

#xa #ya	| x y 16.16
#xs #ys

#xa1 #ya1

|---------------------------------------
::bmr.name! | "nombre" --
	'name ! ;

::bmr.data! | memoria --
	@+
	dup 12 >> $fff and 'wpx !
	dup $fff and 'hpx !
	24 >> 'res !
	'frame ! ;

|---------------------------------------
:bmr.size! | w h --
	over 12 << over or
	res 24 << or
	frame 4 - !
	'hpx ! 'wpx !

:ajusta
	wpx res << sw >? ( sw nip ) 'wi !
	hpx res << sh >? ( sh nip ) 'hi !
	sw 2/ wi 2/ - 'xi !
	sh 2/ hi 2/ - 'yi !

:ajustap
	xi -? ( 0 nip ) 'xo !
	yi -? ( 0 nip ) 'yo !
	1.0 res >> dup 'xs ! 'ys !
	;

|----- interface con el generador
::bmrW | -- ancho ; en dwors para generar codigo
	wpx ;

::bmrSize | -- largo ; en bytes
	wpx hpx * 2 << 4+ ; | 4+ por el dword de info(res|h|w)

|---- dibujo en frame
:bmr!m | x y --
	2dup whin 0? ( 3drop ; ) drop | no dibuja afuera
	yi - res >> swap xi - res >> swap
:bmr!
	wpx * + 2 <<
	frame + coloractual swap ! ;

:bmr@m | x y -- c
	yi - res >> swap xi - res >> swap
:bmr@ | x y -- c
	wpx * + 2 << frame + @ ;

|-- dibujo
:getxybmr | x y -- c
	xa 16 >> ya 16 >>
	wpx * + 2 << frame + @ ;

:getxybmr-modo-bit | .x .y -- c
	wpx 16 *>> + res << frame + @ ;

|-- dibujar sobre w h cx cy
:framegetpixel
	xa 16 >> ya 16 >>
	wpx * + 2 << frame + @
	;

:drawmap | --
	xa1 'xa !
	ya1 'ya !

	xo yo setxy
	sw wi - | columna
	hi ( 1? )(
		wi ( 1? )(
			framegetpixel px!+
			xs 'xa +!
			1- ) drop
		over px+!
		ys 'ya +!
		pick2 'xa !
		1- ) drop
	drop
	;

|--- dibuja
:drawbmr | --
	xi wi 2/ + 1- yi hi 2/ + 1-  'yc ! 'xc !
	wi 1+ 'w ! hi 1+ 'h !
	blanco gc.box
	-2 dup 'w +! 'h +!
	drawmap	;

|---- zoom
:bz+
	res 1+ 6 >? ( 0 nip ) 'res !
	ajusta
	;

:bz-
	res 1- -? ( 6 nip ) 'res !
	ajusta
	;

|-----------------------------------
::resetbmr
	frame wpx hpx *
	( 1? )( 1-
		0 rot !+ swap ) 2drop
	;

:borrodib
	"Borro Dibujo ?" dlgsino
	1? ( resetbmr ) drop
	;

|---- debug
:dumpdibujo
	hpx wpx "%dx%d" print cr
|	bmrmap> bmrmap ( over <? )( @+ "%d " print ) 2drop
 	;

|---- cambia resolucion
#winRes 0 10 32 128 256 "WxH"
:dlgRes
	[ 16 dup bmr.size! ; ] "16x16" sp btnt cr cr2
	[ 32 dup bmr.size! ; ] "32x32" sp btnt cr cr2
	[ 64 dup bmr.size! ; ] "64x64" sp btnt cr cr2
	[ 128 dup bmr.size! ; ] "128x128" sp btnt cr cr2
	[ 256 dup bmr.size! ; ] "256x256" sp btnt cr cr2
	[ 1024 dup bmr.size! ; ] "1kx1k" sp btnt
	;

|--- carga bmp
:cargabmp
	256 dup gc.window
	guiEmpty

	gc.fbox
	;

:modobmr
	;

:savebmr | dump2inteface
	;

:clonebmr
	;

|--- modo dibujando
:mododibuja
	[ 'bmr!m vop! ; ]
	[ xymouse vline! ; ]  guiDnMove
	;

:bododibuja
	violeta
	'resetbmr "CLS" sp btnt
	cyan
	'savebmr "SAVE" sp btnt
	'clonebmr "CLONE" sp btnt
	'exit "CANCEL" sp btnt

	cminilapiz  ;

|--- modo hoja
#xv #yv

:vista.move
	xymouse
	dup yv - 'yi +! 'yv !
	dup xv - 'xi +! 'xv !
	ajustap
	xi wi 2/ + 1- yi hi 2/ + 1-  'yc ! 'xc !

	;
:vista.dn
	xymouse 'yv ! 'xv ! ;

:modozoom
	'vista.dn 'vista.move guiDnMove ;

:bodozoom
	'bz- "Z-" sp btnt
	'bz+ "Z+" sp btnt

	cminimano ;

|-------------------
:pick.dn
	xymouse getpixel 'coloractual ! ;

:modopick
	'pick.dn 'pick.dn guiDnMove ;

:bodopick  cminiflecha ;

|--------------------
:modomenu
	;

:bodomenu
	'cargabmp "BMP" sp btnt
	'modobmr "MODO" sp btnt

	cminimano  ;

#s00.spr | spr ctrl-E
 $B8EC1BC1 $AF511803 $EB2D2703 $513FD543 $191ED073 $B8EC1BCA $3CF0DD47 $C37F1C68 $FFFFFFC
 $E $B7DCDE51 $BCAD0083 $E5D10D53 $C0684CF3 $B7DCDE5A $EC5CCA07 $C9E839C8 $FFFFFFC
 $E 0

#s01.spr | spr ctrl-E
 $DA9EC3B1 $A6C6C3B2 $A6C7ACB4 $A6C495B2 $DA9C95B4 $E6C95B2 $E6FACB4 $E6EC3B2 $DA9EC3B9
 $FA203797 $B6CA7498 $FFFFFFC $E $28146031 $12B46032 $12B4BC24 $12B51802 $28151804
 $3D751802 $3D74BC24 $3D746032 $28146039 $2E18D207 $E084838 $FFFFFFC $E 0

#s10.spr | spr ctrl-E
 $F33115E1 $BFE00663 $FDE2FD63 $F7E69E3 $5582A7E3 $5A53D773 $278CDE53 $21204CF3 $3A439523
 $292712C3 $EAA3F9A3 $220EF63 $F33115EA $43BCD077 $CFEACF78 $FFFFFFC $E 0

#s11.spr | spr ctrl-E
 $8B0811 $C3170812 $C317FDE4 $C314F3B2 $88F3B4 $3DFCF3B2 $3DFFFDE4 $3DFF0812 $8B0819
 $2E80B6D7 $D2534618 $FFFFFFC $E $3376401 $E07B6402 $E0780664 $E078A8E2 $334A8E4
 $25F0A8E2 $25F00664 $25F36402 $3376409 $1C747EB7 $E85F8B08 $FFFFFFC $E 0

#modov 0
#listaa mododibuja modozoom modopick modomenu
#listab bododibuja bodozoom bodopick bodomenu
#listas s00.spr s01.spr s10.spr s11.spr
|-----------------------------------

::editandobmr
	usogui
	ajusta
| name file.set!
	33
	show clrscr
        drawbmr
		'listaa modov 2 << + @ exec

		scr 32 gc.botton home cr2
		font-vard-12-bold
		dlg.color sp
		'modov 'listas 4 sp btnvs

		gris
		'dlgRes 'winRes guiWin | grosor

		sp sp
		rojo
		'exit dup >esc< "EXIT" sp btnt
		'listab modov 2 << + @ exec

		scr home verde
		dup "%d" print
 		;

