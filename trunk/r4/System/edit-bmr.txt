| Editor de bmr (BITMAPR)
| PHREDA 2010
|--------------------------------------------------
^r4/lib/gui.txt
^r4/lib/input.txt
^r4/lib/dlg.txt
^r4/lib/trazo.txt
^r4/lib/leebmp.txt
^r4/lib/bmr.txt

^r4/lib/trace.txt

#bmrm #bmrw #bmrh

#orden 0
#nrormt 0
#nomrmt )( 32
#modo

#color $ff

#zoom 2
#xi #yi | donde esta el pixel 0,0

#xv #yv	| aux para mover

:refreshbmr
	bmr.wh@
	zoom << 'bmrh !
	zoom << 'bmrw !
	bmr.res@ 'bmrm !
	;

|---- dibujo en frame
::bmr@m | x y -- c
	2dup whin 0? ( 3drop ; ) drop | no obtiene
	yi - zoom >> swap xi - zoom >> swap
	bmr@ ;

:bmr!m32
	color rot rot
:bmr!m | c x y --
	2dup whin 0? ( 3drop ; ) drop | no dibuja afuera
	yi - zoom >> swap xi - zoom >> swap
	bmr! ;

|*******************************
:ajusta
	bmr.wh@
	sh 2/ swap zoom << 2/ - 'yi !
	sw 2/ swap zoom << 2/ - 'xi !
	;

:drawbmr | --
	bmrm 1 and? ( bmrw bmrh xi yi drawalphagrid ) drop
	xi yi bmrw bmrh bmr.drawscalei
	bmrh dup 2/ yi + 'yc ! 2 + 'h !
	bmrw dup 2/ xi + 'xc ! 2 + 'w !
	blanco gc.box
	;

|-----------------------------------
:borrodib
	"Borro Dibujo ?" dlgsino
	1? ( bmr.clear ) drop
	;

|---- cambia resolucion
:ajustawh! | w h --
	bmr.wh!
	ajusta ;

:set32
	0 bmr.res! refreshbmr ;
:set32A
	1 bmr.res! refreshbmr ;

#wbs )( 8
#hbs )( 8

#winRes 0 10 32 256 256 "BMR"
:dlgRes
	" Tipo:" print cr
	'set32 "32" sp link
	'set32A "32A" sp link cr
	" Resolucion:" print cr
	[ 16 dup ajustawh! ; ] "16x16" sp link
	[ 32 dup ajustawh! ; ] "32x32" sp link
	[ 64 dup ajustawh! ; ] "64x64" sp link cr
	[ 128 dup ajustawh! ; ] "128x128" sp link
	[ 256 dup ajustawh! ; ] "256x256" sp link cr

|	" Ancho:" print 'wbs 4 input cr
|	" Alto:" print 'hbs 4 input cr
	;

|------------------------------
:addtrazo
	trazo.cnt 2 <? ( drop ; ) drop
	;

:mododraw
	drawbmr
	[ 'bmr!m32 vop! ; ] [ xymouse vline! ; ]  guiDnMove

|	xi yi bmr.drawin
	color ink
|	'addtrazo trazo.draw

	verde
	0 "DRAW" sp btnt
	verde oscuro
	[ 1 'modo ! ; ] "EDIT" sp btnt
	[ 2 'modo ! ; ] "VISTA" sp btnt
	sp
	violeta
	cyan
|	'savebmr "SAVE" sp btnt
|	'exit "CANCEL" sp btnt
	;

|------EDIT
:pick.dn
	xymouse getpixel 'color ! ;

:cargabmp
| BMP FILE
| LOAD
	256 dup gc.window

	gc.fbox
	;

:clonebmr
	;

:modoedit
	drawbmr
	'pick.dn 'pick.dn guiDnMove

	verde oscuro
	[ 0 'modo ! ; ] "DRAW" sp btnt
	verde
	0 "EDIT" sp btnt
	verde oscuro
	[ 2 'modo ! ; ] "VISTA" sp btnt
	sp
	cyan oscuro
	'cargabmp "BMP" sp btnt
	'clonebmr "CLONE" sp btnt
	rojo oscuro
	'bmr.clear "CLS" sp btnt
	;

|--- modo vista
:vista.dn
	xymouse 'yv ! 'xv ! ;

:vista.move
	xymouse
	dup yv - 'yi +! 'yv !
	dup xv - 'xi +! 'xv !
	;

:bz+ zoom 1+ 6 >? ( 0 nip ) 'zoom ! refreshbmr ;
:bz- zoom 1- -? ( 6 nip ) 'zoom ! refreshbmr ;

:modovista
	drawbmr
	'vista.dn 'vista.move guiDnMove
	verde oscuro
	[ 0 'modo ! ; ] "DRAW" sp btnt
	[ 1 'modo ! ; ] "EDIT" sp btnt
	verde
	0 "VISTA" sp btnt
	sp
	cyan oscuro
	'ajusta "CENTER" sp btnt
	'bz- "Z-" sp btnt
	'bz+ "Z+" sp btnt
	;

|------- modos
#modos 'mododraw 'modoedit 'modovista

:modoactual
	modo 2 << 'modos + @ exec ;

:main
	ajusta
	show clrscr cr2
		rojo
		'exit dup >esc< "EXIT" sp btnt
		modoactual
		scr 32 gc.botton home cr2
		font-vard-12-bold
		sp 'color dlgcolora
		gris
		'dlgRes 'winRes guiWin | grosor
		verde dup " - %d -" print
		cminiflecha
 		;


:   33 mark
	"mem/notepad.bmr" bmr.load
	$ffff 'here +!
	refreshbmr
	main
	"mem/notepad.bmr" bmr.save
	;
