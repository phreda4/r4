| Editor de bmr (BITMAPR)
| PHREDA 2010
|--------------------------------------------------
^r4/lib/gui.txt
^r4/lib/dlg.txt
^r4/lib/sprite.txt
^r4/lib/trazo.txt
^r4/lib/leebmp.txt

^r4/lib/trace.txt


|-- ancho alto
#wpx #hpx
#bmrmap
#bmrmap>

|-- pantalla
#xi #yi		| donde esta el pixel 0,0
#wi #hi		| ancho y alto de todo los pixels

|-- origen
#xo #yo		| origen de pantalla
#wo #ho		| ancho y alto que dibuja en pantalla
#xd #yd

#res 16

#xa #ya	| dibujo con zoom
#xs #ys

::bmrW
	wpx ;

:bmr!m | x y --
	yi - res / swap xi - res / swap
:bmr!
	wpx * + 2 <<
	bmrmap + coloractual swap ! ;

:bmr@m | x y -- c
	yi - res / swap xi - res / swap
:bmr@ | x y -- c
	wpx * + 2 << bmrmap + @ ;

:ajustai |
	| imagen real
	wpx res * sw >? ( sw nip ) 'wi !
	hpx res * sh >? ( sh nip ) 'hi !
	sw 2/ wi 2/ - 'xi !
	sh 2/ hi 2/ - 'yi !

	xi -? ( 0 nip ) 'xo !
	yi -? ( 0 nip ) 'yo !

	wi 'wo !
	hi 'ho !
	0 dup 'xd ! 'yd !
|	xo wi + sw >? ( sw - ) 'wo !
|	yo hi + sh >? ( sh - ) 'ho !

	1.0 res / dup 'xs ! 'ys !
	;

|-- dibujo


:getxybmr | x y -- c
	xa 16 >> ya 16 >>
	wpx * + 2 << bmrmap + @ ;

:drawmap | --
	xi -? ( neg res / )( 0 nip ) 16 << dup 'xa !
	yi -? ( neg res / )( 0 nip ) 16 << 'ya !
	xo yo setxy
	sw wo - | columna
	0 ( ho <? )(
		0 ( wo <? )(
			getxybmr px!+
			xs 'xa +!
			1+ ) drop
		over px+!
		ys 'ya +!
		pick2 'xa !
		1+ ) drop
	2drop
	;

:drawbmr | --
	xi wi 2/ + 1- yi hi 2/ + 1-  'yc ! 'xc !
	wi 1+ 'w ! hi 1+ 'h !
	blanco gc.box
	-2 dup 'w +! 'h +!
	[ 'bmr!m tpenini ; ] 'tpenline 0 guiMap
	drawmap	;

|---- zoom
:bz+
	res 1+ 16 >? ( 1 nip ) 'res !
	ajustai
	;

:bz-
	res 1- 0? ( 16 nip ) 'res !
	ajustai
	;

|-----------------------------------
::resetbmr
	bmrmap ( bmrmap> <? )(
		0 swap !+ ) drop
	;

:borrodib
	"Borro Dibujo ?" dlgsino
	1? ( resetbmr ) drop
	;

|---- debug
:dumpdibujo
	hpx wpx "%dx%d" print cr
|	bmrmap> bmrmap ( over <? )( @+ "%d " print ) 2drop
 	;

|---- cambia resolucion
:resolucion!
	| falta ajustar el dibujo

	2dup * 2 << bmrmap + 'bmrmap> !
	'wpx ! 'hpx !
	ajustai
	;

:winresol
	gris
	tgc.push
	128 256 gc.window
	guiEmpty
	gc.fbox home cr2
	[ 16 dup resolucion! ; ] "16x16" sp btnt cr cr2
	[ 32 dup resolucion! ; ] "32x32" sp btnt cr cr2
	[ 64 dup resolucion! ; ] "64x64" sp btnt cr cr2
	[ 128 dup resolucion! ; ] "128x128" sp btnt cr cr2
	[ 256 dup resolucion! ; ] "256x256" sp btnt cr cr2
	[ 1024 dup resolucion! ; ] "1kx1k" sp btnt
	tgc.pop
	;

#winr

:resolucion
	winr 1? ( winresol ) drop
	[ winr not 'winr ! ; ] hpx wpx " %dx%d " sp amarillo btnt
	;

|--- carga bmp
:cargabmp
	256 dup gc.window
	guiEmpty

	gc.fbox
	;

:modobmr
	;

:savebmr | dump2inteface
	;

:clonebmr
	;

|-----------------------
#interface 0

:copy
	here 'bmrmap !
	interface @+ swap @ | start end
	swap
	@+ >uv 'wpx ! 'hpx !
	( over <? )( @+ , ) 2drop
	here 'bmrmap> !

	ajustai	;

:recopy
	here
	wpx hpx uv> ,
	bmrmap ( bmrmap> <? )(
		@+ , ) drop
	here swap  interface !+ !
	;

:clsbmr
	bmrmap ( bmrmap> <? )(
		0 swap !+ ) drop

	;
:saveexit
	recopy exit ;

|-----------------------------------
#name
::bmrname!
	'name ! ;

:editabmr
	inigui
	'saveexit >esc<
	trazo.ini
	show clrscr
		|		zoomA exec
        drawbmr

		|home
|		dumpdibujo
		scr 32 gc.botton home
		font-vard-12-bold
		dlg.color
		cr2 "       " print
		blanco
		resolucion
		violeta
		name dlg.file
		sp sp
		rojo
		'saveexit "ESC-SAVE+EXIT" sp btnt
 		azul
		'savebmr "SAVE" sp btnt
		'clonebmr "CLONE" sp btnt
		'exit "CANCEL" sp btnt
		cyan


		'bz- "Z-" sp btnt
		'bz+ "Z+" sp btnt

		'cargabmp "BMP" sp btnt
		'clsbmr "CLS" sp btnt
		'modobmr "MODO" sp btnt


		scr |trazo.in
		home
	 	trazo.debug
		gui.debug

		cminilapiz ;


::editandobmr  | 'datastart --
	'interface !
	mark
	copy
	editabmr
	empty ;


