| pilas virtuales (datos y retorno)
| para emulador y compilador
| PHREDA 2011
|------------------------------------

|--- Pila DATOS
| 		valor 		tipo
| TOS = dpila>-4  dpila>-8
|       -12       -16
|       -20       -24
|       -28       -32
#:dpila )( 2048
#:dpila> 'dpila

::mappila | exe --
	'dpila ( dpila> <? )( 4+ @+ pick2 exec ) 2drop ;

::d.ini 'dpila 'dpila> ! ;
:d.cnt | -- cnt
	dpila dpila> - 3 >> ;

::d.pop | -- nro
	dpila> 8 -
	dup 'dpila> ! 4+ @ ;
::d.pop2
	-16 'dpila> +!
	dpila> 4+ @+ swap 4+ @ ;
::d.pop3
	-24 'dpila> +!
	dpila> 4+ @+ swap 4+ @+ swap 4+ @ ;

::d.get dpila> 4 - @ ;
::d.get2 dpila> 12 - @ ;

:d.push | nro tipo --
	dpila> !+ !+ 'dpila> ! ;

::d.pushDec		$0 d.push ;
::d.pushHex		$1 d.push ;
::d.pushBin		$2 d.push ;
::d.pushFix		$3 d.push ;
::d.pushStr		$4 d.push ;
::d.pushVar		$5 d.push ;
::d.pushDVar	$6 d.push ;
::d.pushDCod	$7 d.push ;
::d.pushCNum	$8 d.push ;
::d.pushCStr	$9 d.push ;
::d.pushCDVar	$10 d.push ;
::d.pushCDCod	$11 d.push ;
::d.pushEXE		$11 d.push ;

::d.pushREG		$12 d.push ;

:d.TOSt | -- tipodetos
	dpila> 8 - @ ;

:d.NOSt | -- tipodenos
	dpila> 16 - @ ;

:d.NOS2t | -- tipodenos2
	dpila> 24 - @ ;

:d.push | nro tipo --
	dpila> !+ !+ 'dpila> ! ;

:d.setReg | nro tipo lugar --
	1+ 3 << dpila> swap - !+ ! ;

|-------- operaciones de pila
::vDROP		-8 'dpila> +! ;
::v2DROP 	-16 'dpila> +! ;
::v3DROP 	-24 'dpila> +! ;
::v4DROP 	-32 'dpila> +! ;
::vDUP
	dpila> 8 - >r
	r@+ r@+ swap
	r!+ r!+ r> 'dpila> ! ;
::v2DUP
	dpila> 16 - >r
	r@+ r@+ swap
	r@+ r@+ swap 2swap
	r!+ r!+ r!+ r!+
	r> 'dpila> ! ;
::vOVER
	dpila> 16 - >r
	r@+ r@+ swap r> 8 + >r
	r!+ r!+ r> 'dpila> ! ;
::vPICK2
	dpila> 24 - >r
	r@+ r@+ swap r> 16 + >r
	r!+ r!+ r> 'dpila> ! ;
::vPICK3
	dpila> 32 - >r
	r@+ r@+ swap r> 24 + >r
	r!+ r!+ r> 'dpila> ! ;
::vPICK4
	dpila> 40 - >r
	r@+ r@+ swap r> 32 + >r
	r!+ r!+ r> 'dpila> ! ;
::vSWAP
	dpila> 16 - >r
	r@+ r@+ swap
	r@+ r> @ swap
	dpila> 16 -
	!+ !+ !+ ! ;
::vNIP
	dpila> 8 - >r
	r@+ r@+ swap r> 16 -
	!+ !+ 'dpila> ! ;
::vROT
	dpila> 24 - >r
	r@+ r@+ swap
	r@+ r@+ swap
	r@+ r> @ swap 2swap
	dpila> 24 -
	!+ !+ !+ !+ !+ ! ;
::v2OVER
	dpila> 32 - >r
	r@+ r@+ swap
	r@+ r@+ swap 2swap
	r> 16 +
	!+ !+ !+ !+ 'dpila> ! ;
::v2SWAP
	dpila> 32 - >r
	r@+ r@+ swap
	r@+ r@+ swap 2swap
	r@+ r@+ swap
	r@+ r@+ swap 2swap r> 32 -
	!+ !+ !+ !+ !+ !+ !+ ! ;

|--- aritmeticas y logica
::vAND	d.pop2 AND d.pushVar ;
::vOR	d.pop2 OR d.pushVar ;
::vXOR	d.pop2 XOR d.pushVar ;
::vNOT	d.pop NOT d.pushVar ;
::v+	d.pop2 + d.pushVar ;
::v-    d.pop2 - d.pushVar ;
::v*    d.pop2 * d.pushVar ;
::v/    d.pop2 / d.pushVar ;
::v*/   d.pop3 */ d.pushVar ;
::v*>>  d.pop3 *>> d.pushVar ;
::v/MOD d.pop2 /MOD swap d.pushVar d.pushVar ;
::vMOD  d.pop2 MOD d.pushVar ;
::vABS  d.pop ABS d.pushVar ;
::vSQRT	d.pop SQRT d.pushVar ;
::vCLZ	d.pop CLZ d.pushVar ;
::v<</	d.pop3 <</ d.pushVar ;
::vNEG  d.pop NEG d.pushVar ;
::v2/   d.pop 2/ d.pushVar ;
::v2*   d.pop 2* d.pushVar ;
::v<<   d.pop2 << d.pushVar ;
::v>>   d.pop2 >> d.pushVar ;
::v1-   d.pop 1- d.pushVar ;
::v1+   d.pop 1+ d.pushVar ;
::v4+   d.pop 4+ d.pushVar ;

|----- PILA R
#:rpila )( 2048
#:rpila> 'rpila

::mappilar | exe --
	'rpila ( rpila> <? )( 4+ @+ pick2 exec ) 2drop ;

::r.ini	'rpila 'rpila> ! ;
::r.pop	-8 'rpila> +! rpila> 4+ @ ;
::r.cnt	rpila> 'rpila - 3 >> ;
:r.tos rpila> 4 - @ ;
:r.push | nro tipo --
	rpila> !+ !+ 'rpila> ! ;

::r.pushDec		$0 r.push ;
::r.pushHex		$1 r.push ;
::r.pushBin		$2 r.push ;
::r.pushFix		$3 r.push ;

::r.pushStr		$4 r.push ;
::r.pushVar		$5 r.push ;
::r.pushDVar	$6 r.push ;
::r.pushDCod	$7 r.push ;
::r.pushCNum	$8 r.push ;
::r.pushCStr	$9 r.push ;
::r.pushCDVar	$10 r.push ;
::r.pushCDCod	$11 r.push ;
::r.pushEXE		$11 r.push ;

|--- pila de direccion
::v>R		d.pop r.pushDec ;
::vR>		r.pop d.pushDec ;
::vR		r.tos d.pushDec ;
::vR+		r.pop d.pop + r.pushDec ;
::vR@+		r.pop @+ d.pushDec r.pushDec ;
::vR!+		d.pop r.pop !+ r.pushDec ;
::vRDROP	r.pop drop ;

|----- imprime pilas

:dec	@+ "%d" print ;	|::d.pushDec 0
:hex    @+ "$%h" print ;	|::d.pushHex 1
:bin    @+ "%%%b" print ;	|::d.pushBin 2
:fix    @+ "%f" print ;	|::d.pushFix 3
:str    @+ "%d" print ;	|::d.pushStr 4
:var	@+ "%d" print ;	|::d.pushVar  5
:dvar	@+ "%d" print ;	|::d.pushDVar 6
:dcod	@+ "%d" print ;	|::d.pushDCod 7
:cnum	@+ "%d" print ;	|::d.pushCNum 8
:cstr	@+ "%d" print ;	|::d.pushCStr 9
:cdvar	@+ "%d" print ;	|::d.pushCDVar 10
:cdcod	@+ "%d" print ;	|::d.pushCDCod 11

#accpp 'dec 'hex 'bin 'fix 'str 'var 'dvar 'dcod 'cnum 'cstr 'cdvar  'cdcod

:printpilai | adr -- adr++
	@+ $f and 2 << 'accpp + @ exec ;

::dumpvstack
	"D)" print
	'dpila ( dpila> <? )( sp printpilai ) drop
	cr
	"R)" print
	'rpila ( rpila> <? )( sp printpilai ) drop
	cr
	;

