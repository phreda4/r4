| r4plaino.txt
| PHREDA 2011
|---------------------------------------
| genera codigo en :r4 y lo graba en "plain.txt"
| Sin includes
| Sin locales/exportadas ::->:  ##->#
| * Sin Anonimas
| * Reemplaza Ctes
| * Copia Inlines
| * Calcula Ctes
| * Transforma Calculos
|------------------------------------------------

^r4/system/mem-ed.txt
^r4/system/r4code.txt
^r4/system/anaword.txt


|-- nombre a nro
|:nro>dicn   8 >> "w%h" mprint ;		| w<nro palabra>
:nro>dicn   8 >> 5 << 'indicepal + @ "%w" mprint ; | nombre

|----------------
:cpycad | adr --
	( c@+ 1? )( 34 =? ( drop c@+ 34 <>? ( 2drop ; ) ) ,c ) 2drop ;

:coldefw ":" ,s nro>dicn ,s ;
:coldefv "#" ,s nro>dicn ,s ;

:colitd
:colitf
:colitb
:colith tok>cte "%d" ,print ;
:colits	34 ,c tok>str cpycad 34 ,c ;

:colwor
:colvar
	nro>dicn ,s ;
:coldwo
:coldva
	"'" ,s nro>dicn ,s ;

#codei 0 coldefw coldefv colitd colith colitb colitf colits colwor colvar coldwo coldva

:,token | a -- a.
	@+ dup $ff and
:,tokenp | n t --
	12 <? ( 2 << 'codei + @ exec ; ) nip
	nro>macro ,s ;


|--- Variables
:esvariable | nro --
	dup nro>nom "#%w" ,print
	nro>tok
	( @+ dup $ff and
		1 =? ( 0 nip ) | corta con defc
		2 =? ( 0 nip ) | corta con defv
		1? )( 	 | dirv n c
		,sp
		12 <? ( 2 << 'codei + @ exec )( nip nro>macro ,s )
		$7c nand? ( ,cr )
		)
	3drop ,cr ;

|----------------------
#nroanon 0
#nroanonc 0

#totoken
#niva	| nivel de anonimas

#niv )( 1024
#niv> 'niv

:+niv | c --
	niv> c!+ 'niv> ! ;

#anonind )( 256
#anonind> 'anonind

:+ind | v --
	anonind> !+ 'anonind> ! ;

#buffaux )( 4096
#buffaux> 'buffaux

:+buf | v --
	buffaux> !+ 'buffaux> ! ;

:everyword | adr token rtoken -- adr
	16 =? ( 1 'niva +! niv> +ind )	| [
	17 =? ( -1 'niva +! )			| ]
	2drop
	niva +niv
	;

:marcaniveles | nro --
	'niv 'niv> !
	'anonind 'anonind> !
	0 'niva !
	nro>toklen over 'totoken  !
	( 1? )( 1-
		swap @+
		dup $ff and
		everyword
		swap ) 2drop
	-1 niv> c! ;

:cpyn
	over 1- 'niv - 2 << totoken +
	@ dup $ff and
	3 <? ( 2drop ; )
	16 =? ( 2drop ; ) 				| ]
	17 =? ( 2drop nroanonc " '_anon%h" ,print -1 'nroanonc +! ; )
	,sp ,tokenp ;

:copyr | n --
	'niv ( niv> <? )(
		c@+ pick2 =? ( cpyn ) drop
		$1f nand? ( ,cr )
		) 2drop ,cr ;

:cpynl | token -- token.
	@+ dup $ff and
	3 <? ( 2drop ; )
	16 =? ( 2drop ; )
	17 =? ( 2drop ,sp nroanonc " '_anon%h" ,print 1 'nroanonc +! ; )
	,sp ,tokenp ;

:copynivl | lugarniv --
	nroanon ":_anon%h" ,print
	1 'nroanon +!
	dup 'niv - 2 << totoken + | niv tok
	over c@ swap rot | niv@ tok niv
	( c@+ pick3 >=? )( | mismo nivel o mayor
		pick3 >? ( drop swap 4+ )( drop swap cpynl )
		swap ) 4drop
	,cr ;

|-------------------
:escodigo | nro --
	dup marcaniveles
	'buffaux 'buffaux> !
	|-- generar anonimos
	anonind> ( 'anonind >? )(
		4 - dup @ | lugar en niv
		copynivl
		) drop
	|-- genera principal
	nroanon 1- 'nroanonc !
	nro>nom ":%w" ,print
	0 copyr
	nroanon 'nroanonc !
	;

:gencodigo | nro --
	dup nro>var?
	1? ( drop esvariable )( drop escodigo )
	;

|----------------------
:makeplain
	0 'nroanon !
	0 'nroanonc !

	mark
	"| r4plaino.txt generator" ,s ,cr
	"|-----------------------" ,s ,cr
	0 ( cntw <? )(
		dup ind2nro gencodigo
		1+ )
	ind2nro escodigo
	"plain.txt" savemem
	empty
	;

:showprogreso
	scr
	32 gc.botton negro gc.fbox
	fonti2 |font-vard-8-bold
	home blanco
	"plain.txt generado" print
	redraw
	;

:main
	ed.load
	mark
	'ed.nombre tokencomp
	tokenpost
	makeplain
	empty
	showprogreso
	waitkey ;

: main ;