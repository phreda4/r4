| r4plaino.txt
| PHREDA 2011
|---------------------------------------
| genera codigo en :r4 y lo graba en "plain.txt"
| Sin includes
| Sin locales/exportadas ::->:  ##->#
| + Sin Anonimas
| * Reemplaza Ctes
| * Copia Inlines
| * Calcula Ctes
| * Transforma Calculos
|------------------------------------------------

^r4/system/mem-ed.txt
^r4/system/r4code.txt
^r4/system/anaword.txt


|-- nombre a nro
|:nro>dicn   8 >> "w%h" mprint ;		| w<nro palabra>
:nro>dicn   8 >> 5 << 'indicepal + @ "%w" mprint ; | nombre

|----------------
:cpycad | adr --
	( c@+ 1? )( 34 =? ( drop c@+ 34 <>? ( 2drop ; ) ) ,c ) 2drop ;

:coldefw ":" ,s nro>dicn ,s ;
:coldefv "#" ,s nro>dicn ,s ;

:colitd
:colitf
:colitb
:colith tok>cte "%d" ,print ;
:colits	34 ,c tok>str cpycad 34 ,c ;

:colwor
:colvar
	nro>dicn ,s ;
:coldwo
:coldva
	"'" ,s nro>dicn ,s ;

#codei 0 coldefw coldefv colitd colith colitb colitf colits colwor colvar coldwo coldva

:,token | a -- a.
	@+ dup $ff and
:,tokenp | n t --
	12 <? ( 2 << 'codei + @ exec ; ) nip
	nro>macro ,s ;


|--- Variables
:esvariable | nro --
	dup nro>nom "#%w" ,print
	nro>tok
	( @+ dup $ff and
		1 =? ( 0 nip ) | corta con defc
		2 =? ( 0 nip ) | corta con defv
		1? )( 	 | dirv n c
		,sp
		12 <? ( 2 << 'codei + @ exec )( nip nro>macro ,s )
		$7c nand? ( ,cr )
		)
	3drop ,cr ;

|----------------------
#nroanon 0

#totoken
#niva	| nivel de anonimas

#niv )( 1024
#niv> 'niv
:+niv	niv> c!+ 'niv> ! ;
:-niv   'niv 'niv> ! ;

#bufftipo )( 1024
#bufftipo> 'bufftipo
:+tipo  bufftipo> c!+ 'bufftipo> ! ;

#anonind )( 256
#anonind> 'anonind
:+ind 	anonind> !+ 'anonind> ! ;
:-ind	'anonind 'anonind> ! ;

#anons )( 128
#anons> 'anons
:>aa anons> !+ 'anons> ! ;
:aa> -4 'anons> +! anons> @ ;
:-aa 'anons 'anons> ! ;

#buffaux )( 4096
#buffaux> 'buffaux
:+buff	buffaux> !+ 'buffaux> ! ;
:-buff	'buffaux 'buffaux> ! ;

:es[
	1 'niva +!
	niv> +ind
	nroanon dup >aa
	8 << 16 or pick2 4 - ! | graba en token
	1 'nroanon +!
	;
:es]
	-1 'niva +!
	aa> 8 << 17 or pick2 4 - ! | graba en token
	;

:everyword | adr rtoken -- adr
	16 =? ( es[ )
	17 =? ( es] )
	drop
	niva +niv
	;

:marcaniveles | nro --
	-aa -niv -ind
	0 'niva !
	nro>toklen over 'totoken  !
	( 1? )( 1-
		swap @+ $ff and
		everyword
		swap ) 2drop
	-1 niv> c! ;

|-----------------

#maptipos
"0:#NNNFSWVwv;(|)[]x????真真真真PPPPPPPPPPPPPPPRRRRRRR222122223342111311111122@@@!!!!!!@!@!@!WWWWVWWWWWWWWWWVWWWWWerVVWWVWWWWWWWWWVWWWWWWWWWWWWWWWWWW"

:evtipos | valor bytecode --
	nip 'maptipos + c@ +tipo ;

:calculotipos | nro --
	'bufftipo 'bufftipo> !
	nro>toklen
	( 1? )( 1-
		swap @+
		dup $ff and
		evtipos
		swap ) 2drop
	0 +tipo
	;

|---- optimizadores
:resuelve11
:resuelve21
:resuelve31
:resuelve22
:buscacte
:buscainline
	;

#reglastipo
"N1"		'resuelve11
"NN2"		'resuelve21
"NNN3"		'resuelve31
"NN4"		'resuelve22
"V"			'buscacte
"W"			'buscainline
0



:= | adr c0 adrs --
	( c@+ 1? )(
		rot <>? ( exit ; )
		drop rot c@+ 0? ( exit ; )
		rot ) 4drop ;

:buscarreglas | adr --
	'reglastipo
	( c@+ 1? )(
		pick2 = 1? ( )
		) drop
	;

|------------------------
:buffp
	@+ dup $ff and
	3 <? ( 2drop ; )
	16 =? ( drop 8 >> ":_aa%h" ,print ; )
	17 =? ( drop 8 >> " '_aa%h" ,print ; )
	,sp ,tokenp ;

:+buffer | adr -- adr++
	@+ dup $ff and
	3 <? ( 2drop ; )
	16 =? ( drop +buff ; )
	17 =? ( drop +buff ; )
	drop +buff ;

:copynivlb | lugarniv --
	dup 'niv - 2 << totoken + | niv tok
	over c@
:copynivrb | lugarniv tok v
	-buff
	swap rot | niv@ tok niv
	( c@+ pick3 >=? )( | mismo nivel o mayor
		pick3 >? ( drop swap 4+ )( drop swap +buffer )
		swap ) 4drop
	|--- descaga buffer
	'buffaux ( buffaux> <? )( buffp ) drop
	,cr
	;

|-------------------
:escodigo | nro --
	dup marcaniveles
	|-- generar anonimos
	anonind> ( 'anonind >? )( 4 -
		dup @ copynivlb
		) drop
	|-- genera principal
	nro>nom ":%w" ,print
	'niv totoken 0 copynivrb
	;
|	dup calculotipos
|	"| " ,s 'bufftipo ,print ,cr

:gencodigo | nro --
	dup nro>var?
	1? ( drop esvariable )( drop escodigo )
	;

|----------------------
:makeplain
	0 'nroanon !
	mark
	"| r4plaino.txt generator" ,s ,cr
	"|-----------------------" ,s ,cr
	0 ( cntw <? )(
		dup ind2nro gencodigo
		1+ )
	ind2nro escodigo
	"plain.txt" savemem
	empty
	;

:showprogreso
	scr
	32 gc.botton negro gc.fbox
	fonti2 |font-vard-8-bold
	home blanco
	"plain.txt generado" print
	redraw
	;

:main
	ed.load
	mark
	'ed.nombre tokencomp
	tokenpost
	makeplain
	empty
	showprogreso
	waitkey ;

: main ;