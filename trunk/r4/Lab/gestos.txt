| gestos
| PHREDA 2010
|--------------
^r4/lib/gui.txt
^r4/lib/dlg.txt
^r4/lib/fontt.txt
^r4/lib/trazo.txt
^r4/lib/usedrw.txt
^r4/lib/trace.txt

#dibujo )( $ffff
#dibujo>
#dibujo<

#boxlist )( $ffff
#boxlist>

#string )( $ffff
#string>

#campocursor

|-------------
:,str | c --
	string> c!+ 'string> ! ;

:+str | "" -- index
	string> swap
	( c@+ 1? )( ,str ) ,str
	drop string - ;

|-------------
:reset
	'boxlist 'boxlist> !
	'dibujo dup 'dibujo> !+ !
	'string 'string> !
	0 'boxlist !
	0 'dibujo !
	trazo.cls
    ;

::savegst | "nombre" --
	mark
	'dibujo dibujo> over - 2 >> ,
	( dibujo> <? )( @+ , ) drop
	'boxlist boxlist> over - 2 >> ,
	( boxlist> <? )( @+ , ) drop
	'string string> over - ,
	( string> <? )( c@+ ,c ) drop
		|dibujo<
	savemem
	empty ;

::loadgst | "nombre" --
	mark
	here dup rot load
	'here !
	here =? ( drop empty reset ; )
	@+ 'dibujo swap
	( 1? )( 1- >r
		swap @+ rot !+
		r> ) drop 'dibujo> !
	@+ 'boxlist swap
	( 1? )( 1- >r
		swap @+ rot !+
		r> ) drop 'boxlist> !
	@+ 'string swap
	( 1? )( 1- >r
		swap c@+ rot c!+
		r> ) drop 'string> !
	drop
	dibujo> 'dibujo< !
	empty ;


|------------------
:box!+ | d c b a --
	boxlist> !+ !+ !+ !+ 'boxlist> ! ;

:0box
	0 boxlist> ! ;

:drawbox
	gc.push
	gris
	'boxlist ( boxlist> <? )( >r
		r@+ dup 16 >> swap $ffff and
		r@+ dup 16 >> swap $ffff and
		gcxyxy gc2win home
		8 dup 'w +! 'h +!
		gc.box
		-8 dup 'w +! 'h +!

		r@+ print
		r@+ drop |drw.draw
		r> ) drop
	gc.pop ;

:movebox |

	;

:campodraw

	campocursor 0? ( drop ; ) >r
	r@+ dup 16 >> swap $ffff and
	r@+ dup 16 >> swap $ffff and
	violeta
	gcxyxy gc2win home
	8 dup 'w +! 'h +!
	gc.box
	-8 dup 'w +! 'h +!
	r@+ print
	r@+ drop
	rdrop ;


|------------------
:drawdibujo
	coloractual ink
|	'dibujo drw.gesto
	;

|----------------
:makebox
	dibujo< dibujo> =? ( drop ; ) | no agrega si no hay trazo
|	trazo.info
	0
	pick2 "(%d)" mprint
|	trazobox box!+
	dibujo> 'dibujo< !
	;

|-----------------
|---- cursor de caja
#xcc #ycc #hcc #wcc
:cursorcaja | --
|	[ xymouse ycc - 'hcc ! xcc - 'wcc ! ; ] onMove
|	[ xymouse  'ycc ! 'xcc ! 0 dup 'hcc ! 'wcc ! ; ] onDn
|	[ +box 0 dup 2dup 'bx1 !+ !+ !+ ! ; ] onClick
	cflecha ;


|---- cursor de dibujo
:cursordibuja
	trazo.in
	clapiz ;

|---- cursor de seleccion
:cursorselec | --
	[ 0 'campocursor ! ; ] onDn
|	[ 1 1 'dibujo trazo.move ; ] onMove
	campodraw
	trazo.draw
	cmano ;


|----


:loadmem	"mem/test.gst" loadgst ;
:savemem    "mem/test.gst" savegst ;

#modoc 'cursordibuja

:dibujando!
	'cursordibuja 'modoc ! ;
:seleccionando!
	'cursorselec 'modoc ! ;

:debug
	cr verde
	trazo.debug
	|trazopoli
	cr ;

:keyenter
	modoc 'cursordibuja
	=? ( 'cursorselec )( 'cursordibuja )
	nip 'modoc ! ;

|---------------------
:main
    inigui
	'exit >esc<
|	'pasatrazo <f1>
	'keyenter <enter>
	dibujando!
	show clrscr
		font-vard-12-bold
		32 gc.top
|		verde dup " :R%d" print
|		blanco "GESTO " print

		32 gc.botton $00000f gc.hfill
		home

	| acciones
		dlg.color
		cr2 4 cols
		rojo
		sp sp sp sp sp sp sp
		sp 'exit "esc-Exit" btnt
		sp verde
		sp 'reset dup <f1> "f1-Reset" btnt

		sp [ makebox seleccionando! ; ]
		dup <f2> "f2-Box" btnt
|		sp [ rand $ffffff and dup col.clapiz! d,color ; ]
|		dup <f3> "f3-Color" btnt | color al azar
|    	sp 'makemtr dup <f4> "f4-2mtr" btnt

		scr fonti home blanco
		debug

		32 gc.botton home
		dlg.color

		32 32 gc.vbetween scr home
|		drawbox
		drawdibujo

		modoc onIDLE ;


:
mark
trazo.ini
loadmem
4 main
savemem
;

