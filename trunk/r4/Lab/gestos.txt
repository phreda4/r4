| gestos
| PHREDA 2010
|--------------
^r4/lib/gui.txt
^r4/lib/dlg.txt
^r4/lib/fontt.txt
^r4/lib/trazo.txt
^r4/lib/usedrw.txt
^r4/lib/trace.txt

#dibujo )( $ffff
#dibujo>
#dibujo<

#boxlist )( $ffff
#boxlist>

#string )( $ffff
#string>

#campocursor

#colorultimo

#zoom
#xd #yd
#xcycwh 0 0 0 0

:savebox
	xc yc w h 'xcycwh !+ !+ !+ ! ;

:loadbox
	'xcycwh @+ 'h ! @+ 'w ! @+ 'yc ! @ 'xc ! ;


|----------------
:,dib
	dibujo> !+ 0 over ! 'dibujo> ! ;

:,dibcolor
	coloractual 4 << $b  or ,dib ;

|-------------
:,str | c --
	string> c!+ 'string> ! ;

:+str | "" -- index
	string> swap
	( c@+ 1? )( ,str ) ,str
	drop string - ;

|-------------
:reset
	'boxlist 'boxlist> !
	'dibujo dup 'dibujo> !+ !
	'string 'string> !
	0 'boxlist !
	0 'dibujo !
	coloractual 1- 'colorultimo !
	trazo.cls
    ;

::savegst | "nombre" --
	mark
	'dibujo dibujo> over - 2 >> ,
	( dibujo> <? )( @+ , ) drop
	'boxlist boxlist> over - 2 >> ,
	( boxlist> <? )( @+ , ) drop
	'string string> over - ,
	( string> <? )( c@+ ,c ) drop
		|dibujo<
	savemem
	empty ;

:savemem    "mem/test.gst" savegst ;

::loadgst | "nombre" --
	mark
	here dup rot load
	'here !
	here =? ( drop empty reset ; )
	@+ 'dibujo swap
	( 1? )( 1- >r
		swap @+ rot !+
		r> ) drop 'dibujo> !
	@+ 'boxlist swap
	( 1? )( 1- >r
		swap @+ rot !+
		r> ) drop 'boxlist> !
	@+ 'string swap
	( 1? )( 1- >r
		swap c@+ rot c!+
		r> ) drop 'string> !
	drop
	dibujo> 'dibujo< !
	empty ;

:loadmem	"mem/test.gst" loadgst ;

|------------------
:box!+ | d c b a --
	boxlist> !+ !+ !+ !+ 'boxlist> ! ;

:0box
	0 boxlist> ! ;

:drawbox
	gc.push
	gris
	'boxlist ( boxlist> <? )( >r
		r@+ dup 16 >> swap $ffff and
		r@+ dup 16 >> swap $ffff and
		gcxyxy gc2win home
		8 dup 'w +! 'h +!
		gc.box
		-8 dup 'w +! 'h +!

		r@+ print
		r@+ drop |drw.draw
		r> ) drop
	gc.pop ;

:movebox |

	;

:campodraw
	campocursor 0? ( drop ; ) >r
	r@+ dup 16 >> swap $ffff and
	r@+ dup 16 >> swap $ffff and
	violeta
	gcxyxy gc2win home
	8 dup 'w +! 'h +!
	gc.box
	-8 dup 'w +! 'h +!
	r@+ print
	r@+ drop
	rdrop ;

|----------------
:makebox
	dibujo< dibujo> =? ( drop ; ) | no agrega si no hay trazo
|	trazo.info
	0
	pick2 "(%d)" mprint
|	trazobox box!+
	dibujo> 'dibujo< !
	;

|-----------------
|---- cursor de caja
#xcc #ycc #hcc #wcc
:cursorcaja | --
|	[ xymouse ycc - 'hcc ! xcc - 'wcc ! ; ] onMove
|	[ xymouse  'ycc ! 'xcc ! 0 dup 'hcc ! 'wcc ! ; ] onDn
|	[ +box 0 dup 2dup 'bx1 !+ !+ !+ ! ; ] onClick
	;


|---- cursor de dibujo
#modot
:creapoli | tr --
	trazo>xy
	xy> modot 1 =? ( 5 'modot ! ) or
	,dib
	;

:addline
	1 'modot !
	trazo.cnt 2 <? ( drop trazo.cls ; ) drop
	coloractual colorultimo <>? ( 'colorultimo ! ,dibcolor )( drop )
	'creapoli trazo.map
	trazo.cls
	;

|---- cursor de seleccion
:cursorselec | --
||	[ 0 'campocursor ! ; ] onDn
|	[ 1 1 'dibujo trazo.move ; ] onMove
	campodraw
	;

|--------- test
#string )( 1024
#string> 'string

:.c string> c!+ 'string> ! ;
:test.up 39 .c ;
:test.move 35 .c ;
:test.dn 36 .c ;

:test
	'test.up 'test.move 'test.dn guiMap ;

|--- modo de dibujo
:dibujando  'trazo.start 'trazo.add  'addline guiMap ;

|--- modo hoja
#xv #yv
:vista.up ;
:vista.move
	xymouse
	over xv - 'xc +!
	dup yv - 'yc +!
	'yv ! 'xv !
	savebox
	;
:vista.dn
	xymouse 'yv ! 'xv ! ;

:hojayzoom  'vista.dn 'vista.move 'vista.up guiMap ;

#cursormodo 'dibujando

:modohoja!	'hojayzoom 'cursormodo ! ;
:modolapiz! 'dibujando 'cursormodo ! ;


|-- poligono
#cursorp | poligono

|--- MAIN ---
:main
	0 dup fpos
	sw sh min -64 dup 2/ 'yc +! +
	dup dim
	savebox

    inigui
	'exit >esc<
|	'pasatrazo <f1>
|	'keyenter <enter>
	show clrscr

|------ DIBUJO
		loadbox
		cursormodo exec
		'dibujo nsprite
	    coloractual ink
		trazo.draw
		gc.box

		scr
		font-vard-12-bold home verde

		verde dup " :R%d" print
		blanco "GESTO " print
|		scr
|		fonti home blanco
		blanco cr
 		trazo.debug
		gui.debug
		 cr
		'string print

|		'dibujo ( dibujo> <? )( @+ "%h " allowcr print ) drop

		32 gc.botton $00000f gc.hfill
		home
		dlg.color
		acr2
		"     " printx
		cyan
		'exit 'xcycwh @+ swap @ " %dx%d " btnt

		sp
		'modolapiz! "L" sp btnt
		'modohoja! "H" sp btnt

		rojo
		sp 'exit "esc-Exit" btnt
		sp verde
		sp 'reset dup <f1> "f1-Reset" btnt

		sp [ makebox  ; ]
		dup <f2> "f2-Box" btnt
|		sp [ rand $ffffff and dup col.clapiz! d,color ; ]
|		dup <f3> "f3-Color" btnt | color al azar
|    	sp 'makemtr dup <f4> "f4-2mtr" btnt

		'exit "<" sp btnt
		'exit cursorp " %d " sp btnt
		'exit ">" sp btnt

		cursormodo
		'dibujando =? ( drop cminilapiz ; )
		'hojayzoom =? ( drop cminimano ; )
		drop cminiflecha
		;

:
mark
trazo.ini
reset
loadmem
4 main
savemem
;

