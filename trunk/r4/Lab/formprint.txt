| formprint.txt
| PHREDA 2011
|-----------------------
| res1:		4950x7000 	1.41..
| scan		21.6 29.7	1.375
| 600dpi:	5076x7019	1.382
|
|
^r4/lib/btn.txt
^r4/lib/input.txt

^r4/lib/dlgfile.txt

^r4/lib/fonth.txt
^r4/lib/fontt.txt

^r4/lib/leebmp.txt
^r4/lib/trace.txt

#factual )( 64

#dom
#$dom
#bmpfondo
|--- escala de bmp
#xa #xa1 #xs
#ya #ya1 #ys

|--- posicion y tam ventana
#xi 0 #yi 0
#wi 0 #hi 0

|--- tam impresora
#wpr #hpr

|--- tam ventana
#wven #hven
#ww 0 #hw 0	| ventana por pantalla

|--- miniatura
#wm #hm | total
#wc #hc | cursor en miniatura

|--- elemento de posicion
#ccx #ccy
#ccw #cch
| fuente de letra, tamaño (orientacion?)
#ncmp #nrep
#pad

|--- campos  x y | w h
#cell )( 8192
#cell> 'cell
|--- info | tipo+3param
#info )( 8192
#info> 'info
|--- a str | string..
#index )( 8192
#index> 'index

|--- cursor de elemento
#cursor 0

:cntcells
	cell> 'cell - 3 >> ;

|----- Conversiones
:r2m | x y -- xm ym	; de real a miniatura
	swap wm wpr */ swap hm hpr */ ;
:m2r | x y -- xm ym ; miniatura a real
	swap wpr wm */ swap hpr hm */ ;

:v2m | x y -- xm ym ; ventana a miniatura
	swap wm wven */	swap hm hven */ ;
:m2v | x y -- xm ym ; miniatura a ventana
	swap wven wm */	swap hven hm */ ;

:r2v | x y -- xv yv ; de real a ventana
	swap wven wpr */ swap hven hpr */ ;
:v2r | xv yv -- x y ; de ventana a real
	swap wpr wven */ swap hpr hven */ ;

:b2r | x y -- xp yp ; de bmp a real
	swap wpr bmp.ancho */ swap hpr bmp.alto */ ;
:r2b | x y -- xp yp ; de real a bmp
	swap bmp.ancho wpr */ swap bmp.alto hpr */ ;

:b2v | x y -- xp yp ; de bmp a ventana
	swap wven bmp.ancho */ swap hven bmp.alto */ ;
:v2b | x y -- xp yp ; de real a bmp
	swap bmp.ancho wven */ swap bmp.alto hven */ ;

|----- zoom
:partemin
	wi wm wven */ 'wc !
	hi hm hven */ 'hc !			| miniatura de pantalla

	wi hi v2r 'hw ! 'ww !		| ancho de ventana

	|---- ajustes de bmp
	wi hi v2b  | de ventana a real y luego a bmp
	hi 16 <</ 'ys !
	wi 16 <</ 'xs !
	;

:zoom1
	wpr 'wven ! hpr 'hven ! partemin ;
:zoom2
	wpr 2/ 'wven ! hpr 2/ 'hven ! partemin ;
:zoom4
	wpr 2 >> 'wven ! hpr 2 >> 'hven ! partemin ;
:zoom8
	wpr 3 >> 'wven ! hpr 3 >> 'hven ! partemin ;
:zoomf
	wi 'wven ! hi hpr wpr */ 'hven ! partemin ;

|-- Formulario
:+cell | --
	ccx ccy v2r 16 << or
	ccw cch v2r	16 << or
	cell> !+ !+ 'cell> ! ;

:cell.clear
	'cell 'cell> ! ;

:cell.dellast
	cell> 'cell =? ( drop ; ) drop
	-8 'cell> +! ;

:cell.in | dir -- dir nro/-1
	dup 4+ @ >uv
	swap xi - swap yi -

	r2v | x y dir x0 y0
	pick3 >? ( 2drop -1 ; )
	swap pick4 >? ( 2drop -1 ; ) | x y dir y0 x0
	pick2 @ >uv r2v | y0 x0 w0 h0
	>r + swap r> + | x1 y1
	pick3 <? ( 2drop -1 ; ) drop
	pick3 <? ( drop -1 ; ) drop
	dup 'cell - 3 >>
	;

:cell.search | x y -- nro/-1
	'cell
	( cell> <? )(
		cell.in
		0 >=? ( nip nip nip ; ) drop
		8 +	) 3drop
	-1 ;

:cell.move | dx dy nro --
	3 << 'cell + 4+ >r
	v2r
	r @ >uv | dx dy x y
	rot + >r + r> 16 << or
	r> ! ;

|--- Tipo de campos
| Alfanumerico
| Texto Normalizado
| Fecha	(dia)
| Memo	(ancho,alto)
| Precio (digitos,decimal)
| Numero (digitos)
| Radio (lista)
| Lista	(lista)
| Combo (lista o texto)
| Grilla (tabla)
| eXtendido
| Etiqueta
#tcampos "ATFMPNRLCGXE"

:nrocampo | car -- nro/-1
    'tcampos ( c@+ 1? )( | car tt c
		pick2 =? ( drop 1- 'tcampos - nip ; )
		drop ) 3drop
	-1 ;

|----- load txt sin cell
:escape
	over index> !+ 'index> !
	over c@ nrocampo $f and
	info> !+ 'info> !
	+cell
	cch 2 + 'ccy +!
	;

:loadtxt
	dom swap load 0 swap !+ '$dom !
	cell.clear
	dom ( c@+ 1? )(
		$7e =? ( escape )
		drop )
	2drop ;

|---- load &save
:makeindex
	'index 'index> !
	dom ( c@+ 1? )(
		$7e =? ( over index> !+ 'index> ! )
		drop )
	2drop ;

:loadform | "name" --
	mark
	here dup rot load
	=? ( drop empty ; )
	@+ 'cell swap | adr 'cell cant
	( 1? )( 1- >r
		swap @+ rot !+
		r> ) drop 'cell> !
	@+ 'info swap
	( 1? )( 1- >r
		swap @+ rot !+
		r> ) drop 'info> !
	dom ( swap c@+ 1? )( rot c!+ ) rot c!+ '$dom !
	drop
	makeindex
	empty ;

:saveform | "name" --
	mark
	'cell cell> over - 2 >> ,
	( cell> <? )( @+ , ) drop
	'info info> over - 2 >> ,
	( info> <? )( @+ , ) drop
	dom ( c@+ 1? )( ,c ) ,c drop
	savemem
	empty ;


:load.form
	'factual dlgfile
	'factual "db/forms/%s" mprint bmp.load 'bmpfondo !
	'factual "db/forms/%s.frm" mprint loadform

    zoomf ;


:save.form
	'factual "db/forms/%s.frm" mprint saveform
	;


|----- show bmp
:drawbmpfast
	bmpfondo 0? ( drop ; ) drop
	0 0 setxy
	ya1 'ya !
	sw wi -
	hi ( 1? )(
		xa1 'xa !
	 	0 ya 16 >> bmp.getm
		wi ( 1? )(
			over xa 16 >> 2 << + @ px!+
		xs 'xa +!
		1- ) 2drop
	  over px+!
	  ys 'ya +!
  1- ) 2drop ;

|---------
:boxx | w h x y --
	2dup atxy
	2dup op
	pick3 pick2 + over line
	pick3 pick2 + pick3 pick2 + line
	over pick3 pick2 + line
	line 2drop ;

|---- tipo de cell
|#bx #by
#bh #bw

:drawbox | nro -- nro
	dup 3 << 'cell + >r
	r@+ >uv r2v
	2dup 'bh ! 'bw !
	r> @ >uv
	swap xi - swap yi -
	r2v
	2dup atxy |'bx ! 'by !
	boxx
	bh 0? ( drop ; ) fonthex
	dup "%d" print
	;

:sf
	drop CYAN
	over drawbox
	bh 0? ( drop ; ) fonthex
	over 2 << 'index + @ 0? ( drop ; ) "%a" print ;

:drawcellscr | --
	rojo
	0 ( cntcells <? )(
		drawbox 1+ ) drop ;

|---- info de cel
:draw1cell | nro --
	cntcells >=? ( drop ; )
	dup 3 << 'cell + >r
	r@+ >uv r> @ >uv "[%d %d - %d %d]" print cr
	dup 2 << 'info + @ "%h" print cr
	2 << 'index + @ "%a" print cr
	;

|----------- mover cursor y cambiar limites
:cursormov | x y --
	mshift 1? ( drop 3 << )( drop ) 'ccy +!
	mshift 1? ( drop 3 << )( drop ) 'ccx +!

	ccx -? ( 0 'ccx ! )
	wpr ccw - swap <? ( 'ccx ! )( drop )
	ccy -? ( 0 'ccy ! )
	hpr cch - swap <? ( 'ccy ! )( drop )
	;

:ven.move | dx dy --
	'yi +! 'xi +!
	xi -? ( 0 'xi ! ) ww + wpr >? ( wpr ww - 'xi ! ) drop
	yi -? ( 0 'yi ! ) hw + hpr >? ( hpr hw - 'yi ! ) drop

	xi yi r2b 16 << 'ya1 ! 16 << 'xa1 !
	;
|------------- en impresora
|    case DOCMOVE: // x y --
|    case DOCLINE: // x y --
|    case DOCTEXT: // "tt" --
|    case DOCSIZE: // "tt" -- w h
|    case DOCFONT: // size angle "font" --

:boxprint | w h x y --
	2dup docat
	pick3 pick2 + over docline
	pick3 pick2 + pick3 pick2 + docline
	over pick3 pick2 + docline
	docline 2drop ;

:labelprint | x y w h
|	8 >> 'cursoraux +
	swap >uv
|	14 0
	"Arial" docfont
	doctext ;

:t0
:t1
:t2
:t3
	2drop
	boxprint ;
|	4drop ;

#tipocampo 't0 't1 't2 't3

:cadacampo
	dup $3 and 2 << 'tipocampo + @ exec ;

:drawcellprint
	'cell
	( cell> <? )( >r
		r@+ >uv r@+ >uv
		r@+ r@+ cadacampo
		r> ) drop ;

:imprimir
	docini

|	10 0 "Arial" docfont
|	wpr 2/ hpr 2/ docat
|	"texto de prueba" doctext
	drawcellprint
	docend
	;

|--------------
|  DOCUMENTO MODELO
|--------------
:editdom
	usogui
	show clrscr
		"Documento Modelo" print cr
		sp
		dom 63 80 20 inputm
		'exit >esc<
		;

:addline
:addbox
:addlabel
:addcampo
	+cell ;


|----- miniatura

:drawcampominiatura
	rojo
	'cell
	( cell> <? )( >r
		r@+ >uv r2m
		r@+ >uv r2m
		swap wi +
		swap
		boxx
		r> ) drop
	;

:miniatura
	verde
	wm hm wi 0 boxx
	wc hc xi yi r2m swap wi + swap boxx
	drawcampominiatura
	;

|----- CURSOR mueve ventana
#dx #dy

#vecmove 0 |

:onmovev	| mueve ventana
	xymouse
	over dx - over dy - m2r
	ven.move
	'dy ! 'dx ! ;

:onmovee
	xymouse
	over dx - over dy -
	cursor cell.move
	'dy ! 'dx ! ;

:onmoven
	xymouse
	yi + ccy - 'cch ! xi + ccx - 'ccw ! ;

:ondnn
	'onmoven 'vecmove !
	xymouse
	yi + 'ccy ! xi + 'ccx ! 0 dup 'cch ! 'ccw ! ;

:ondnv
	'onmovev 'vecmove !
	'dy ! 'dx ! ;

:ondne
	xymouse
	over wi >? ( drop ondnv ; ) drop
	cell.search -? ( drop ondnn ; ) 'cursor !
	xymouse 'dy ! 'dx !
	'onmovee 'vecmove !
	;

|----- CURSOR dibuja
:dven yi + 'ccy ! xi + 'ccx ! 0 dup 'cch ! 'ccw ! ;
:mven yi + ccy - 'cch ! xi + ccx - 'ccw ! ;

:ondn
	xymouse
	over wi <? ( drop dven ; ) drop
	swap wi - swap m2v
	'ccy ! 'ccx ! 0 dup 'cch ! 'ccw ! ;

:onmove
	xymouse
	over wi <? ( drop mven ; ) drop
	swap wi - swap m2v
	ccy - 'cch ! ccx - 'ccw ! ;

|		[ xymouse yi + 'ccy ! xi + 'ccx ! 0 dup 'cch ! 'ccw ! ; ]	|onDn
|		[ xymouse yi + ccy - 'cch ! xi + ccx - 'ccw ! ; ] 			|onMove
|		0 guiMap

|--------------
|  EDITANDO
|--------------
:main
	usogui
	show clrscr
		drawbmpfast
		drawcellscr
		miniatura
	|----- cursores
		blink 1? ( negro )( azul ) drop
		ccw cch ccx xi - ccy yi - boxx
		ccw cch v2m ccx ccy v2m swap wi + swap boxx
	|-----
		scr
|		'onDn 'onMove guiDnMove
		'onDne vecmove guiDnMove

		48 gc.top |$00000f gc.hfill
		font-vard-8-bold home cr2
		rojo sp 'exit dup >esc< "esc-Exit" btnt
		verde
		sp 'addline dup <f1> "f1-Line" btnt
		sp 'addbox dup <f2> "f2-Box" btnt
		sp 'addlabel dup <f3> "f3-Label" btnt
		sp 'addcampo dup <f4> "f4-Campo" btnt

		amarillo
		sp 'load.form dup <f5> "f5-Load" btnt
		sp 'save.form dup <f6> "f6-Save" btnt
		sp 'imprimir dup <f7> "f7-Print" btnt
|		sp [ "r4/work/carnet-form.txt" loadtxt ; ] dup <f8> "f8-LoadTxt" btnt

		rojo
		sp 'cell.clear dup <f9> "f9-Clear" btnt
		sp 'cell.dellast dup <del> "DEL-Last" btnt cr cr2
		cyan
		sp 'zoom1 "ZoomX1" btnt
		sp 'zoom2 "ZoomX2" btnt
		sp 'zoom4 "ZoomX4" btnt
		sp 'zoom8 "ZoomX8" btnt
		sp 'zoomf "Full" btnt

		scr wm gc.right hm gc.botton home
		fonti verde
		dup "(%d)" print cr
		blanco
		cntcells "cell:%d " print cr
		[ 0 'cursor ! ; ] "|<" link
		[ cursor 1- -? ( 0 nip ) 'cursor ! ; ] "<" link
		cursor " %d " print
		[ cursor 1+ cntcells >=? ( cntcells 1- nip ) 'cursor ! ; ] ">" link
		[ cntcells 1- 'cursor ! ; ] ">|" link cr

		0 "X" rojo link
		verde
		0 "<<" link
		0 ">>" link

		scr home
		negro
		cursor draw1cell
		hpr wpr "prn %d %d " print cr
		yi xi "xi:%d yi:%d " print hi wi "wi:%d hi:%d " print cr
		hven wven "wven:%d hven:%d" print cr
		wi hi v2r r2b "%d %d " print cr

		ccx ccy "ccx:%d ccy:%d " print cr
		ccw cch "cch:%d cch:%d " print cr
		ncmp nrep "nrep:%d ncmp:%d " print cr

		bmpfondo "BMP:%d" print cr
|		scr home 0 rows 2 - gotoxy
|		cursor draw1cell

		cminiflecha
		keypad
		[ 0 -8 cursormov ; ] <up>
		[ 0 8 cursormov ; ] <dn>
		[ -8 0 cursormov ; ] <le>
		[ 8 0 cursormov ; ] <ri>
		;


:init
	"./db/forms" dir

	cell.clear
	docres 'hpr ! 'wpr !							| tam. impresora
	sw 2/ dup 2/ + 'wi ! sh 4 - 'hi !  			| tam. pantalla (px)
	sw wi - dup 'wm ! hpr wpr */ 'hm !				| tam. miniatura

	xi yi r2b 16 << 'ya1 ! 16 << 'xa1 !
	zoomf

	0 'ccx ! 0 'ccy ! 50 'ccw ! 50 'cch ! 		| cursor

	here dup 'dom ! '$dom !
	0 dom !
	$ffff 'here +!
	;

: mark 33 init main ;