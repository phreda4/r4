|------------------------------
| gui.txt - PHREDA
| Immediate mode gui for :r4
|------------------------------
^r4/lib/gc.txt
^r4/lib/color.txt
^r4/lib/cursor.txt
^r4/lib/grpix.txt
^r4/lib/font.txt
^r4/lib/show.txt

 |--- state
#active
#hot	#hotnow
#foco	#foconow
#pbmouse
#evUp #evDn

|--- id
#id
#idf	| id actual
#idl	| id ultimo

|---  Edita linea
#cmax
#padi>	| inicio
#pad>	| cursor
#padf>	| fin

|---------
::gui.debug
	idf id "ID:%d IDF:%d " print cr
	foconow foco "foco:%d now:%d" print cr
	hotnow hot "hot:%d now:%d" print cr
	active "active:%d " print cr

|---debug texto
|	cmax "cmax%d " print cr
|	padi> "padi>	| inicio%d " print cr
|	pad> "pad>| cursor%d " print cr
|	padf> "padf>| fin%d " print cr
	;

:apreto
	hotnow dup 'active ! 'evDn ! ;

:solto
	active 0? ( drop ; )
	hotnow =? ( 'evUp ! )( drop )
	0 'active !
	;

::clrscr
	cls scr

	idf 'idl !	| ultimo
	hot 'hotnow !

	0 'idf !	| primero foco
	0 'id !     | primero hot
	0 'hot !
	0 'evUp ! 0 'evDn !

	bmouse pbmouse =? ( drop ; )
	0? ( solto )( apreto ) 'pbmouse !
	;

::xfb>scr
	xfb> scr

	idf 'idl !	| ultimo
	hot 'hotnow !

	0 'idf !	| primero foco
	0 'id !     | primero hot
	0 'hot !
	0 'evUp ! 0 'evDn !

	bmouse pbmouse =? ( drop ; )
	0? ( solto )( apreto ) 'pbmouse !
	;

::inigui
	0 'active !
	key.push inikey
	0 'foco  ! -1 'foconow !
	;

::exit
	1 '.exit !
	0 'foco  ! -1 'foconow !
	key.pop ;

|--- in/out
::guiIn | 'vec --
	xymouse whin 0? ( 2drop ; ) drop
	exec ;

::guiInOut | 'vecin 'vecout --
	xymouse whin 1? ( 2drop )( drop nip )
	exec ;

|-- boton
::guiBtn | 'click --
	1 'id +!
	id
	evUp =? ( drop exec ; )
	xymouse whin 0? ( 3drop ; ) drop
	nip 'hot ! ;

|-- move
::guiMove | 'move --
	1 'id +!
	xymouse whin 0? ( 2drop ; ) drop
	id dup 'hot !
	active =? ( drop exec ; )
	2drop
	;

|-- dnmove
::guiDnMove | 'dn 'move --
	1 'id +!
	xymouse whin 0? ( 3drop ; ) drop
	id dup 'hot !
	active =? (
		evDn =? ( 2drop exec ; )
		drop nip exec ; )
	3drop ;

|-- mapa
::guiMap | 'dn 'move 'up --
	1 'id +!
	xymouse whin 0? ( 4drop ; ) drop
	id dup 'hot !
	evUp =? ( drop nip nip exec ; )
	active =? (
		evDn =? ( 3drop exec ; )
		2drop nip exec ; )
	4drop ;


::guiEmpty | --		; si toca esta zona no hay interaccion
	1 'id +!
	xymouse whin 0? ( drop ; ) drop
	id 'hot !
	;

|---------------------------
::onLineMove | 'vec --
	xymouse whin 0? ( 2drop ; ) drop
	bmouse 0? ( 2drop ; ) drop
	xymouse nip
	ccy <? ( 2drop ; )
	ccy cch + >? ( 2drop ; )
	drop
	exec ;

|---------------------------------------------------
| manejo de foco (teclado)

::nextfoco
	foco 1+ idl >? ( 1 nip ) 'foco ! ;

::prevfoco
	foco 1- 0 <=? ( idl nip ) 'foco ! ;

::setfoco | nro --
	foco ! ;

::ktab
	mshift 0? ( nextfoco )( prevfoco ) drop ;

:clickfoco
	idf foco =? ( drop ; ) 'foco ! ;

::w/foco | 'fvect 'svect --
	idf 1+
	foco 0? ( drop dup dup 'foco ! )
	<>? ( 'idf ! 2drop ; )
	foconow <>? ( dup 'foconow ! swap exec )( nip )
	'idf !
	exec ;

::bordefoco
	ink@
	blanco 1 dup 'w +! 'h +! gc.rod
	negro 1 dup 'w +! 'h +! gc.rod
	1 dup 'w +! 'h +! gc.rod
	ink
	-3 dup 'w +! 'h +!
	;

 | no puedo retroceder!
::lostfoco | 'acc --
	idf 1+ foco <>? ( 'idf ! drop ; ) 'idf !
	exec
	nextfoco ;


:botonsimple | --
	ink@ $444444 over
	[ swap 4+gc ; ] guiIn
	vbtn ink ;

:botonsimpleh | --
	ink@ $444444 over
	[ swap ; ] guiIn
	hbtn ink ;

|-------- teclado para boton
:keys-btn | 'acc xx --  ; boton con foco
	pick2 <enter>
	0 <visible>
	0 <ins> 0 <back> 0 <del>
	0 <home> 0 <end>
	'ktab <tab>
	'nextfoco dup <dn> <ri>
	'prevfoco dup <up> <le>
	;


::.btnt
	gc.push
	ccw 'ccx +!
	print2gc
	ccw 2* 'w +!
	cch 2/ 'h +!
	botonsimple
	ink@ >r blanco printx r> ink
	'bordefoco 'keys-btn w/foco
	guiBtn
	ccw 'ccx +!
	gc.pop ;

::.btnd | acc 'v8d --
	gc.push
	botonsimple
	ink@ >r blanco v8draw r> ink
	'bordefoco 'keys-btn w/foco
	guiBtn
	gc.pop ;

::cmenu | 'vec "label" cnt --
	gc.push
	tx2 tx1 - ccw pick2 * dup 2/ + - 2/ tx1 + 'ccx !
	cntprintbox drop
	ccw 2* 'w +!
	cch 'h +!
	botonsimple
	ink@ >r blanco printc r> ink
	'bordefoco 'keys-btn w/foco
	guiBtn
	ccw 'ccx +!
	gc.pop ;

|-------  Edita linea
:lins  | c --
	padf> padi> - cmax >=? ( 2drop ; ) drop
	pad> dup 1- padf> over - 1+ cmove> 1 'padf> +!
:lover | c --
	pad> c!+ dup 'pad> !
	padf> >? (
		dup padi> - cmax >=? ( swap 1- swap -1 'pad> +! ) drop
		dup 'padf> ! ) drop
:0lin | --
	0 padf> c! ;
:kdel
	pad> padf> >=? ( drop ; ) drop
	1 'pad> +!
:kback
	pad> padi> <=? ( drop ; )
	dup 1- swap padf> over - 1+ cmove -1 'padf> +! -1 'pad> +! ;
:kder
	pad> padf> <? ( 1+ )  'pad> ! ;
:kizq
	 pad> padi> >? ( 1- ) 'pad> !  ;

#modo 'lins

|---------------------------
:dcursor
	blink 1? ( drop ; ) drop
	modo 'lins =? ( verde )( rojo ) drop
	printcur 1- ;

:bordebox
	ink@ azul
	gc.box
	ink ;

:inigetline | 'var max 'dr IDF -- 'var max 'dr IDF
	pick2 'cmax !
	pick3 dup 'padi> !
	( c@+ 1? )( drop ) drop 1- dup
	'pad> ! 'padf> !
	'lins 'modo !

	[ key toasc modo exec ; ] <visible>
	[ modo 'lins =? ( 'lover )( 'lins ) 'modo ! drop  ; ] <ins>
	'kback <back>	'kdel <del>
	'kder <ri>		'kizq <le>
	[ padi> 'pad> ! ; ] <home>
	[ padf> 'pad> ! ; ] <end>
	'ktab dup <tab> <enter>
	'nextfoco <dn> 'prevfoco <up>
	;

:drgetline | --
	blanco
	4 dup 'w +! 'h +! gc.fbox
	ccx
	padi> ( pad> =? ( dcursor ) c@+ 1? )( gemit ) 2drop
	'ccx !
	negro ;

|------- GETLINE
::getline | 'var max --
	gc.push
	blanco
	cntprintbox
	4 dup 'w +! 'h +! gc.box
	-4 dup 'w +! 'h +!

	'drgetline 'inigetline w/foco
	'clickfoco guiBtn
	drop
	printx blanco
	gc.pop ;

|------- INPUTLINE (si foco)
:inigetlines | 'var max 'dr IDF -- 'var max 'dr IDF
	pick2 'cmax !
	pick3 dup 'padi> !
	( c@+ 1? )( drop ) drop 1- dup
	'pad> ! 'padf> !
	'lins 'modo !

	[ key toasc modo exec ; ] <visible>
	[ modo 'lins =? ( 'lover )( 'lins ) 'modo ! drop  ; ] <ins>
	'kback <back>	'kdel <del>
	'kder <ri>		'kizq <le>
	[ padi> 'pad> ! ; ] <home>
	[ padf> 'pad> ! ; ] <end>
	;

::inputline | 'var max --
	'drgetline 0 inigetlines
	3drop
	( pad> =? ( dcursor ) c@+ 1? )( emit )
	2drop ;

|-------- SLIDES
::hslide | 'var --
	[ xymouse drop xc - 16 << w / over ! ; ] guiMove
	gc.push 0.98 0.2 fscala
	gc.frod gc.popush
	@ w 16 *>> 'xc +!
 	0.1 0.98 fscala ink@
	$dddddd $222222 vbtn
	gc.pop ink
	;

::vslide | 'var --
	[ xymouse nip yc - 16 << h / over ! ; ] guiMove
	gc.push 0.2 0.98 fscala
	gc.frod gc.popush
	@ h 16 *>> 'yc +!
 	0.98 0.1 fscala ink@
	$dddddd $222222 hbtn
	gc.pop ink
	;

|--- BOTONES

::btnt | 'event "texto" --
	gc.push
	ccw 2/ 'ccx +!
	print2gc
	ccw 'w +!
	cch 2/ 'h +!
	botonsimple
	ink@ >r blanco printx r> ink
	guiBtn
	ccw 2/ 'ccx +!
	gc.pop
	;


::btntf | 'event "texto" cnt --
	gc.push
	cntprintbox drop ccx w + ccw +  >r
	ccw 'w +!
	cch 2/ 'h +!
	botonsimple
	ink@ >r blanco sp print r> ink
	guiBtn
	r> 'ccx !
	gc.pop ;

::btnd | 'event 'dibujo --
	botonsimple
	ink@ swap blanco v8draw ink
	guiBtn
	;

::btnbox | 'event alto --
	ccx ccy .at
	dup .fbox
	guiBtn
	;

::btnm | 'vec "label" cnt --
	gc.push
	tx2 tx1 - ccw pick2 * dup 2/ + - 2/ tx1 + 'ccx !
	cntprintbox drop
	ccw 'w +!
	cch 2/ 'h +!
	botonsimple
	ink@ >r blanco printc r> ink
|	'bordefoco 'keys-btn w/foco
	guiBtn
	ccw 'ccx +!
	gc.pop ;

::btnv | 'event 'dibujo -- | dibujo
	gc.push
	cch dup 2* dup 'w ! 'h !
	2/ dup ccx + 'xc !
	ccy + 'yc !
	botonsimple
	ink@ swap blanco v8draw ink
	guiBtn
	cch dup 2/ + 'ccx +!
	gc.pop
	;

:btnv | 'event 'dibujo -- | dibujo
	gc.push
	cch dup 2* dup 'w ! 'h !
	2/ dup ccx + 'xc !
	ccy + 'yc !
	botonsimple
	ink@ swap blanco v8draw ink
	guiBtn
	cch dup 2/ + 'ccx +!
	gc.pop
	;

::btnve | var dibujos cnt --
	gc.push
	cch dup 2* dup 'w ! 'h !
	2/ dup ccx + 'xc !
	ccy + 'yc ! gris
	0 ( over <? )(
		pick3 @ =? ( 4+gc blanco )
		rot @+ v8draw rot rot
		pick3 @ =? ( 4-gc gris )
		[ dup pick4 ! ; ] guiBtn
		cch dup 2/ + 'xc +!
		1+ ) 4drop
	xc 'ccx !
	gc.pop
	;

