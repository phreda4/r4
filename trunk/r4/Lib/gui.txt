|------------------------------
| gui.txt - PHREDA
| Immediate mode gui for :r4
|------------------------------
^r4/lib/gc.txt
^r4/lib/parse.txt
^r4/lib/color.txt
^r4/lib/cursor.txt
^r4/lib/font.txt
^r4/lib/show.txt

|--- state
#active
#hot	#hotnow
#foco	#foconow
#pbmouse
#evUp #evDn

|--- id
#id		| id gui actual
#idf	| id hot actual
#idl	| id foco ultimo

|---------
::gui.debug
	idf id "ID:%d IDF:%d " print cr
	foconow foco "foco:%d now:%d" print cr
	hotnow hot "hot:%d now:%d" print cr
	active "active:%d " print cr
    idl foconow foco "foco:%d foconow:%d idl:%d" print cr
	;

:apreto
	hotnow dup 'active ! 'evDn ! ;

:solto
	active 0? ( drop ; )
	hotnow =? ( 'evUp ! )( drop )
	0 'active !
	;

::guistart
	idf 'idl !	| ultimo
	hot 'hotnow !

	0 'idf !	| primero foco
	0 'id !     | primero hot
	0 'hot !
	0 'evUp !
	0 'evDn !

	bmouse pbmouse =? ( drop ; )
	0? ( solto )( apreto ) 'pbmouse !
	;

|----- esto
::clrscr
	cls scr home guistart ;

::xfb>scr
	xfb> scr home guistart ;

::showgui
	msec dup 'lastime !+ !
	0 '.exit !
	( ( .exit 0? )( drop
		10 update drop
		guistart
		r exec
		redraw )
	-1 =? ( drop rdrop 0 '.exit ! ; )
	"1" print redraw
	|zoomin
	exec
	|zoomut
	rdrop
	"2" print redraw
	0 '.exit !
	0 key!
	) ;

::exit
	-1 '.exit !
	0 'foco  !
	-1 'foconow !
	0 key!	;

::exec!
	'.exit ! ;

|---- pre (requiere estar antes de guiBtn o guiMap
::guiInPre | 'vec --
	id 1+ hotnow <>? ( 2drop ; ) drop exec ;

::guiInOutPre | 'vecin 'vecout --
	id 1+ hotnow =? ( 2drop )( drop nip ) exec ;

::guiIn? | -- 1/0=yes
	id 1+ hotnow - ;

|-- boton
::guiBtn | 'click --
	1 'id +!
	id
	evUp =? ( drop exec ; )
	xymouse whin 0? ( 3drop ; ) drop
	nip 'hot ! ;

::guiOut | 'out --
	1 'id +!
	xymouse whin 1? ( 2drop ; ) drop
	exec ;

|-- move
::guiMove | 'move --
	1 'id +!
	xymouse whin 0? ( 2drop ; ) drop
	id dup 'hot !
	active =? ( drop exec ; )
	2drop
	;

|-- dnmove
::guiDnMove | 'dn 'move --
	1 'id +!
	xymouse whin 0? ( 3drop ; ) drop
	id dup 'hot !
	active =? (
		evDn =? ( 2drop exec ; )
		drop nip exec ; )
	3drop ;

|-- mapa
::guiMap | 'dn 'move 'up --
	1 'id +!
	xymouse whin 0? ( 4drop ; ) drop
	id dup 'hot !
	evUp =? ( drop nip nip exec ; )
	active =? (
		evDn =? ( 3drop exec ; )
		2drop nip exec ; )
	4drop ;

::guiEmpty | --		; si toca esta zona no hay interaccion
	1 'id +!
	xymouse whin 1? ( id 'hot ! )
	drop ;


|---------------------------
::onLineMove | 'vec --
	xymouse whin 0? ( 2drop ; ) drop
	bmouse 0? ( 2drop ; ) drop
	xymouse
	swap tx1 <? ( 3drop ; ) tx2 >? ( 3drop ) drop
	ccy <? ( 2drop ; )
	ccy cch + >? ( 2drop ; )
	drop
	exec ;

|---------------------------------------------------
| manejo de foco (teclado)

::nextfoco
	foco 1+ idl >? ( 0 nip ) 'foco !
	0 key!
	;

::prevfoco
	foco 1- 0 <=? ( idl nip ) 'foco !
	0 key!
	;

::setfoco | nro --
	'foco ! ;

::ktab
	mshift 0? ( nextfoco )( prevfoco ) drop ;

::clickfoco
	idf foco =? ( drop ; ) 'foco ! ;

::clickfoco1
	idf 1+ 'foco ! -1 'foconow ! ;

::refreshfoco
	-1 'foconow ! ;

::w/foco | 'in 'start --
	idf 1+
	foco 0? ( drop dup dup 'foco ! ) | quitar?
	<>? ( 'idf ! 2drop ; )
	foconow <>? ( dup 'foconow ! swap exec )( nip )
	'idf !
	exec ;

::focovoid | --
	idf 1+
	foco 0? ( drop dup dup 'foco ! ) | quitar?
	<>? ( 'idf ! ; )
	foconow <>? ( dup 'foconow ! )
	'idf ! ;

::esfoco? | -- 0/1
	idf 1+ foconow =? ( 1 )( 0 ) nip ;

::in/foco | 'in --
	idf 1+
	foco 0? ( drop dup dup 'foco ! )
	<>? ( 'idf ! drop ; )
	'idf !
	exec ;

::bordefoco
	ink@
	blanco 1 dup 'w +! 'h +! gc.rod
	negro 1 dup 'w +! 'h +! gc.rod
	1 dup 'w +! 'h +! gc.rod
	ink
	-3 dup 'w +! 'h +!
	;

 | no puedo retroceder!
::lostfoco | 'acc --
	idf 1+ foco <>? ( 'idf ! drop ; ) 'idf !
	exec
	nextfoco
	;


