| FormKit2.txt
| PHREDA 2011
|-----------------------------
^r4/lib/parse.txt
^r4/lib/fonta.txt
^r4/lib/input.txt
^r4/lib/btn.txt

^r4/lib/trace.txt

#font1 fonta-dejavu10
#font2 fonta-dejavu14
#font3 fonta-dejavu10b
#font1 fonta-arial10
#font2 fonta-arial14
#font3 fonta-arial10b
#font1 font-vard-8
#font2 font-vard-12
#font3 font-vard-8-bold

|----- Formulario
#grupos )( 1024	| ini-fin
#grupon )( 1024 | nombre
#grupos> 'grupos

|----- layout
#wform			| ancho formulario px
#hform			| alto formulario px
#xf #yf			| posicion actual

#lineas )( 1024	| x y
#lineas> 'lineas

:+linea		lineas> !+ 'lineas> ! ;

#lineaIni 0 | linea de inicio actual
#lineaCnt 0 | cantidad de lineas visibles

|---- memoria
#astack )( 512
#astack> 'astack

:pusha | val --
	astack> !+ 'astack> ! ;
:popa | -- val
	astack> 4 - dup 'astack> ! @ ;

|--- Tipo de campos
| Etiqueta (solo texto)
| Alfanumerico
| Texto Normalizado
| Fecha	(dia)
| Memo	(ancho,alto)
| Precio (digitos,decimal)
| Numero (digitos)
| Radio (lista)
| Lista	(lista)
| Combo (lista o texto)
| Grilla (tabla)
| eXtendido
| Boton
#tcampos "EATFMPNRLCGXB"

:nrocampo | car -- nro/0
    'tcampos ( c@+ 1? )( | car tt c
		pick2 =? ( drop 1- 'tcampos - nip ; )
		drop )
	nip nip ;

:parseTN | adr -- t cantidad
	dup c@ nrocampo
	3 =? ( nip 11 ; )
	swap 1+ ?0int ;

|--- MAP
::fkmap | vec 'dir -- ; vec | vec nro adri -- vec nro adri
	@ @+ swap @  | cnt memind
	( swap 1? )( 1- swap
		dup pick3 exec
		32 + ) 3drop ;

::fkclear | 'fk -- ; limpia memoria de registros
	[ 12 + @ 0 swap c! ; ] swap fkmap
	refreshfoco ;

|--- formulario para editar
|mem
| cnt total
| cnt editables
| indice
|--- memoria de indice
| name tam|tipo arg1 mem x1|y1 x2|y2 xm|ym ???
#cntcmp
#inimem
#indmem

:>>.. | adr -- adr'
	( c@+ 32 <? )( 0? ( drop 1- ; ) drop ) drop 1- ;

:parsecmp! | ind adr -- ind+ adr
	swap >r
	dup r!+    						| Nombre
	dup >fld> dup
	1? ( parseTN 8 << or ) r!+		| tipo(8)tamaño(24<<8)
	1? ( >fld> ) r!+				| parametros
	0 r!+							| memoria
	0 r!+							| x1y1
	0 r!+							| x2y2
	0 r!+							| xmym
	0 r!+							| ????
	r> swap
	;

:calculocampos | ind mem --
	>>..
	parsecmp! 		| registros 1
	( c@+ 1? )(
		$7e =? ( drop >>.. parsecmp! )( drop )
		) 2drop
	dup indmem - 5 >> 1- 'cntcmp ! | 5=32* tam indice
	| recalc here
	dup 'here !
	indmem ( over <? )(
  		here over 12 + !
		dup 4+ @ 8 >> 1? ( |here pick2 12 + !
				1+ 'here +! )( drop )
		32 + ) 2drop
|	indmem memmap
	;

|--- 'campo->param
:getM 12 + @ ;		| memoria
:getN 4+ @ 8 >> ;	| cantidad
:getO 4+ @ 8 >> ;	| cantidad
:getP 8 + @ ;		| parametro

|--- tamaño en pantalla
#x1 #y1 #x2 #y2 #xm #ym
#xn #yn #yh
#h1 #h2

:savexy
	dup 16 + >r
	x1 16 << y1 or r!+
	x2 16 << y2 or r!+
	xm 16 << ym or r!+
	rdrop ;

:makebox | w h --
	yn dup 'y1 ! h1 + dup 'ym ! + 2 + 'y2 !
	xn dup 'x1 ! + 2 + xm max 'x2 !
	y2 4+ yh max 'yh !
	x2 4+ 'xn ! ;

:getiq	;
:galfa	dup getN scrsizew makebox ;
:gtext  dup getN scrsizew makebox ;
:gfech  10 scrsizew makebox ;
:gmemo	3 26 scrsizehw makebox ;
:gprec  dup getN scrsizew makebox ;
:gnume  dup getN scrsizew makebox ;
:gradi 	dup getN scrsizew makebox ;
:glist	dup getN scrsizew makebox ;
:gcomb	dup getN scrsizew makebox ;
:ggril
:gexte	;
:gbotn	;

#glinedit 'getiq 'galfa 'gtext 'gfech 'gmemo 'gprec 'gnume 'gradi 'glist 'gcomb 'ggril 'gexte 'gbotn

:cmpsize | 'campo --
	4+ @ $f and 2 << 'glinedit + @ exec ;

:titlesize
	0 'x1 ! yh 'y1 !
	200 'x2 ! yh h2 + 'y2 !
	0 'xn ! yh h2 + 'yn !
	savexy ;

:closesize
	0 'x1 ! yh 'y1 !
	100 'x2 ! yh 4+ 'y2 !
	0 'xn ! yh 4+ 'yn !
	savexy ;

:linealay | vec nro adri -- vec nro adri
    dup @ "%a" mprint
	dup c@
	$2d =? ( 3drop titlesize ; )	| -
	$28 =? ( 3drop titlesize ; )	| (
	$29 =? ( 3drop titlesize ; )	| )
	$5b	=? ( 3drop titlesize ; )	| [
	$5d	=? ( 3drop titlesize ; )	| ]
	32 <>? ( yh 'yn ! 0 'xn ! )( swap 1+ swap )
	drop
	sizeprint xn + 'xm ! drop
	cmpsize
	savexy ;

:layout | 'fk --
	'astack 'astack> !
	font1 exec cch 'h1 !
	font3 exec cch 'h2 !
	font2 exec
	0 'x1 ! 0 'y1 !
	0 'x2 ! 0 'y2 !
	0 'xm ! 0 'ym !
	0 'xn ! 0 'yn ! 0 'yh !
	'linealay swap fkmap ;

|--- LOAD
::fkload | 'dir --
	dup
	here dup 'inimem !
	swap !+
	here 16 + swap load
	0 swap !+ dup 'indmem !
	here 16 + | iniind initab
	calculocampos

	inimem >r
	cntcmp r!+
	indmem r!+
	0 r!+
	0 r> !
	dup layout
	fkclear ;


::fkdump | adr --
	"dump" print cr
	@ @+ swap @  | cnt memind
	( swap 1? )( 1- swap
		@+ "%h " print
		@+ "%h " print
		@+ "%h " print
		@+ "%h " print
		@+ "%h " print
		@+ "%h " print
		@+ "%h " print
		@+ "%h " print cr
		) 2drop
	;

::fkedit | 'fk --
	[ @+ "%a* " print drop cr ; ]
	swap fkmap ;


|--- editar
:etiq	;
:alfa	dup getM over getN dup inputa ;
:text   dup getM over getN dup inputa ;
:fech   dup getM 10 11 inputa
		ink@ >r verde [ date "%d/%d/%d" mprint over getM strcpy ; ] "Hoy" link r> ink
		;
:memo	dup getM over getN 3 26 inputm ;
:prec   dup getM over getN dup inputa ;
:nume   dup getM over getN dup inputa ;
:radi 	dup getM over getP inputradi ;
:list	dup getM over getN pick2 getP inputlist ;
:comb	dup getM over getN pick2 getP inputlist ;
:gril
:exte
:botn	;

#tlinedit 'etiq 'alfa 'text 'fech 'memo 'prec 'nume 'radi 'list 'comb 'gril 'exte 'botn

:cmpedit | 'campo --
	4+ @ $f and 2 << 'tlinedit + @ exec ;

|--- titulo
:cmptitle | 'campo --
    @ " %a" print ;

::fkedit1 | 'fk --
	chome!
	[ cmptitle cr ; ] over fkmap
	chome
	[ cmpedit cr ; ] swap fkmap
	;

|---- new edit
#xi #yi
:getsize | adr --
	dup 16 +
	@+ >uv xi + 'x1 ! yi + 'y1 !
	@+ >uv xi + 'x2 ! yi + 'y2 !
	@ >uv xi + 'xm ! yi + 'ym !
	;

:edittitle
	font3 exec
	x1 y1 atxy dup @ 1+ " %a" print ;

:editcamposolo
	font2 exec
	x1 2 + y1 atxy ;

:boxtitle
	ink@
	blanco x1 y1 x2 y2 cajaf
	gris oscuro x1 y1 x2 y2 caja x1 ym op x2 ym line
	ink
	font1 exec x1 2 + y1 atxy dup @ "%a" print ;

:boxcmp
	font2 exec x1 2 + ym 2 + atxy ;
:boxtitlecmp
	boxtitle boxcmp ;
:betiq	edittitle ;
:balfa	boxtitlecmp dup getM over getN dup inputa ;
:btext  boxtitlecmp dup getM over getN dup inputa ;
:bfech  boxtitle ink@ >r verde [ date "%d/%d/%d" mprint over getM strcpy ; ] "Hoy" link r> ink
		boxcmp dup getM 10 11 inputa ;
:bmemo	boxtitlecmp dup getM over getN 3 26 inputm ;
:bprec  boxtitlecmp dup getM over getN dup inputa ;
:bnume  boxtitlecmp dup getM over getN dup inputa ;
:bradi 	boxtitlecmp dup getM over getP inputradi ;
:blist	boxtitlecmp dup getM over getN pick2 getP inputlist ;
:bcomb	boxtitlecmp dup getM over getN pick2 getP inputlist ;
:bgril
:bexte
:bbotn	;

#blinedit 'betiq 'balfa 'btext 'bfech 'bmemo 'bprec 'bnume 'bradi 'blist 'bcomb 'bgril 'bexte 'bbotn

:cadaedit | vec nro adri -- vec nro adri
	getsize
	4+ @ $f and 2 << 'blinedit + @ exec ;

::fkedit | 'fk --
	ccx 'xi ! ccy 'yi !
	'cadaedit swap fkmap ;

|--- SERIALISE
:,sfl | "" --
	( c@+ 1? )( 	| conversion teclado-->print
|		$25 =? ( dup ,c ) | % -> %%
		$25 =? ( 32 nip ) | % -> %%
	|	$5f =? ( 32 nip ) | no
		$7c =? ( 32 nip ) | permite
		$7e =? ( 32 nip ) | separadores
		,c ) 2drop ;

:,| $7c ,c ;

:setiq	;
:salfa
:stext
:sfech
:smemo
:sprec
:snume
:sradi
:slist
:scomb
	dup getM ,sfl ,| ;
:sgril
:sexte	;
:sbotn	 ;

#sline setiq salfa stext sfech smemo sprec snume sradi slist scomb sgril sexte sbotn

:cmpser | 'campo --
	4+ @ $f and 2 << 'sline + @ exec ;

::fkserialice | 'fk --
	mark
	'cmpser swap fkmap
	-1 'here +!
	$7e ,c 13 ,c 10 ,c 0 ,c
	empty ;

|--- DESERIALISE
|  reg vec nro adri -- reg vec nro adri
:detiq	;
:dalfa
:dtext
:dfech
:dmemo
:dprec
:dnume
:dradi
:dlist
:dcomb
	>r
	rot dup "%a" mprint r getM strcpy
	>fld> rot rot
	r> ;
:dgril
:dexte	;
:dbotn	;

#dline detiq dalfa dtext dfech dmemo dprec dnume dradi dlist dcomb dgril dexte dbotn

:cmpdes |
	4+ @ $f and 2 << 'dline + @ exec ;

::fkdeserialice | reg 'fk --
	'cmpdes swap fkmap drop ;
|---