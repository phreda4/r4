| FormKit.txt
| PHREDA 2011
|-----------------------------
^r4/lib/parse.txt
^r4/lib/fonta.txt
^r4/lib/input.txt

^r4/lib/trace.txt

|----- Formulario
#formnow 0		| formulario actual/mem asignada

#campo	)( 1024	| titulo
#memed	)( 1024	| memoria para editar
#info1	)( 1024 | tipo y largo
#info2	)( 1024 | parametro
#flags	)( 1024 | flags
#campo> 'campo

#grupos )( 1024	| ini-fin
#grupon )( 1024 | nombre
#grupos> 'grupos

|----- layout
#wform			| ancho formulario px
#hform			| alto formulario px
#xf #yf			| posicion actual

#lineas )( 1024	| ini-fin
#lineas> 'lineas

:+linea		lineas> !+ 'lineas> ! ;

#lineaIni 0 | linea de inicio actual
#lineaCnt 0 | cantidad de lineas visibles

|-----
::form.empty | -- ; libera memoria
	0 'formnow ! empty ;

::form.clear | -- ; limpia memoria de registros
	'campo ( campo> <? )( 0 over 1024 + @ c! 4+ ) drop ;

::form.dump
	'campo ( campo> <? )(
		dup 1024 + @ "%h " print
		dup 2048 + @ "%h " print
		dup 3072 + @ "%h " print
		@+ "%h " print cr )
	drop cr
	'grupos ( grupos> <? )(
		dup 1024 + @ print cr
		4+ )
	drop ;

|--- Tipo de campos
| Alfanumerico
| Texto Normalizado
| Fecha	(dia)
| Memo	(ancho,alto)
| Precio (digitos,decimal)
| Numero (digitos)
| Radio (lista)
| Lista	(lista)
| Combo (lista o texto)
| Grilla (tabla)
| eXtendido
| Etiqueta (no guarda)
#tcampos "ATFMPNRLCGXE"

:nrocampo | car -- nro/-1
    'tcampos ( c@+ 1? )( | car tt c
		pick2 =? ( drop 1- 'tcampos - nip ; )
		drop ) 3drop
	-1 ;

:parseTN | adr -- t cantidad	; A15 por default
	dup c@ nrocampo
	-? ( 0 nip swap )( swap 1+ )
	?0int 0? ( 15 nip )
	;

:getM 1024 + @ ;			| memoria
:getT 2048 + @ $ff and ;	| tipo
:getN 2048 + @ 8 >> $fff and ;	| cantidad
:getO 2048 + @ 20 >> $fff and ; | cantidad2
:getP 3072 + @ ;			| parametro

|----- Edita en pantalla
:campotitle | 'campo -- 'campo
    dup @ " %a" print ;

|--------
:alfa	dup getM over getN dup inputa ;
:text   dup getM over getN dup inputt ;
:fech   dup getM 10 10 inputa
		ink@ >r verde [ date "%d/%d/%d" mprint over getM strcpy ; ] " Hoy " link r> ink ;
:memo	dup getM over getN 2 20 inputm ;
:prec   dup getM over getN dup inputa ;
:nume   dup getM over getN dup inputa ;
:radi 	dup getM over getP inputradi ;
:list	dup getM over getN pick2 getP inputlist ;
:comb	dup getM over getN pick2 getP inputlist ;
:gril
:exte	;

#tlinedit 'alfa 'text 'fech 'memo 'prec 'nume 'radi 'list 'comb 'gril 'exte

:galfa	dup getM over getN printa ;
:gtext   dup getM over getN printa ;
:gfech   dup getM printa ;
:gmemo	dup getM over getN 2 20 printm ;
:gprec   dup getM over getN printa ;
:gnume   dup getM over getN printa ;
:gradi 	dup getM over getP inputradi ;
:glist	dup getM over getN pick2 getP inputlist ;
:gcomb	dup getM over getN pick2 getP inputlist ;
:ggril
:gexte	;

#glinedit 'galfa 'gtext 'gfech 'gmemo 'gprec 'gnume 'gradi 'glist 'gcomb 'ggril 'gexte

:campoedit | 'campo -- 'campo
	dup getT 2 << 'tlinedit + @ exec ;

|--------
:salfa	getN ccw * cch ;
:stext	getN ccw * cch ;
:sfech	getN ccw * cch ;
:smemo	getN ccw * cch ;
:sprec	getN ccw * cch ;
:snume	getN ccw * cch ;
:sradi	getN ccw * cch ;
:slist	getN ccw * cch ;
:scomb	getN ccw * cch ;
:sgril	getN ccw * cch ;
:sexte	getN ccw * cch ;

#slinedit 'salfa 'stext 'sfech 'smemo 'sprec 'snume 'sradi 'slist 'scomb 'sgril 'sexte

:camposize | 'campo -- 'campo w h
	dup getT 2 << 'slinedit + @ exec ;

|------------ dibujo
#xa #ya
:saa
	ccx 'xa ! ccy 'ya ! ;
:aas
	xa 'ccx ! ya 'ccy ! ;

:linelinea | --
	negro 2 'ccy +!
	ccy tx2 tx1 pick2 op swap line ;

:subglinea
	linelinea fonta-DejaVu14b
	4 'ccy +!
	dup "%l" printc cr ;

:subclinea
	linelinea  fonta-DejaVu10b
	4 'ccy +!
	dup "%l" print cr ;

:lineedit | index adr car -- adr'
	$5b	=? ( drop cr subclinea ; )	| [
	$5d	=? ( drop linelinea ; )		| ]
	$28 =? ( drop cr subglinea ; )	| (
	$29 =? ( drop linelinea ; )		| )
	drop
	saa
	font-vard-8 negro
	dup 1-
	" %a" print
	aas 15 'ccy +! 2 'ccx +!
	>>s
	font-vard-12 blanco
	swap @+ pick2 ?0int dup >r getline swap
|	swap @+ drop swap
	aas r> ccw * 2* 'ccx +! ;

|--------- Edit
::form.edit | --
	'campo ( campo> <? )(
		campotitle cr
		4+
|		@+ "%a" print cr
		) drop
	chome
	'campo ( campo> <? )(
		campoedit cr
		4+
|		@+ "%a" print cr
		) drop
	;


|---- memoria
#astack )( 512
#astack> 'astack

:pusha | val --
	astack> !+ 'astack> ! ;
:popa | -- val
	astack> 4 - dup 'astack> ! @ ;

:memini
    'campo 'campo> !
	'grupos 'grupos> !
	'astack 'astack> ! ;

:inigrup
	dup grupos> 1024 + !
	campo> 'campo -
	grupos> dup pusha
	!+ 'grupos> ! ;
:endgrup
	popa dup @ campo> 'campo - 16 << or swap ! ;

:initabla
	dup grupos> 1024 + !
	campo> 'campo -
	grupos> dup pusha
	!+ 'grupos> ! ;
:endtabla
	popa dup @ campo> 'campo - 16 << or swap ! ;

:linemem | adr car -- adr
	$5b	=? ( drop inigrup ; ) | [
	$5d	=? ( drop endgrup ; ) | ]
	$28 =? ( drop initabla ; ) | (
	$29 =? ( drop endtabla ; ) | )
	drop
	dup 1- campo> !+ 'campo> !
	0 here dup campo> 1020 + ! c!	| memoria en here
	>>s dup parseTN dup 1+ 'here +!
	8 << or campo> 2044 + !	| tipo(8bits),p1(12bits), p2(12bits)
	>>s dup campo> 3068 + !	| parametros
	0 campo> 4092 + !		| flags
	;

|---- layout
:layini
	w 'wform ! h 'hform !
	0 'xf ! 0 'yf !
	'lineas 'lineas> ! 	;

:layadd
	;

:linelay | adr car -- adr
	drop
	;

::form.use | adrdb --
	formnow 1? ( form.empty ) drop
	dup 'formnow !
	mark
	dup
	|----- MEMORIA
	memini
	( c@+ 1? )(
		linemem >>0 ) 2drop
	|----- LAYOUT
	layini
	( c@+ 1? )(
		linelay >>0 ) 2drop
	0 'lineaIni !

	;

|------- inserta registro
:,sfl | "" --
	( c@+ 1? )( 	| conversion teclado-->print
		$25 =? ( dup ,c ) | % -> %%
	|	$5f =? ( 32 nip ) | no
		$7c =? ( 32 nip ) | permite
		$7e =? ( 32 nip ) | separadores
		,c ) 2drop ;

::form.todb | --  ; here --
	mark
	@+ @ ,sfl
	( @+ 1? )( $7c ,c @ ,sfl ) 2drop
	$7e ,c | ~ registro "~" ,s1
	13 ,c 10 ,c 0 ,c
	empty ;

::form.fromdb | -- ;

	;

