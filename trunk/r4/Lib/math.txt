| :r4 base - bangle
| 0--360
| 0.0--1.0
| resultado = [0..1.0) [0..$ffff]
|---------------------------------

|------- punto fijo 16.16
::*.	| a b -- c
	16 *>> ;

::/.	| a b -- c
	16 <</ ;

::cos | v -- r
	$3fff +
::sin | v -- r
	$3fff + $8000 and? ( [ neg ; ] >r )
	$7fff and $3fff -
	6.2831 *. | radianes->bangle
	dup dup *. | f sqr
	dup 498 *. | f sqr resul
	10882 - *.
	1.0 +
	*. ;

| tan en radianes
::tan | v -- f
	$3fff +
	$7fff and $3fff -
	6.2831 *. | radianes->bangle
	dup dup *.
	dup 13323 *.
	20810 + *.
	1.0 +
	*. ;

::sincos | bangle -- sin cos
	dup sin swap cos ;

::xy+polar | x y bangle r -- x y
	>r sincos r 16 *>> rot + swap r> 16 *>> rot + swap  ;

::ar>xy | xc yc bangle r -- xc yc x y
	>r sincos r 16 *>> pick2 + swap r> 16 *>> pick3 + swap  ;

::polar | bangle largo -- dx dy
	>r sincos r 16 *>> swap r> 16 *>> swap ;

::polar2 | largo bangle  -- dx dy
	sincos pick2 16 *>> >r 16 *>> r> ;

::atan2 | x y -- bangle
	swap
	-? ( [ neg ; ] >r neg )
	swap
	+? (		| absy x
		swap 2dup + >r - >r
		0.125
        dup
	)(
		2dup - >r + >r
		0.375
		0.125
	)
	r> r>
	0? ( nip nip nip ; )
	*/ - ;

::distfast | dx dy -- dis
	-? ( neg ) swap -? ( neg ) swap
	over <? ( swap ) | min max
	dup 8 << over 3 << + over 4 << - swap 2* -
	over 7 << + over 5 << - over 3 << + swap 2* -
	8 >> ;

::average | x y -- v
	2dup xor 2/ rot rot and + ;

::min	| a b -- m
	over <? ( nip )( drop ) ;

::max	| a b -- m
	over >? ( nip )( drop ) ;

| proposals - start --------------------------------------------------------------

::inf= | ( x y -- 0/1 ) 1 if x <= y
      <=? ( 1 )( 0 ) nip ;

::sup= | ( x y -- 0/1 ) 1 if x >= y
      >=? ( 1 )( 0 ) nip ;

::2<=? | ( x1 y1 x2 y2 -- 0/1 ) 1 if (x1, x2) <= (x2, y2), 0 otherwise
      rot sup= >r inf= r> * ;

::2>=? | ( x1 y1 x2 y2 -- 0/1 ) 1 if (x1, x2) >= (x2, y2), 0 otherwise )
      rot inf= >r sup= r> * ;

::2dtrans | ( x y dx dy -- x+dx y+dy )
	 rot + >r + r> ;

| proposals - end -----------------------------------------------------------------

::clampmax | v max -- v
	swap over - dup 31 >> and + ;

::clampmin | v min -- v
	dup rot - dup 31 >> and - ;

::clamp0 | v -- v
	dup neg 31 >> and ;

::sqrt. | n -- v
	1 <? ( drop 0 ; )
	0 0 rot | root remhi remlo | 15 + bits/2+1
	24 ( 1? )( 1- >r
		dup 30 >> $3 and	| ro rh rl rnh
		rot 2 << or			| ro rl rh
		swap 2 << swap
		rot 2* dup 2* 1+		| rl rh ro td
		pick2 <=? ( swap 1+ >r - r> )( drop ) | rl rh ro
		swap rot r> )
    3drop ;

| http://www.quinapalus.com/efunc.html

::ln. | x --r
	-? ( $80000000 nip ; )
	$a65af swap | y x
	$8000 <? ( 16 << swap $b1721 - swap )
	$800000 <? ( 8 << swap $58b91 - swap )
	$8000000 <? ( 4 << swap $2c5c8 - swap )
	$20000000 <? ( 2 << swap $162e4 - swap )
	$40000000 <? ( 2* swap $b172 - swap ) | y x
	swap | x y
	over dup 2/ + +? ( rot drop swap $67cd - )( drop )
	over dup 2 >> + +? ( rot drop swap $3920 - )( drop )
	over dup 3 >> + +? ( rot drop swap $1e27 - )( drop )
	over dup 4 >> + +? ( rot drop swap $f85 - )( drop )
	over dup 5 >> + +? ( rot drop swap $7e1 - )( drop )
	over dup 6 >> + +? ( rot drop swap $3f8 - )( drop )
	over dup 7 >> + +? ( rot drop swap $1fe - )( drop )
	$80000000 rot -
	15 >> - ;

::exp. | x --  r	; sin *.
	$10000	| x y
	swap -? ( $b1721 + swap 16 >> )( swap )
	over $58b91 - +? ( rot drop swap 8 << )( drop )
	over $2c5c8 - +? ( rot drop swap 4 << )( drop )
	over $162e4 - +? ( rot drop swap 2 << )( drop )
	over $b172 - +? ( rot drop swap 2* )( drop )
	over $67cd - +? ( rot drop swap dup 2/ + )( drop )
	over $3920 - +? ( rot drop swap dup 2 >> + )( drop )
	over $1e27 - +? ( rot drop swap dup 3 >> + )( drop )
	over $f85 - +? ( rot drop swap dup 4 >> + )( drop )
	over $7e1 - +? ( rot drop swap dup 5 >> + )( drop )
	over $3f8 - +? ( rot drop swap dup 6 >> + )( drop )
	over $1fe - +? ( rot drop swap dup 7 >> + )( drop )
	swap
	$100 and? ( swap dup 8 >> + swap )
	$80 and? ( swap dup 9 >> + swap )
	$40 and? ( swap dup 10 >> + swap )
	$20 and? ( swap dup 11 >> + swap )
	$10 and? ( swap dup 12 >> + swap )
	$8 and? ( swap dup 13 >> + swap )
	$4 and? ( swap dup 14 >> + swap )
	$2 and? ( swap dup 15 >> + swap )
	$1 and? ( swap dup 16 >> + swap )
	drop ;

::exp. | x --  r
	$10000	| x y
	swap -? ( $b1721 + swap 16 >> )( swap )
	over $58b91 - +? ( rot drop swap 8 << )( drop )
	over $2c5c8 - +? ( rot drop swap 4 << )( drop )
	over $162e4 - +? ( rot drop swap 2 << )( drop )
	over $b172 - +? ( rot drop swap 2* )( drop )
	over $67cd - +? ( rot drop swap dup 2/ + )( drop )
	over $3920 - +? ( rot drop swap dup 2 >> + )( drop )
	over $1e27 - +? ( rot drop swap dup 3 >> + )( drop )
	over $f85 - +? ( rot drop swap dup 4 >> + )( drop )
	over $7e1 - +? ( rot drop swap dup 5 >> + )( drop )
	over $3f8 - +? ( rot drop swap dup 6 >> + )( drop )
	over $1fe - +? ( rot drop swap dup 7 >> + )( drop )
	swap | y x
	over 8 >> *. 8 >> + ;

::cubicpulse | c w x --  ; iñigo Quilez
	rot - abs | w x
	over >? ( 2drop 0 ; )
	swap /.
	3.0 over 2* -
	swap dup *. *.
	1.0 swap - ;

::pow | base exp -- r
	1 swap | base r exp
	( 1? )(
		1 and? ( >r over * r> )
		2/ rot dup * rot rot )
	drop nip
	;

::pow. | base exp -- r
	swap ln. *. exp. ;											
