| libreria de graficos y cursor
| PHREDA
|---------------------------------------
^r4/lib/math.txt
|---- lineas gruesas
#gg1 4 #gg2 4
#ss1 $200 #ss2 $200
#ang

|---- lineas gruesas
|                    1      2,3  4-8    8-16   16-32  32-64  64-128 128-256 256-512  512-1024
|#escala $400 $200 $100 $80     $40      $20      $10        $8	    $4             $2
:calcsum | n -- n suma
	2 <? ( $400 )( 4 <? ( $200 )( 8 <? ( $100 )( 16 <? ( $80 )( 32 <? ( $40 )( 64 <? ( $20 )( 128 <?  ( $10 )( $8 ) ) ) ) ) ) ) ;
:lineag!	| grosor --
	calcsum 'ss1 ! 'gg1 ! ;
:calg1 | angulo -- x y
	sincos gg1 16 *>> rot + swap gg1 16 *>> rot + swap ;
:calg2 | angulo -- x y
	sincos gg2 16 *>> rot + swap gg2 16 *>> rot + swap ;

|-----------------------------------
#grueso )( 32768
#grueso> 'grueso

#:gro 4

#x1 #y1 #x2 #y2
#x3 #y3 #x4 #y4
#xa #ya
#xb #yb
#xe #ye
#ang1 #ang2

:calg | x y angulo -- x y
	sincos gro 16 *>> rot + swap gro 16 *>> rot + swap ;

:,gro | x y --
	xy> grueso> !+ 'grueso> ! ;

:caso1 | se cortan las lineas
	xb yb ang1 calg ,gro
	xb yb ang2 calg ,gro
	;

:parte2
	xb 'xa ! yb 'ya ! ang2 'ang1 !
	xe 'xb ! ye 'yb !
	;

:res
	xa ya ang1 calg 'y1 ! 'x1 !
	xb yb ang1 calg  'y2 ! 'x2 !  | x2 y2
	xb yb ang2 calg  'y3 ! 'x3 !  | x3 y3
	x2 x1 - dup * y2 y1 - dup * +
	x3 x1 - dup * y3 y1 - dup * + <=? ( drop caso1 ; ) drop
	xe ye ang2 calg  'y4 ! 'x4 !  | x4 y4
	y2 y1 - x4 x3 - * y4 y3 - x2 x1 - * - | d
	0? ( drop caso1 ; )
	x4 x3 - y3 y1 - * y4 y3 - x3 x1 - * - | d la
	y2 y1 - over pick3 */ y1 + >r
	x2 x1 - swap rot */ x1 + r>
	,gro ;

#desde
#hasta
::polygr.do | desde hasta --
	over 8 + <? ( 2drop ; )  'hasta !  'desde !
	'grueso 'grueso> !
	desde
	@+ >xy 'ya ! 'xa !
	@+ >xy 'yb ! 'xb !
	xa ya ang1 calg op
	xa xb - ya yb - atan2 $200 + 'ang1 !
	xa ya ang1 calg ,gro | punto 0
	( hasta <? )(
		@+ >xy 'ye ! 'xe !
		xb xe - yb ye - atan2 $200 + 'ang2 !
		res parte2 )
	xb yb ang1 calg ,gro
	-$400 'ang1 +!
	xa xb 'xa ! 'xb !
	ya yb 'ya ! 'yb !
	xa ya ang1 calg ,gro
	8 -
	(  desde >? )( 4 - dup
		@ >xy 'ye ! 'xe !
		xb xe - yb ye - atan2 $200 + 'ang2 !
		res parte2 ) drop
	xb yb ang1 calg ,gro
|	$400 'ang1 +!
|	xa ya ang1 calg ,gro
	;

::polygr.draw
	'grueso @+ dup >xy op swap
	( grueso> <? )( @+ >xy pline ) drop
	>xy pline poli
	;

::polygr.map | vec
	>r
	'grueso @+ dup r exec
	( grueso> <? )( @+ r exec ) drop
	r exec
	rdrop ;
