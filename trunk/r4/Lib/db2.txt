| db2.txt - PHREDA
| archivo de texto con separadores y sin memoria auxiliar
| ~ registro | campos _ multivalores
|
| Example:
|
|	#dbpaises 0 "db/test/paises.db"
|	#dbtest 0 "db/test/test.db"
|
|	: mark
|	'dbpaises dbsload 	| NO insert,update,delete!
|	'dbtest dbload		| insert,update,delete + sort,filter
|
|	[ ( dup "%a|" print sp >fld> 0? ) drop cr ; ] 'dbpaises dbmap
|	[ ( dup "%a|" print sp >fld> 0? ) drop cr ; ] n 20 'dbtest dbmapage
|__________________________________________________________________
^r4/lib/parse.txt
^r4/lib/mem.txt
^r4/lib/gui.txt
^r4/lib/sort.txt
^r4/lib/grid.txt
^r4/lib/jul.txt

^r4/lib/trace.txt

#dbname
#inimem
#cntreg
#:cntregi
#cntfld |**
#indmem
#:indmei
#indfil

#dbregnow 0 | registro actual
#dbsortv 0	| orden actual

:calculoregistros | ind mem -- ind
	>>..
	dup rot !+ swap | registros 0
	( c@+ 1? )(
		$7e =? ( drop >>..
			dup rot !+ swap )( drop )
		) 2drop
	dup indmem - 2 >> 1- 'cntreg ! ;

|	cntreg	<--inimem
|	cntregi
|	cntfld NOUSADO
|	indmem
|	indmei
| ** mem
| ** indice	<-- indmem
| ** indici <-- indmei

|--- tabla no modificable
::dbsload | 'db --
	here dup 'inimem !
	swap !+
	here 20 + swap load
	0 swap !+ dup 'indmem !
	here 20 + | iniind initab
	dup 'dbregnow !
	calculoregistros
	inimem >r
	cntreg r!+
	0 r!+
	0 r!+ |**
	indmem r!+
	indmem cntreg 2 << + r> !
	indmem dup cntreg 2 << + swap cntreg move
	'here ! ;

|--- tabla modificable
::dbload | 'db --
	here dup 'inimem !
	swap !+
	here 20 + swap load
			| *** si no existe..crearlo
	0 swap !+
	dup 'indmem ! | <-- indice0
	here 20 + | iniind initab
	calculoregistros
	inimem >r
	cntreg r!+
	cntreg r!+	| cntregi
	0 r!+ 		|**cntfld
	indmem r!+
	indmem cntreg 2 << + r> !
	indmem dup cntreg 2 << + swap cntreg move
	cntreg 2 << +
	$ffff + | memoriafija
	'here ! ;

:dbreload | -- ; indmei = nueva cantidad
	indfil indmei dbname save 	| copia a archivo
	0 indfil indmei + !+ dup 'indmem !
	indfil  | iniind initab
	calculoregistros
	dbname 4 - @ >r
	cntreg r!+
	cntreg r!+ |cntregi
	0 r!+ |**cntfld
	indmem r!+
	indmem cntreg 2 << + r> !
	indmem dup cntreg 2 << + swap cntreg move
	drop
	;

::dbuse | 'db --
	@+
	@+ 'cntreg ! | 'db -- cntreg
	@+ 'cntregi !
	@+ 'cntfld !
	@+ 'indmem !
	@+ 'indmei ! 'indfil !
	'dbname ! ;

::dbdump | 'db --
	dbuse
:dbdumpi
	cntreg "cntreg:%d " print cr
	cntregi "cntregi:%d " print cr
	indmem "indmem:%h " print cr
	indmei "indmei:%h " print cr
	;

:dbsetregi! | val --
	dbname 4 - @ 4+ ! ;

::dbcntregs | 'db -- cnt
	@ 4+ @ ;

::dbgetreg  | nro 'db -- 'reg
	@ 16 + @ swap 2 << + @
	dup 'dbregnow ! ;

::dbnfld | nro -- 'fld
	dbregnow swap >>fld ;

::dbnfld? | nro -- 1/0 ( 0=sin dato)
	dbregnow swap >>fld
	c@
	$7e =? ( 0 nip ; )
    $7c =? ( 0 nip ; )
	$5f =? ( 0 nip ; )
	;

:dbcomparereg | mem -- mem 1/0 ; compara reg con here, si son iguales=>1
	here over
	( c@+ 1? )(
		$7e =? ( 3drop 1 ; )
		rot c@+ rot
		<>? ( 3drop 0 ; )
		drop swap )
	3drop 1 ;

|--- MAP
::dbmap | vec 'db -- ; vec | vec nro adri adrr -- vec nro adri
	@ @+ swap 8 + @ | cnt indmem
	( swap 1? )( 1- swap
		@+ pick3 exec
		) 3drop ;

::dbmapn | vec 'db -- ; vec | vec nro adri adrr -- vec nro adri
	@ @+ swap 8 + @ | cnt indmem
	0 ( pick2 <? )(
		swap @+ pick4 exec
		swap 1+ ) 4drop ;

:dbusemap | vec -- ; vec | vec nro adri adrr -- vec nro adri
	cntreg indmem
	( swap 1? )( 1- swap
		@+ pick3 exec
		) 3drop ;

::dbmapi | vec 'db -- ; vec | vec nro adri adrr -- vec nro adri
	@ 4+ @+ swap 8 + @ | cnti indmei
	( swap 1? )( 1- swap
		@+ pick3 exec
		) 3drop ;

:dbusemapi | vec -- ; vec | vec nro adri adrr -- vec nro adri
	cntregi indmei
	( swap 1? )( 1- swap
		@+ pick3 exec
		) 3drop ;

::dbmapage | vec nro largo 'db -- ; vec | vec last act  adrr -- vec last act
	dbuse | vec nro pag
::dbusemapage
	cntregi >=? ( 2drop dbusemapi ; )
	over 1+	over *
	cntregi >=? ( cntregi nip )
	2 << indmei +
	rot rot *
	cntregi >=? ( cntregi nip )
	2 << indmei + | vec last start
	( over <? )(
		@+ pick3 exec
		) 3drop ;

|--- INSERT
::dbinsert | 'db --   ; inserta memoria al final del archivo
	dbuse
:insertplano
	indmem 4 - here count | memd mems cnt
	pick2 indfil - over + 'indmei !
	cmove
 	dbreload ; | recarga

|--- UPDATE
::dbupdate | nroreg 'db --
	dbuse
	cntregi >=? ( drop ; )
	2 << indmei + @ | adrreg
	dbcomparereg 1? ( 2drop ; ) drop
:updateplano
	here count 			| adr here ncnt
	pick2 dup >reg> >>..	| adr here ncnt adr adrf
	dup rot - 			| adr here ncnt adrf cntv
	pick2 swap -        | adr here ncnt adrf dif
	indmem 4 - over + indfil - 'indmei ! | *aux
	+? ( over + swap indmem 4 - over - cmove> )( over + swap indmem 4 - over - cmove )
	cmove	| memd s cnt
 	dbreload ; | recarga

::dbupdatem | mreg 'db --
	dbuse
	dbcomparereg 1? ( 2drop ; ) drop
	updateplano ;

|--- DELETE
::dbdelete | nro 'db --
	dbuse
	cntregi >=? ( drop ; )
	2 << indmei + @
:deleteplano
	dup >reg> >>.. | diri dirf
	2dup - indmem indfil - + 4 - 'indmei !
	indmem over - cmove
 	dbreload ; | recarga

|--- LOG INSERT-UPDATE-DELETE
:dbnamelog | -- str
	mark
	$ffff 'here +! here
	dbname ,s ".log" ,s 0 ,c
	empty ;

::dbinsertlog | 'db --
	dbuse
	here cntreg nowdt "%h|I|%d|%s" mprint count
	dbnamelog append
	insertplano ;

::dbupdatelog | nro 'db --
	dbuse
	cntregi >=? ( drop ; )
	dup 2 << indmei + @ | adrreg
	dbcomparereg 1? ( 3drop ; ) drop
	here rot nowdt "%h|U|%d|%s" mprint count
	dbnamelog append
	updateplano ;

:searchreg | reg -- reg nro
	cntregi indmei
	( swap 1? )( 1- swap
		@+ | reg cnt indi r
		pick3 =? ( drop nip indmei - 2 >> 1- ; )
		drop )
	2drop -1 ;

::dbupdatemlog | mreg 'db --
	dbuse
	dbcomparereg 1? ( 2drop ; ) drop
	searchreg | reg nro
	here swap nowdt "%h|U|%d|%s" mprint count
	dbnamelog append
	updateplano ;

#ends ( $7e 13 0 )
::dbdeletelog | nro 'db
	dbuse
	cntregi >=? ( drop ; )
	dup 2 << indmei + @
	swap over | dir nro dir
	here regcpy drop
	'ends here strcat
	here swap nowdt "%h|D|%d|%s" mprint count
	dbnamelog append
	deleteplano ;

|--- RESET
:dbreset
	indmem dup cntreg 2 << + swap cntreg move
	cntreg dbsetregi! ;

|--- SORT
:toval | adr -- int
	?0int ; | entero

::dbsort | fld 'db -- ;
	dbuse
	0 =? ( drop dbreset ; ) | 0 apaga orden
	mark
	-? ( neg 1- [ dup >r pick4 >>fld toval neg , r> , ; ] )( 1- [ dup >r pick4 >>fld toval , r> , ; ] )
	dbusemapi
	'dbsortv !
	empty
	cntregi 1+ here shellsort | len lista --
	indmei here |--copia
	cntregi ( 1? )( 1- >r
		4+ @+ rot !+ swap
		r> ) 3drop ;

:tovalstr | adr -- int
	c@+ 24 << swap
	c@+ $ff and 16 << swap
	c@+ $ff and 8 << swap
	c@ $ff and or or or ;

::dbsortstr | fld 'db -- ;
	dbuse
	0 =? ( drop dbreset ; ) | 0 apaga orden
	mark
	-? ( neg 1- [ dup >r pick4 >>fld tovalstr neg , r> , ; ] )( 1- [ dup >r pick4 >>fld tovalstr , r> , ; ] )
	dbusemapi
	'dbsortv !
	empty
	cntregi 1+ here shellsort | len lista --
	indmei here |--copia
	cntregi ( 1? )( 1- >r
		4+ @+ rot !+ swap
		r> ) 3drop ;

:tovaldate | adr -- int
	str>jul ;

::dbsortdate | fld 'db --
	dbuse
	0 =? ( drop dbreset ; ) | 0 apaga orden
	mark
	-? ( neg 1- [ dup >r pick4 >>fld tovaldate neg , r> , ; ] )( 1- [ dup >r pick4 >>fld tovaldate , r> , ; ] )
	dbusemapi
	'dbsortv !
	empty
	cntregi 1+ here shellsort | len lista --
	indmei here |--copia
	cntregi ( 1? )( 1- >r
		4+ @+ rot !+ swap
		r> ) 3drop ;


|--- FILTRO
#indf>
:addf over indf> !+ 'indf> ! ;

:filterv | vec nro adri adrr -- vec nro adri
	pick4 exec 1? ( addf ) 2drop ;

::dbfilterv | 'que 'db --
	dbuse
	0? ( drop dbreset ; ) | apaga filtro
	indmei 'indf> !
	'filterv dbusemap drop
	indf> indmei - 2 >> dbsetregi! ;


|---- comparadores para filtro y busqueda
|--- strstr
:inner | str c0 adr -- str c0 adr / 1 r:a--
	dup pick3 1+ | adr' str'
	( c@+ 1? )( toupp
		rot c@+ toupp | str' CS adr' CA
		rot <>? ( 3drop ; )
		drop swap ) 3drop
	3drop
	1 rdrop ;

::reg?i | str reg -- 1/0 ; busca en todo el registro
	over c@ 0? ( 3drop 0 ; ) | "" da 0
	toupp swap
	( c@+ 1? )(
		$7e =? ( 4drop 0 ; )
		toupp pick2 =? ( drop inner )( drop )
		) 4drop 0 ;

::nfld?i | str reg n -- 1/0 ; busca en el campo n
	>>fld
	over c@ 0? ( nip nip ; ) | "" da 0
	toupp swap
	( c@+ 1? )(
		$7c =? ( 4drop 0 ; )
		$7e =? ( 4drop 0 ; )
		toupp pick2 =? ( drop inner )( drop )
		) 4drop 0 ;

:=f | fs1 s2 -- 1/0
	( c@+ 1? )(
		rot c@+ rot -
		1? ( 3drop 0 ; ) drop
		swap ) 2drop
	c@ $ff and
	$5f =? ( 1 nip ; )
	$7c =? ( 1 nip ; )
	$7e =? ( 1 nip ; )
	0? ( 1 nip ; )	| **
	0 nip ;
|	33 <? ( 1 )( 0 ) nip ;

::nfld=?i | str reg n -- 1/0 ; exacto igual a str
	>>fld
	over c@ 0? ( nip nip ; ) | "" da 0
	drop
	swap =f ;

|----- SEARCH
::dbsearchstr | "" nro 'db -- reg/0
	dbuse
	cntregi indmei
	( swap 1? )( 1- swap
		@+ | "" nro act indmei reg
		pick3 >>fld
		pick4 =f 1? ( drop nip nip nip 4 - ; )
		drop ) 4drop 0 ;

#lindmei
#lcntregi

::dbsearchany | "" nro 'db --  reg/0
	dbuse
	cntregi indmei
	( swap 1? )( 1- swap
		@+ 			| "" nro act indmei reg
		pick4 swap	| "" nro act indmei "" reg
		pick4 nfld?i 1? ( drop
			swap 'lcntregi !
			nip nip dup 'lindmei !
			4 - @ ; )
		drop ) 4drop 0 ;

::dbsearchnext | "" nro 'db --  reg/0
	dbuse
	lcntregi 1? ( lindmei )( drop cntregi indmei )
	( swap 1? )( 1- swap
		@+ 			| "" nro act indmei reg
		pick4 swap	| "" nro act indmei "" reg
		pick4 nfld?i 1? ( drop
			swap 'lcntregi !
			nip nip dup 'lindmei !
			4 - @ ; )
		drop ) 4drop 0
		0 'lcntregi !
		;

|--- DBGRILLA
| #grlista Act Pag c1 c2 c3 .. 0 "titulos|lista"

#act #grl

:t0 "%a" gcell ;
:t1 "%a" gcellc ;
:t2 "%a" gcell ;
:t3 "%a" gcellr ;
:t4 "%a" mprint memnro2 gcellr ; | precio

:t5 mark ( 1? )( dup "%a " ,print >mfld> ) drop 0 ,c empty here gcell ;
:t6 grl  
	( @+ 1? )( drop ) drop
	( c@+ 1? )( drop ) drop
	@ exec ;
:t7
:t8 ;

#tiposg t0 t1 t2 t3 t4 t5 t6 t7

:dbline
	rowg
	[ dup 'act ! over indmei - 2 >> 1- grl 8 - ! ; ] onLineMove | click en linea
	act =? ( $7f gfill blanco )( $ffffff gfill negro )
	grl ( @+ 1? )(
		pick2 over $ff and >>fld
		swap 16 >> 7 and 2 << 'tiposg + @ exec
		) 3drop
	cr ;

::dbgrid | filas 'gr 'db --
	dbuse
	cntregi 1? ( 1- ) pick2 /
	1? (
		cyan
		tx2 ccw 15 * - 'ccx !
|		cols 14 - col
		[ over 4+ @ 1- -? ( over nip ) pick2 4+ ! ; ] " < " btnt
		dup 1+ pick2 4+ @ 1+ "  %d/%d  " print
		[ over 4+ @ 1+ over >? ( 0 nip ) pick2 4+ ! ; ] " > " btnt
		) drop
	cr cr2
|	dup 0.99 grid2
	dup gridAll

	$cccccc gfill negro
|	dup @ 'act !
	dup 8 + dup 'grl !
	( @+ 1? )( drop ) drop
	( dup "%a" gcellc >fld> 0? ) drop cr

	'dbline swap 4+ @ rot dbusemapage

	gris $grid ;

::cleardbgrid
	-1 'act ! ;

|--- SERIALISE
:,sfl | "" --
	( c@+ 32 =? )( drop )
	0? ( 2drop ; ) drop
	1-
	( c@+ 1? )( 	| conversion teclado-->print
|		$25 =? ( dup ,c ) | % -> %%
		$25 =? ( 32 nip ) | % ->
	|	$5f =? ( 32 nip ) | no
		$7c =? ( 32 nip ) | permite
		$7e =? ( 32 nip ) | separadores
		,c ) drop 2 -
	( dup c@ 32 =? )( drop 1- -1 'here +! ) 2drop
	;

::dbSerial | listfld --
	mark
	( @+ 1? )(
		,sfl $7c ,c
		) 2drop
	-1 'here +!
	$7e ,c 13 ,c 10 ,c 0 ,c
	empty ;

::dbDeSerial | reg listfld --
	( @+ 1? )(
		rot swap  fldcpy swap
		) 3drop	;

|-----------------
