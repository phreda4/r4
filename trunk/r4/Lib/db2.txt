| db2.txt - PHREDA
| archivo de texto con separadores y sin memoria auxiliar
| ~ registro | campos _ multivalores
|
| Example:
|
|	#dbpaises 0 "db/test/paises.db"
|	#dbtest 0 "db/test/test.db"
|
|	: mark
|	'dbpaises dbsload 	| NO insert,update,delete!
|	'dbtest dbload		| insert,update,delete + sort,filter
|
|	[ ( dup "%a|" print sp >fld> 0? ) drop cr ; ] 'dbpaises dbmap
|	[ ( dup "%a|" print sp >fld> 0? ) drop cr ; ] n 20 'dbtest dbmapage
|__________________________________________________________________
^r4/lib/parse.txt
^r4/lib/mem.txt
^r4/lib/gui.txt
^r4/lib/sort.txt
^r4/lib/grid.txt

^r4/lib/trace.txt

|---- recorrido
:>>.. | adr -- adr'
	( c@+ 32 <? )( 0? ( drop 1- ; ) drop ) drop 1- ;
:>>fld | reg fld -- reg'
	( 1? )( 1- swap >>f swap ) drop ;
::>fld> | adr -- adr'/0
	( c@+ 1? )(
		$7e =? ( 2drop 0 ; )
        $7c =? ( drop ; )
		drop ) nip ;
::>reg> | adr -- adr'/0
	( c@+ 1? )(
		$7e =? ( drop >>.. ; )
		drop ) nip ;

#dbname
#inimem
#cntreg
#cntregi
#cntfld |**
#indmem
#indmei
#indfil

:calculoregistros | ind mem -- ind
	>>..
	dup rot !+ swap 		| registros 0
	( c@+ 1? )(
		$7e =? ( drop >>.. |dup memmap
			dup rot !+ swap )( drop )
		) 2drop
	dup indmem - 2 >> 1- 'cntreg ! ;

|	cntreg	<--inimem
|	cntregi
|	cntfld NOUSADO
|	indmem
|	indmei
| ** mem
| ** indice	<-- indmem
| ** indici <-- indmei

|--- tabla no modificable
::dbsload | 'db --
	here dup 'inimem !
	swap !+
	here 20 + swap load
	0 swap !+ dup 'indmem !
	here 20 + | iniind initab
	calculoregistros
	inimem >r
	cntreg r!+
	0 r!+
	0 r!+ |**
	indmem r!+
	indmem cntreg 2 << + r> !
	'here ! ;

|--- tabla modificable
::dbload | 'db --
	here dup 'inimem !
	swap !+
	here 20 + swap load
			| *** si no existe..crearlo
	0 swap !+
	dup 'indmem ! | <-- indice0
	here 20 + | iniind initab
	calculoregistros
	inimem >r
	cntreg r!+
	cntreg r!+	| cntregi
	0 r!+ 		|**cntfld
	indmem r!+
	indmem cntreg 2 << + r> !
	indmem dup cntreg 2 << + swap cntreg move
	$ffff + | memoriafija
	'here ! ;

:dbreload | -- ; indmei = nueva cantidad
	0 indfil indmei + !+ dup 'indmem !
	indfil  | iniind initab
	calculoregistros
	dbname 4 - @ >r
	cntreg r!+
	cntreg r!+ |cntregi
	0 r!+ |**cntfld
	indmem r!+
	indmem cntreg 2 << + r> !
	indmem dup cntreg 2 << + swap cntreg move
	drop
	;

::dbuse | 'db --
	@+
	@+ 'cntreg ! | 'db -- cntreg
	@+ 'cntregi !
	@+ 'cntfld !
	@+ 'indmem !
	@+ 'indmei ! 'indfil !
	'dbname ! ;

::dbdump | 'db --
	dbuse
	cntreg "cntreg:%d " print cr
	cntregi "cntregi:%d " print cr
	indmem "indmem:%h " print cr
	indmei "indmei:%h " print cr
	;

:dbsetregi! | val --
	dbname 4 - @ 4+ ! ;

::dbcntregs | 'db -- cnt
	dbuse
	cntregi +? ( ; ) drop
	cntreg ;

::dbgetreg  | nro 'db -- 'reg
	dbuse
	cntregi +? ( >=? ( 2drop 0 ; ) 2 << indmei + @ ; )( drop )
:dbgetregp | nro -- 'reg
|	cntreg >=? ( drop ; )
	2 << indmem + @ ;

|--- MAP
::dbmap | vec 'db -- ; vec | vec nro adri adrr -- vec nro adri
	@ @+ swap 8 + @ | cnt indmem
	( swap 1? )( 1- swap
		@+ pick3 exec
		) 3drop ;

:dbusemap | vec -- ; vec | vec nro adri adrr -- vec nro adri
	cntreg indmem
	( swap 1? )( 1- swap
		@+ pick3 exec
		) 3drop ;

::dbmapi | vec 'db -- ; vec | vec nro adri adrr -- vec nro adri
	@ 4+ @+ swap 8 + @ | cnti indmei
	( swap 1? )( 1- swap
		@+ pick3 exec
		) 3drop ;

:dbusemapi | vec 'db -- ; vec | vec nro adri adrr -- vec nro adri
	cntregi indmei
	( swap 1? )( 1- swap
		@+ pick3 exec
		) 3drop ;

::dbmapage | vec nro largo 'db -- ; vec | vec last act  adrr -- vec last act
	dbuse | vec nro pag
:dbusemapage
	cntregi >=? ( 2drop dbusemapi ; )
	over 1+	over *
	cntregi >=? ( cntregi nip )
	2 << indmei +
	rot rot *
	cntregi >=? ( cntregi nip )
	2 << indmei + | vec last start
	( over <? )(
		@+ pick3 exec
		) 3drop ;

|--- INSERT
::dbinsert | 'db --   ; inserta memoria al final del archivo
	dbuse
	indmem 4 - here count | memd mems cnt
	pick2 indfil - over + 'indmei !
	cmove
	indfil indmei dbname save 	| copia a archivo
 	dbreload ; | recarga

|--- UPDATE
::dbupdate | nroreg 'db --
	dbuse
	cntregi >=? ( drop ; )
	2 << indmei + @ | adrreg
	here count 			| adr here ncnt
	pick2 dup >reg> 	| adr here ncnt adr adrf
	dup rot - 			| adr here ncnt adrf cntv
	pick2 swap -        | adr here ncnt adrf dif
	indmem 4 - over + indfil - 'indmei ! | *aux
	+? ( over + swap indmem 4 - over - cmove> )( over + swap indmem 4 - over - cmove )
	cmove	| memd s cnt
	indfil indmei dbname save 	| copia a archivo
 	dbreload ; | recarga


|--- DELETE
::dbdelete | nro 'db --
	dbuse
	cntreg >=? ( drop ; )
	2 << indmei + @
	dup >reg> | diri dirf
	dup pick2 - indmem 4 - + indfil - 'indmei !
	indmem 4 - over - cmove	| *****falta revidar
	indfil indmei dbname save 	| copia a archivo
 	dbreload ; | recarga

|--- SORT
:toval | adr -- int
	| decimal
	| string
	?0int ; | entero

:tovalstr | adr -- int
	c@+ 24 << swap
	c@+ $ff and 16 << swap
	c@+ $ff and 8 << swap
	c@ $ff and or or or ;

::dbsort | fld 'db --
	dbuse
	-1 =? ( drop 0 dbsetregi! ; ) | -1 apaga orden
	mark
	[ dup >r pick4 >>fld toval , r> , ; ] dbusemap drop
	empty
	cntreg 1+ here shellsort | len lista --
	cntreg dbsetregi!
	indmei here |--copia
	cntreg ( 1? )( 1- >r
		4+ @+ rot !+ swap
		r> ) 3drop ;

|-------------SEARCH
:=f | fs1 s2 -- 1/0
	( c@+ 1? )(
		rot c@+ rot -
		1? ( 3drop 0 ; ) drop
		swap ) 2drop
	c@ $ff and
	$5f =? ( 1 nip ; )
	$7c =? ( 1 nip ; )
	$7e =? ( 1 nip ; )
	33 <? ( 1 )( 0 ) nip ;

::dbsearch | 'que fld -- reg
	0
	( cntreg <? )( | 'que fld nro
|		dup dbreg@
		pick2 >>fld  | 'que fld nro reg
		pick3 =f 1? ( drop nip nip ; )
		drop 1+ ) 3drop
	-1 ;

|--- case insensitive+all
:=fi | fs1 s2 -- 1/0
	( c@+ 1? )( toupp
		rot c@+ toupp rot -
		1? ( 3drop 0 ; ) drop
		swap ) 3drop
	1 ;

#ultimoencontrado

:encontrado | str c0 db fi -- reg
	drop nip nip |db
	dup 'ultimoencontrado !
	indmem
	( @+ pick2 <? )( drop ) drop nip
	8 - indmem - 2 >>
	;

::dbsearchall | 'str -- reg/-1
	dup c@ toupp | str c0
|	inimemdb
	( c@+ 1? )( toupp
		pick2 =? | str c0 db cdb
			( drop dup 1- pick3 =fi 1? ( encontrado ; ) )
		drop ) 4drop
|	inimemdb 'ultimoencontrado !
	-1 ;

::dbsearchnext | 'str -- reg/-1
	dup c@ toupp | str c0
|	ultimoencontrado 0? ( inimemdb nip ) 1+
	( c@+ 1? )( toupp
		pick2 =? | str c0 db cdb
			( drop dup 1- pick3 =fi 1? ( encontrado ; ) )
		drop ) 4drop
|	inimemdb 'ultimoencontrado !
	-1 ;

|-------------FILTRO
#indf>

:addf
	over indf> !+ 'indf> ! ;

::dbfilter | 'que fld --
	-1 =? ( nip 'cntregi ! ; ) | -1 apaga filtro
	indmei 'indf> !
	0 ( cntreg <? )(
|		dup dbreg@
		pick2 >>fld
		pick3 =f 1? ( addf )
		drop 1+ )
	3drop
	indf> indmei - 2 >> 'cntregi !
	;

::dbfilterv | 'que --
	0? ( drop -1 'cntregi ! ; ) | 0 apaga filtro
	indmei 'indf> !
	0 ( cntreg <? )(
|		dup getregp		| 'que nro
		over exec 		| 'que nro 1/0
		1? ( addf ) drop
		1+ )
	2drop
	indf> indmei - 2 >> 'cntregi !
	;


|-------------FILTRO & SORT
::dbfiltersortv | sort 'que --
	dbfilterv
	mark
	0 ( cntregi <? )(
		dup 2 << indmei + @
|		dup dbreg@
		pick3 >>fld
		toval , ,
		1+ ) 2drop
	empty
	cntregi 1+ here shellsort | len lista --

	here indmei
	cntregi ( 1? )( 1- >r
		swap 4+ @+ rot !+
		r> ) 3drop ;

|--- GRILLA
| #grlista Act Pag c1 c2 c3 .. 0 "titulos|lista"
#grl
#act

:t0 "%a" gcell ;
:t1 "%a" gcellc ;
:t2 "%a" gcell ;
:t3 "%a" gcellr ;
#tiposg t0 t1 t2 t3

:dbline
	rowg
	[ dup 'act ! over indmei - 2 >> 1- grl 8 - ! ; ] onLineMove | click en linea
	act =? ( $ff gfill blanco )( $ffffff gfill negro )
	grl ( @+ 1? )(
		pick2 over $ff and >>fld
		swap 16 >> 3 and 2 << 'tiposg + @ exec
		) 3drop
	cr ;

::dbgrid | cnt 'lista 'db --
	dbuse
	cntregi pick2 /
	1? (
		cyan cols 14 - col
		[ over 4+ @ 1- -? ( 0 nip ) pick2 4+ ! ; ] " < " btnt
		dup 1+ pick2 4+ @ 1+ "  %d/%d  " print
		[ over 4+ @ 1+ over >? ( over nip ) pick2 4+ ! ; ] " > " btnt
		) drop
	cr cr2
	dup 0.99 grid2

	$cccccc gfill negro
	dup 8 + dup 'grl !
	( @+ 1? )( drop ) drop
	( dup "%a" gcellc >fld> 0? ) drop cr

	blanco
	'dbline swap 4+ @ rot dbusemapage

	gris $grid ;
	;

