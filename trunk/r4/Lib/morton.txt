|------ MORTON COMANDER

| x y en 16 bits-- z en 32 bits
::morton2d | x y -- z
	dup 8 << or $00ff00ff and
	dup 4 << or $0f0f0f0f and
	dup 2 << or $33333333 and
	dup 2* or   $55555555 and
	2* swap
	dup 8 << or $00ff00ff and
	dup 4 << or $0f0f0f0f and
	dup 2 << or $33333333 and
	dup 2* or   $55555555 and
	or ;

::invmorton2d | z -- x y
	dup $55555555 and
	dup 2/ xor $33333333 and
	dup 2 >> xor $0f0f0f0f and
	dup 4 >> xor $ff00ff and
	dup 8 >> xor $ffff and
	swap
	2/ $55555555 and
	dup 2/ xor $33333333 and
	dup 2 >> xor $0f0f0f0f and
	dup 4 >> xor $ff00ff and
	dup 8 >> xor $ffff and ;

|--- 3D x y z . 10 bits
:p1x2 | x -- v
 	$1ff +                			| correccion!!
	$3ff and
	dup 16 << xor $ff0000ff and
	dup 8 << xor  $0300f00f and
	dup 4 << xor  $030c30c3 and
	dup 2 << xor  $09249249 and ;

::morton3d | x y z -- Z
	p1x2 2* swap p1x2 or 2* swap p1x2 or ;

:c1x2 | x - v
	$09249249 and
	dup 2 >> xor $030c30c3 and
	dup 4 >> xor $0300f00f and
	dup 8 >> xor $ff0000ff and
	dup 16 >> xor $3ff and $1ff - ; | correccion!!

::invmorton3d | Z -- x y z
 	dup c1x2 swap 2/ dup c1x2 swap 2/ c1x2 ;

#mortonlutl
$00000000 $00000001 $00000008 $00000009 $00000040 $00000041 $00000048 $00000049
$00000200 $00000201 $00000208 $00000209 $00000240 $00000241 $00000248 $00000249
$00001000 $00001001 $00001008 $00001009 $00001040 $00001041 $00001048 $00001049
$00001200 $00001201 $00001208 $00001209 $00001240 $00001241 $00001248 $00001249

::mortonlut | x y z -- m
	dup $1f and 2 << 'mortonlutl + @ swap 3 >> $7c and 'mortonlutl + @ 15 << or 2*
	over $1f and 2 << 'mortonlutl + @ rot 3 >> $7c and 'mortonlutl + @ 15 << or or 2*
	over $1f and 2 << 'mortonlutl + @ rot 3 >> $7c and 'mortonlutl + @ 15 << or or
	;

#tpopcnt (
    0 1 1 2 1 2 2 3 1 2 2 3 2 3 3 4
    1 2 2 3 2 3 3 4 2 3 3 4 3 4 4 5
    1 2 2 3 2 3 3 4 2 3 3 4 3 4 4 5
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    1 2 2 3 2 3 3 4 2 3 3 4 3 4 4 5
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    3 4 4 5 4 5 5 6 4 5 5 6 5 6 6 7
    1 2 2 3 2 3 3 4 2 3 3 4 3 4 4 5
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    3 4 4 5 4 5 5 6 4 5 5 6 5 6 6 7
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    3 4 4 5 4 5 5 6 4 5 5 6 5 6 6 7
    3 4 4 5 4 5 5 6 4 5 5 6 5 6 6 7
    4 5 5 6 5 6 6 7 5 6 6 7 6 7 7 8 )

::popcnt | nro -- cnt
	'tpopcnt + c@ ;

#tplace  $01 $02 $04 $08 $10 $20 $40 $80

::place | nro -- pl
	2 << 'tplace + @ ;
