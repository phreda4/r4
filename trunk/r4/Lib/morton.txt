|------ MORTON COMANDER

| x y en 16 bits-- z en 32 bits
::morton2d | x y -- z
	dup 8 << or $00ff00ff and
	dup 4 << or $0f0f0f0f and
	dup 2 << or $33333333 and
	dup 2* or   $55555555 and
	2* swap
	dup 8 << or $00ff00ff and
	dup 4 << or $0f0f0f0f and
	dup 2 << or $33333333 and
	dup 2* or   $55555555 and
	or ;

::invmorton2d | z -- x y
	dup $55555555 and
	dup 2/ xor $33333333 and
	dup 2 >> xor $0f0f0f0f and
	dup 4 >> xor $ff00ff and
	dup 8 >> xor $ffff and
	swap
	2/ $55555555 and
	dup 2/ xor $33333333 and
	dup 2 >> xor $0f0f0f0f and
	dup 4 >> xor $ff00ff and
	dup 8 >> xor $ffff and ;

|--- 3D x y z . 10 bits
:p1x2 | x -- v
 	$1ff +                			| correccion!!
	$3ff and
	dup 16 << xor $ff0000ff and
	dup 8 << xor  $0300f00f and
	dup 4 << xor  $030c30c3 and
	dup 2 << xor  $09249249 and ;

::morton3d | x y z -- Z
	p1x2 2* swap p1x2 or 2* swap p1x2 or ;

:c1x2 | x - v
	$09249249 and
	dup 2 >> xor $030c30c3 and
	dup 4 >> xor $0300f00f and
	dup 8 >> xor $ff0000ff and
	dup 16 >> xor $3ff and $1ff - ; | correccion!!

::invmorton3d | Z -- x y z
 	dup c1x2 swap 2/ dup c1x2 swap 2/ c1x2 ;

#mortonlutl
$00000000 $00000001 $00000008 $00000009 $00000040 $00000041 $00000048 $00000049
$00000200 $00000201 $00000208 $00000209 $00000240 $00000241 $00000248 $00000249
$00001000 $00001001 $00001008 $00001009 $00001040 $00001041 $00001048 $00001049
$00001200 $00001201 $00001208 $00001209 $00001240 $00001241 $00001248 $00001249
|.. para lut8 ..
$00008000 $00008001 $00008008 $00008009 $00008040 $00008041 $00008048 $00008049
$00008200 $00008201 $00008208 $00008209 $00008240 $00008241 $00008248 $00008249
$00009000 $00009001 $00009008 $00009009 $00009040 $00009041 $00009048 $00009049
$00009200 $00009201 $00009208 $00009209 $00009240 $00009241 $00009248 $00009249
$00040000 $00040001 $00040008 $00040009 $00040040 $00040041 $00040048 $00040049
$00040200 $00040201 $00040208 $00040209 $00040240 $00040241 $00040248 $00040249
$00041000 $00041001 $00041008 $00041009 $00041040 $00041041 $00041048 $00041049
$00041200 $00041201 $00041208 $00041209 $00041240 $00041241 $00041248 $00041249
$00048000 $00048001 $00048008 $00048009 $00048040 $00048041 $00048048 $00048049
$00048200 $00048201 $00048208 $00048209 $00048240 $00048241 $00048248 $00048249
$00049000 $00049001 $00049008 $00049009 $00049040 $00049041 $00049048 $00049049
$00049200 $00049201 $00049208 $00049209 $00049240 $00049241 $00049248 $00049249
$00200000 $00200001 $00200008 $00200009 $00200040 $00200041 $00200048 $00200049
$00200200 $00200201 $00200208 $00200209 $00200240 $00200241 $00200248 $00200249
$00201000 $00201001 $00201008 $00201009 $00201040 $00201041 $00201048 $00201049
$00201200 $00201201 $00201208 $00201209 $00201240 $00201241 $00201248 $00201249
$00208000 $00208001 $00208008 $00208009 $00208040 $00208041 $00208048 $00208049
$00208200 $00208201 $00208208 $00208209 $00208240 $00208241 $00208248 $00208249
$00209000 $00209001 $00209008 $00209009 $00209040 $00209041 $00209048 $00209049 
$00209200 $00209201 $00209208 $00209209 $00209240 $00209241 $00209248 $00209249 
$00240000 $00240001 $00240008 $00240009 $00240040 $00240041 $00240048 $00240049 
$00240200 $00240201 $00240208 $00240209 $00240240 $00240241 $00240248 $00240249 
$00241000 $00241001 $00241008 $00241009 $00241040 $00241041 $00241048 $00241049 
$00241200 $00241201 $00241208 $00241209 $00241240 $00241241 $00241248 $00241249 
$00248000 $00248001 $00248008 $00248009 $00248040 $00248041 $00248048 $00248049 
$00248200 $00248201 $00248208 $00248209 $00248240 $00248241 $00248248 $00248249 
$00249000 $00249001 $00249008 $00249009 $00249040 $00249041 $00249048 $00249049
$00249200 $00249201 $00249208 $00249209 $00249240 $00249241 $00249248 $00249249

::mortonlut | x y z -- m
	dup $1f and 2 << 'mortonlutl + @ swap 3 >> $7c and 'mortonlutl + @ 15 << or 2*
	over $1f and 2 << 'mortonlutl + @ rot 3 >> $7c and 'mortonlutl + @ 15 << or or 2*
	over $1f and 2 << 'mortonlutl + @ rot 3 >> $7c and 'mortonlutl + @ 15 << or or
	;

::mortonlut8 | x y z -- m
	$ff and 2 << 'mortonlutl + @ 2 <<
	swap $ff and 2 << 'mortonlutl + @ 2* or
	swap $ff and 2 << 'mortonlutl + @ or
	;

#tpopcnt (
    0 1 1 2 1 2 2 3 1 2 2 3 2 3 3 4
    1 2 2 3 2 3 3 4 2 3 3 4 3 4 4 5
    1 2 2 3 2 3 3 4 2 3 3 4 3 4 4 5
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    1 2 2 3 2 3 3 4 2 3 3 4 3 4 4 5
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    3 4 4 5 4 5 5 6 4 5 5 6 5 6 6 7
    1 2 2 3 2 3 3 4 2 3 3 4 3 4 4 5
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    3 4 4 5 4 5 5 6 4 5 5 6 5 6 6 7
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    3 4 4 5 4 5 5 6 4 5 5 6 5 6 6 7
    3 4 4 5 4 5 5 6 4 5 5 6 5 6 6 7
    4 5 5 6 5 6 6 7 5 6 6 7 6 7 7 8 )

::popcnt | nro -- cnt
	'tpopcnt + c@ ;

#tplace  $01 $02 $04 $08 $10 $20 $40 $80

::place | nro -- pl
	2 << 'tplace + @ ;
