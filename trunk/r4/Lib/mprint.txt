| Fuentes unificadas
| :r4 libreria de sistema - Fuente de letras
|---------------------------------------------


|------------------------------ print a buffer
#mbuffer )( 4096 | 4kb linea
#mbuffer> 'mbuffer

:m, mbuffer> !+ 'mbuffer> ! ;
:m,c mbuffer> c!+ 'mbuffer> ! ;
:m,w mbuffer> w!+ 'mbuffer> ! ;

:c0	| 'p
	swap 0? ( drop ; )
	( c@+ 1? )(
		$7c =? ( 2drop ; )
		$7e =? ( 2drop ; )
		m,c ) 2drop ;
:c1	| a,q		| para db _|
	swap 0? ( drop ; )
	( c@+ 1? )(
		$5f =? ( 2drop ; )
		$7c =? ( 2drop ; )
		$7e =? ( 2drop ; )
		31 >? ( m,c )( drop ) ) 2drop ;
:c2	| b,r		(%b) binario
	0 rot
	( dup $1 and $30 + swap 2/ $7fffffff and 0? ) drop
	( m,c 0? ) drop ;
:c3	| c,s		(%s) string
	swap 0? ( drop ; )
	( c@+ 1? )( m,c ) 2drop ;
:singular
	drop
	"-2147483648" ( c@+ 1? )( m,c ) 2drop ;
:c4	| d,t		(%d) decimal
	swap
	-? ( neg -? ( singular ; ) $2d m,c )
	0 swap ( 10 /mod $30 + swap 0? ) drop
	( m,c 0? ) drop ;
:c5	| e,u,%		(%%) caracter %
	$25 m,c ;
:c6	| f,v		(%f) punto fijo
	over 16 >> -? ( 1+ 0? ( $2d m,c ) ) swap
	c4
	$2e m,c | .
	swap
|:dec  | v --
	-? ( not ) $ffff and
	100 $ff00 */ 100 +	| solo dos decimales *** ojo falta investigar
	0 swap ( 10 /mod $30 + swap 0? ) drop
	drop ( m,c 0? ) drop
	;
:c7	| ..w		(%w) palabra
	swap 0? ( drop ; )
	( c@+ $ff and 32 >? )( m,c ) 2drop ;
:c8	| h..			(%h) hexa
	0 rot
	|-? ( $2d m,c neg )
	( dup $f and $30 + swap 4 >> $FFFFFFF and 0? ) drop | quite and por -
	( $39 >? ( 7 + ) m,c 0? ) drop ;
:c9	| i,y			(%i) parte entera fixed
	swap 16 >> c4 ;
:ca	| j,z			(%j) parte decimal fixel
	swap $ffff and c4 ; | <--- NO ES
:cb	| k,
	;
:cc	| l,			(%l) linea
	swap 0? ( drop ; )
	( c@+ 1? )( 13 =? ( 2drop ; ) m,c ) 2drop ;
:cd	| m,}
	;
:ce	| .	| cr		(%.) finlinea
	13 m,c ;
:cf	| o,			(%o) octal
	0 rot
	-? ( $2d m,c neg )
	( dup $7 and $30 + swap 3 >> 0? ) drop | por -? quite $1fffffff and
	( m,c 0? ) drop ;

#control c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf

:m,emit | c --
	$25 <>? ( m,c ; ) drop c@+
	$f and 2 << 'control + @ exec ;

::mprint | .. a b c adr -- addr
	'mbuffer 'mbuffer> !
	( c@+ 1? )( m,emit ) 2drop 0 m,c
	'mbuffer ;

