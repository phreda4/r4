| print con reemplazo
| :r4 libreria de sistema - Fuente de letras
|---------------------------------------------
^r4/lib/mem.txt

::, here !+ 'here ! ;
::,c here c!+ 'here ! ;
|::,w here w!+ 'here ! ;
|::,s ( c@+ 1? )( ,c ) 2drop ;

::,s here swap ( c@+ 1? )( rot c!+ swap ) 2drop 'here ! ;
::,w here swap ( c@+ $ff and 32 >? )( rot c!+ swap ) 2drop 'here ! ;

::,ln ,s
::,cr 13 ,c ;
::,eol 0 ,c ;
::,sp 32 ,c ;
::,nl 13 ,c 10 ,c ;

:c0	| 'p                     (%p)
	swap 0? ( drop ; )
	( c@+ 1? )(
		$7c =? ( 2drop ; )
		$7e =? ( 2drop ; )
		,c ) 2drop ;
:c1	| a,q		| para db _| (%a)
	swap 0? ( drop ; )
	( c@+ 1? )(
		$5f =? ( 2drop ; )
		$7c =? ( 2drop ; )
		$7e =? ( 2drop ; )
		,c ) 2drop ;

#mbuff 0 0 0 0 0 0 0 0 0 | 9*4= 36 bytes

|::,b | bin --
|	0 swap ( dup $1 and $30 + swap 2/ $7fffffff and 0? ) drop
|	( ,c 0? ) drop ;

::,b | bin --
	'mbuff 34 + swap
	( dup $1 and $30 + pick2 c! swap 1- swap 2/ $7fffffff and 0? ) drop
	1+ ,s ;

:c2	| b,r		(%b) binario
	swap ,b ;

:c3	| c,s		(%s) string
	swap 0? ( drop ; ) ,s ;

:singular
	drop "-2147483648" ,s ;

|::,d | dec --
|	-? ( neg -? ( singular ; ) $2d ,c )
|	0 swap ( 10 /mod $30 + swap 0? ) drop
|	( ,c 0? ) drop ;

::,d
	-? ( neg -? ( singular ; ) $2d ,c )
	'mbuff 34 + swap
	( 10 /mod $30 + pick2 c! swap 1- swap 0? ) drop
	1+ ,s ;


:c4	| d,t		(%d) decimal
	swap ,d ;

:c5	| e,u,%		(%%) caracter %
	$25 ,c ;

:,df
	'mbuff 34 + swap
	( 10 /mod $30 + pick2 c! swap 1- swap 0? ) drop
	2 + ,s ; | quita el 1

::,f | fix --
	-? ( neg $2d ,c )
	dup 16 >> ,d $2e ,c | .
	$ffff and
	10000 16 *>> 10000 +	| solo 4 decimales
	,df ;

::,f2 | fix --
	-? ( neg $2d ,c )
	dup 16 >> ,d $2e ,c | .
	$ffff and
	100 16 *>> 100 +	| solo 2 decimales
	,df ;

::,d2 | int2 --
	100 /mod swap ,d
	"." ,s
	9 <=? ( "0" ,s )
	,d ;

:c6	| f,v		(%f) punto fijo
	swap ,f ;

:c7	| ..w		(%w) palabra
	swap 0? ( drop ; ) ,w ;

|::,h | hex --
|	0 swap
|	( dup $f and $30 + swap 4 >> $fffffff and 0? ) drop
|	( $39 >? ( 7 + ) ,c 0? ) drop ;

::,h
	'mbuff 34 + swap
	( dup $f and $30 + $39 >? ( 7 + ) pick2 c! swap 1- swap 4 >> $fffffff and 0? ) drop
	1+ ,s ;

:c8	| h..			(%h) hexa
	swap ,h ;

:c9	| i,y			(%i) parte entera fixed
	swap 16 >> ,d ;
:ca	| j,z			(%j) parte decimal fixel
	swap $ffff and ,d ; | <--- NO ES
:cb	| k,			(%k) caracter
	swap ,c ;
:cc	| l,			(%l) linea
	swap 0? ( drop ; )
	( c@+ 1? )( 13 =? ( 2drop ; ) ,c ) 2drop ;
:cd	| m,}
	;
:ce	| .	| cr		(%.) finlinea
	13 ,c ;

|::,o | octal --
|	-? ( neg -? ( 0 nip ) $2d ,c  ) | -0 como -2147483648
|	( dup $7 and $30 + swap 3 >> 0? ) drop | por -? quite $1fffffff and
|	( ,c 0? ) drop ;
::,o | octal --
	-? ( neg -? ( 0 nip ) $2d ,c  ) | -0 como -2147483648
	'mbuff 34 + swap
	( dup $7 and $30 + pick2 c! swap 1- swap 3 >> 0? ) drop
	1+ ,s ;

:cf	| o,			(%o) octal
	swap ,o ;

#control c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf

:,emit | c --
	$25 <>? ( ,c ; ) drop
	c@+ $f and 2 << 'control + @ exec ;

::,print | p p .. adr --
	( c@+ 1? )( ,emit ) 2drop ;

::,line ,print ,nl ;

#b1 )( 4096 #b2 )( 4096 | buffer local para mprint

::mprint | ... a b c adr -- nadr
	mark
|	here 8192 + over =? ( 8192 + ) | puede llamarse otra vez!!
|	here 4096 + over =? ( 4096 + ) | puede llamarse otra vez!!
|	here 2048 + over =? ( 2048 + ) | puede llamarse otra vez!!
	'b1 =? ( 'b2 )( 'b1 )		| puede llamarse otra vez!!
	dup 'here ! >r
	( c@+ 1? )( ,emit ) ,c drop
	empty r> ;

#controc 1  1  1  1  1  1  1  1  1  1  1  1  1  0  0  1

:count
	$25 <>? ( drop ; ) drop
	c@+ $f and 2 << 'controc + @
	rot + swap
	;

::strusestack | "" -- "" n
	0 over ( c@+ 1? )( count ) 2drop ;