| print con reemplazo
| :r4 libreria de sistema - Fuente de letras
|---------------------------------------------

::, here !+ 'here ! ;
::,c here c!+ 'here ! ;
|::,w here w!+ 'here ! ;
::,s ( c@+ 1? )( ,c ) 2drop ;
::,w ( c@+ $ff and 32 >? )( ,c ) 2drop ;
::,ln ,s
::,cr 13 ,c ;
::,eol 0 ,c ;
::,sp 32 ,c ;
::,nl 13 ,c 10 ,c ;

:c0	| 'p                     (%p)
	swap 0? ( drop ; )
	( c@+ 1? )(
		$7c =? ( 2drop ; )
		$7e =? ( 2drop ; )
		,c ) 2drop ;
:c1	| a,q		| para db _| (%a)
	swap 0? ( drop ; )
	( c@+ 1? )(
		$5f =? ( 2drop ; )
		$7c =? ( 2drop ; )
		$7e =? ( 2drop ; )
		,c ) 2drop ;
:c2	| b,r		(%b) binario
	swap
::,b | bin --
	0 swap ( dup $1 and $30 + swap 2/ $7fffffff and 0? ) drop
	( ,c 0? ) drop ;

:c3	| c,s		(%s) string
	swap 0? ( drop ; ) ,s ;

:singular
	drop "-2147483648" ,s ;

:c4	| d,t		(%d) decimal
	swap
::,d | dec --
	-? ( neg -? ( singular ; ) $2d ,c )
	0 swap ( 10 /mod $30 + swap 0? ) drop
	( ,c 0? ) drop ;

:c5	| e,u,%		(%%) caracter %
	$25 ,c ;

:c6	| f,v		(%f) punto fijo
	swap
::,f | fix --
	dup 16 >> -? ( 1+ 0? ( $2d ,c ) )
	,d
	$2e ,c | .
	-? ( not ) $ffff and
	100 $ffff */ 100 +	| solo dos decimales *** ojo falta investigar
|	,d
	0 swap ( 10 /mod $30 + swap 0? ) drop
	drop ( ,c 0? ) drop
	;

:c7	| ..w		(%w) palabra
	swap 0? ( drop ; ) ,w ;

:c8	| h..			(%h) hexa
	swap
::,h | hex --
	0 swap
	( dup $f and $30 + swap 4 >> $fffffff and 0? ) drop
	( $39 >? ( 7 + ) ,c 0? ) drop ;

:c9	| i,y			(%i) parte entera fixed
	swap 16 >> ,d ;
:ca	| j,z			(%j) parte decimal fixel
	swap $ffff and ,d ; | <--- NO ES
:cb	| k,			(%k) caracter
	swap ,c ;
:cc	| l,			(%l) linea
	swap 0? ( drop ; )
	( c@+ 1? )( 13 =? ( 2drop ; ) ,c ) 2drop ;
:cd	| m,}
	;
:ce	| .	| cr		(%.) finlinea
	13 ,c ;
:cf	| o,			(%o) octal
	swap
::,o | octal --
	-? ( neg -? ( 0 nip ) $2d ,c  ) | -0 como -2147483648
	( dup $7 and $30 + swap 3 >> 0? ) drop | por -? quite $1fffffff and
	( ,c 0? ) drop ;

#control c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf

:,emit | c --
	$25 <>? ( ,c ; ) drop
	c@+ $f and 2 << 'control + @ exec ;

::,print | p p .. adr --
	( c@+ 1? )( ,emit ) 2drop ;

::,line ,print ,nl ;

::mprint | ... a b c adr -- nadr
	mark
|	here 8192 + over =? ( 8192 + ) | puede llamarse otra vez!!
|	here 4096 + over =? ( 4096 + ) | puede llamarse otra vez!!
	here 2048 + over =? ( 2048 + ) | puede llamarse otra vez!!

	dup 'here ! >r
	( c@+ 1? )( ,emit ) ,c drop
	empty r> ;
