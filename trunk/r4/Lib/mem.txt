| Teclado, Memoria, Conversion, Basicos
| PHREDA
| :r4 system library
|-------------------------
^r4/lib/keyboard.txt

|--- Memoria
::zcopy | destino fuente -- destino' con 0
	( @+ 1? )( rot !+ swap ) rot !+ nip ;
::strcat | src des --
	( c@+ 1? )( drop ) drop 1-
::strcpy | src des --
	( swap c@+ 1? )( rot c!+ ) nip swap c! ;
::strcpyl | src des -- ndes
	( swap c@+ 1? )( rot c!+ ) rot c!+ nip ;
::strcpyln | src des --
	( swap c@+ 1? )( 13 =? ( 2drop 0 swap c! ; )
		rot c!+ ) rot c!+ drop ;
::strchg | ree car adr --
	( c@+ 1? )( | r c adr c
		pick2 =? ( drop pick2 over 1- c! )( drop )
		) 4drop ;

::copynom | sc s1 --
	( c@+ 32 >? )(
		rot c!+ swap ) 2drop
	0 swap c! ;

::copystr | sc s1 --
	( c@+ 34 <>? )(
		rot c!+ swap ) 2drop
	0 swap c! ;

|-------------------
::count | s1 -- s1 cnt
	0 over ( c@+ 1? )( drop swap 1+ swap ) 2drop  ;

::toupp | c -- C
	$60 >? ( $7b <? ( $20 - ) ) ;
::tolow
	$40 >? ( $5b <? ( $20 + ) ) ;

::=word= | s1 s2 -- 0 \ s2' 1
	( swap c@+ 1? )( rot c@+ toupp rot -
		1? ( 3drop 0 ; ) drop ) 2drop
	dup c@ 33 <? ( drop 1 )( 2drop 0 ) ;

::= | s1 s2 -- 1/0
	( swap c@+ 1? )( toupp rot c@+ toupp rot -
		1? ( 3drop 0 ; ) drop ) 2drop
	c@ 33 <? ( 1 )( 0 ) nip ;

::=pre | s1 s2 -- 1/0
	( c@+ 1? )( toupp rot c@+ toupp rot -
		1? ( 3drop 0 ; ) drop swap ) 3drop 1 ;

::=w | s1 s2 -- 1/0
	( c@+ 32 >? )( toupp rot c@+ toupp rot -
		1? ( 3drop 0 ; ) drop swap ) 2drop
	c@ 33 <? ( 1 )( 0 ) nip ;

|--- Memoria libre
#:here 0

#memmap )( 1024
#memmap> 'memmap

::mark | --
	here 0? ( mem dup 'here ! nip ) memmap> !+ 'memmap> ! ;
::empty | --
	memmap> 'memmap =? ( mem nip )( 4 - dup 'memmap> ! @ ) 'here ! ;

::savemem | "" --
	memmap> 4 - @ here over - rot save ;

::cpymem | 'destino --
	memmap> 4 - @ here over -
	cmove ; | de sr cnt --

::, here !+ 'here ! ;
::,c here c!+ 'here ! ;
|::,w here w!+ 'here ! ;
::,s ( c@+ 1? )( ,c ) 2drop ;
::,w ( c@+ $ff and 32 >? )( ,c ) 2drop ;

:sing
	drop "-2147483648" ,s ;
::,d | dec --
	-? ( neg -? ( sing ; ) $2d ,c )
	0 swap ( 10 /mod $30 + swap 0? ) drop
	( ,c 0? ) drop ;

::,h | hex --
	0 swap
	( dup $f and $30 + swap 4 >> $fffffff and 0? ) drop
	( $39 >? ( 7 + ) ,c 0? ) drop ;

::,b | bin --
	0 swap ( dup $1 and $30 + swap 2/ $7fffffff and 0? ) drop
	( ,c 0? ) drop ;

::,o | octal --
	-? ( neg -? ( 0 nip ) $2d ,c  ) | -0 como -2147483648
	( dup $7 and $30 + swap 3 >> 0? ) drop | por -? quite $1fffffff and
	( ,c 0? ) drop ;

::,f | fix --
	dup 16 >> -? ( 1+ 0? ( $2d ,c ) )
	,d
	$2e ,c | .
	-? ( not ) $ffff and
	100 $ff00 */ 100 +	| solo dos decimales *** ojo falta investigar
	0 swap ( 10 /mod $30 + swap 0? ) drop
	drop ( ,c 0? ) drop
	;

::,ln ,s
::,cr 13 ,c ;
::,eol 0 ,c ;
::,sp 32 ,c ;
::,nl 13 ,c 10 ,c ;

:,emit | p p .. adr c --
	$25 <>? ( ,c ; ) drop c@+
	$73 =? ( drop swap ,s ; )	| s
	$64 =? ( drop swap ,d ; )	| d
	$68 =? ( drop swap ,h ; )	| h
	$62 =? ( drop swap ,b ; )	| b
	$77 =? ( drop swap ,w ; )	| w
	$66 =? ( drop swap ,f ; )	| f
	$3e =? ( drop 9 ,c ; )		|%> =tab
	$2e =? ( drop ,cr ; ) 		|%.=enter
	,c ;

::,print | p p .. adr --
	( c@+ 1? )( ,emit ) 2drop ;

::,line ,print ,nl ;