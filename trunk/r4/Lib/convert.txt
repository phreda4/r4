

|--------- Vector 3d
| vector3d a 10 bits
| x=10 bits y=10 bits z=10 bits control=2bit

::>z	20 << 22 >> ;
::>y 10 <<
::>x 22 >> ;

::>xyz | v -- x y z
	dup >z 5 << >r dup >y 5 << >r  >x 5 << r> r> ;

::3d> | x y z -- v
	$ffc000 and 12 >> >r $ffc000 and 2 >> r> or swap $ffc000 and 8 << or 3 or ;

|--------- Vector 2d
| vector2d de 14 bits c/control
| x=14 bits	y=14 bits  control=4bits

::xy>d | x y -- v
	4 << $3fff0 and swap 18 << $fffc0000 and or ;
::d>xy | v -- x y
	dup 18 >> swap
::d>y | v -- y
	14 << 18 >> ;
::d>x | v -- x
	18 >> ;

::dxy |v1 v2 -- dx dy
	over 14 << 18 >> over  14 << 18 >> - >r	18 >> swap 18 >> swap - r> ;

|---------- uv
| x=16 bits y= 16bits

::uv> $ffff and 16 << swap $ffff and or ; | u v -- uv
::>u 16 <<
::>v 16 >> ;
::>uv | v -- u v
	dup >u swap >v ;


|---- corredores
::>>s | adr -- adr'  _
	( c@+ 1? )(
		$5f =? ( drop ; )
		$7c =? ( drop 1- ; )
		$7e =? ( drop 1- ; ) | ~ registro
		drop ) drop 1- ;

::>>f | adr -- adr' |
	( c@+ 1? )(
		$7c =? ( drop ; )
		$7e =? ( drop 1- ; ) | ~ registro
		drop ) drop 1- ;

::fld# | adr -- adr cnt
	0 over
	( c@+ 1? )(
		$7c =? ( rot 1+ rot rot )
		$7e =? ( 2drop ; ) | ~ registro
		drop ) 2drop ;


::>>fi | adr -- adr'  _
	( c@+ 1? )(
		$7e =? ( drop ; ) | ~ registro
		drop ) drop 1- ;

::reg# | adr -- adr cnt
	0 over
	( c@+ 1? )(
		$7e =? ( rot 1+ rot rot ) | ~ registro
		drop ) 2drop ;


::>>0 | adr -- adr' ; pasa 0
	( c@+ 1? )( drop ) drop ;

