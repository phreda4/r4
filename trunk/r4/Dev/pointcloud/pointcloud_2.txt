^r4/lib/gui.txt


#xmin #ymin #xmax #ymax
#xsum #ysum
#xcam 0 #ycam 0 #zcam -5.0
#xr 0.20 #yr 0.25

:3dop project3d op ;
:3dline project3d line ;
:3dpline project3d pline ;

:ejes
	-5.0 0 0 3dop 5.0 0 0 3dline
	0 -5.0 0 3dop 0 5.0 0 3dline
	0 0 -5.0 3dop 0 0 5.0 3dline ;

:marcas
	-5.0 ( 5.0 <? )(
		dup 0.01 0 3dop dup -0.01 0 3dline
		0.01 over 0 3dop -0.01 over 0 3dline
		0 0.01 pick2 3dop 0 -0.01 pick2 3dline
		1.0 + ) drop ;

:grillaxy
	-5.0 ( 5.0 <=? )(
		dup -5.0 0 3dop dup 5.0 0 3dline
		-5.0 over 0 3dop 5.0 over 0 3dline
		1.0 + ) drop ;

:grillayz
	-5.0 ( 5.0 <=? )(
		0 over -5.0 3dop 0 over 5.0 3dline
		0 -5.0 pick2 3dop 0 5.0 pick2 3dline
		1.0 + ) drop ;

:grillaxz
	-5.0 ( 5.0 <=? )(
		dup 0 -5.0 3dop dup 0 5.0 3dline
		-5.0 0 pick2 3dop 5.0 0 pick2 3dline
		1.0 + ) drop ;

:teclado
	'exit >esc<
	[ 0.1 'ycam +! ; ] <up>
	[ -0.1 'ycam +! ; ] <dn>
	[ 0.1 'xcam +! ; ] <le>
	[ -0.1 'xcam +! ; ] <ri>
	[ 0.1 'zcam +! ; ] <pgdn>
	[ -0.1 'zcam +! ; ] <pgup>
	[ 0.01 'xr +! ; ] <spc>
	;

:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx
	mroty ;

:drawp | x y z ---
	project3d |2dup op line ;
	-? ( 2drop ; ) sh >=? ( 2drop ; )
	swap -? ( 2drop ; ) sw >=? ( 2drop ; ) swap
	setxy
	ink@ px!+
	;

|-----------------
| rand en box
:rr
	rnd $1ffff and $ffff - ;

:drawpointrand
	2 rndseed
	0 ( 5000 <? )(
		rr rr rr drawp
		1+ ) drop
	;

|-----------------
| coordenadas esfericas
| x = sinUcosV
| y = sinUsinV
| z = cosU
:drawpoints
	0 ( 1.0 <? )(
		0 ( 1.0 <? )(
			over sincos | u v sinu cosu
			pick2 sincos | u v sinu cosu sinv cosv
			pick3 *. >r | u v sinu cosu sinv   r:x
			rot *. r>
			drawp
			0.05 + ) drop
		0.05 + ) drop
	;

|const float a = (float) sqrt(2.0f/(5.0f + sqrt(5.0f))); 0.52573
|const float b = (float) sqrt(2.0f/(5.0f - sqrt(5.0f))); 0.85065

#icosahedro 12
-0.52573 0  0.85065 0
0.52573  0   0.85065 0
-0.52573  0  -0.85065 0
0.52573  0   -0.85065 0
0  0.85065   0.52573 0
0  0.85065  -0.52573 0
0  -0.85065   0.52573 0
0  -0.85065  -0.52573 0
0.85065  0.52573   0  0
-0.85065  0.52573  0  0
0.85065  -0.52573   0 0
-0.85065  -0.52573  0 0

#icosahedrof  20
$ff0000 1  4 0
$ffff00 4 9 0
$00ffff 4 5  9
$ff00ff 8 5  4
$00ff00 1 8  4
$00ffff 1 10 8
$00ff00 10 3 8
$ff0000 8 3  5
$00ff00 3 2  5
$00ff00 3 7  2
$ffff00 3 10 7
$ff0000 10 6 7
$ff0000 6 11 7
$ff0000 6 0 11
$ff0000 6 1  0
$ffff00 10 1 6
$ff0000 11 0 9
$ff0000 2 11 9
$ff0000 5 2  9
$ff0000 11 2 7

:drawico | ico --
	@+ swap >r
	( 1? )( 1-
		r@+ r@+ r@+ drawp
		4 r+ ) drop rdrop
	;

:drawpointiso
	'icosahedro drawico ;

:drawicoss | adr cnt --
	swap >r
	0 ( over <? )(
		r@+ r@+ r@+ drawp
		4 r+
		1+ ) 2drop rdrop ;

:drawicos | ico --
	@+ swap >r
	16 ( 1? )( 1-
		dup 4 << over or $ff00 or ink
		r pick2 drawicoss
		) drop
	rdrop ;

:drawpointiso
	'icosahedro drawicos ;


:drawvert | n -- x y
	4 << 'icosahedro + 4+ >r
	r@+ r@+ r@+ project3d
	rdrop ;

:drawicof
	@+ swap >r
	( 1? )( 1-
		r@+ ink
		r@+ drawvert 2dup op
		r@+ drawvert pline
		r@+ drawvert pline pline poli
		) drop rdrop
	;

:drawpointfiso
	'icosahedrof drawicof
	;

|-----------------
|    Choose height u uniformly distributed in [-1,1].
|    Choose angle psi uniformly distributed on [0, 2*pi).
| r = sqrt(1-u^2).
| x = r * cos(psi).
| y = r * sin(psi).
:drawpointt
	-1.0 ( 1.0 <? )(
		0 ( 1.0 <? )(
			1 pick2 dup *. - sqrt.	| r
			over sincos				| r s c
			pick2 *. swap pick2 *.
			drawp
			0.05 + ) drop
		0.05 + ) drop
	;

| x y en 16 bits-- z en 32 bits
:morton2d | x y -- z
	dup 8 << or $00ff00ff and
	dup 4 << or $0f0f0f0f and
	dup 2 << or $33333333 and
	dup 2* or   $55555555 and
	2* swap
	dup 8 << or $00ff00ff and
	dup 4 << or $0f0f0f0f and
	dup 2 << or $33333333 and
	dup 2* or   $55555555 and
	or ;

|x y z . 10 bits
| sobra 2 bits!!
:morton3d | x y z -- Z
	dup 10 << or $000f801f and
	dup 4 << or  $00e181c3 and
	dup 2 << or  $03248649 and
	dup 2 << or  $09249249 and
	2* swap
	dup 10 << or $000f801f and
	dup 4 << or  $00e181c3 and
	dup 2 << or  $03248649 and
	dup 2 << or  $09249249 and
	or 2* swap
	dup 10 << or $000f801f and
	dup 4 << or  $00e181c3 and
	dup 2 << or  $03248649 and
	dup 2 << or  $09249249 and
	or ;


:main
	mark

	show clrscr
     	teclado
		1.0 3dmode
		freelook
		xcam ycam zcam mtrans
|		gris grillaxy grillayz grillaxz
		blanco

|		drawpointrand
|		drawpoints
		drawpointiso
|		drawpointfiso
		cminiflecha ;

: main ;