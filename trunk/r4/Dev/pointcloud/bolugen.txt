| bolu3d generator
| PHREDA 2012
|-----------------------------
^r4/lib/gui.txt
^r4/lib/trace.txt

#SAVEFILE
|"media/b3d/cilindro.b3d"
"media/b3d/esfera.b3d"

#xcam 0 #ycam 0 #zcam 2048

#bolu3dMap

#bolu3dRes $3ff | 1024
#bolu3dSca 10
#bolu3dRes $1ff | 512
#bolu3dSca 9

#bolu3dRes $ff | 256
#bolu3dSca 8
#bolu3dimg $ffff

|#bolu3dRes $7f | 128
|#bolu3dSca 7
|#bolu3dRes $3f | 64
|#bolu3dSca 6


|----------- graficacion
:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx
	mroty ;

:drawp | x y z ---
	project3d |2dup op line ;
	-? ( 2drop ; ) sh >=? ( 2drop ; )
	swap -? ( 2drop ; ) sw >=? ( 2drop ; ) swap
	setxy
	ink@ px!+ ;


:3dop project3d op ;
:3dline project3d line ;

|----- ver por planta

:plan | x 'map --
	>r
	0 ( bolu3dRes <=? )(
		over over setxy
		0 ( bolu3dRes <=? )(
				r@+ px!+
				1+ ) drop
		1+ ) 2drop rdrop ;

:view1
	0 bolu3dMap plan
	bolu3dRes 2 + bolu3dMap bolu3dimg 2 << + plan
	bolu3dRes 2* 4+ bolu3dMap bolu3dimg 3 << + plan ;

|-------------------------------
| nodo es $00000000
|            maxmin
:clearbox | --
	bolu3dMap
	bolu3dimg 2 << 3 *
	( 1? )( 1- $fff rot !+ swap ) 2drop ; | max=0 min=$fff

:toa | x y -- l
	bolu3dSca << + 2 << ;
:dim0 | x y -- adr
	toa bolu3dMap + ;
:dim1 | y z -- adr
	toa bolu3dMap + bolu3dimg 2 << + ;
:dim2 | x z -- adr
	toa bolu3dMap + bolu3dimg 3 << + ;

:rellena | x y z adr valor -- x y z
	over @ | adr valor valant
	dup 16 >> $ffff and
	swap $ffff and | adr valor max min
	pick2 >? ( drop over )
	swap pick2 <? ( drop over ) | adr valor min max
	16 << or nip
	swap ! ;

:fillall | x y z --
	pick2 pick2 dim0 over rellena
	over over dim1 pick3 rellena
	pick2 over dim2 pick2 rellena
	3drop ;

|------------ rellenos
:fillhexa | x y --
	over bolu3dRes 2/ -
	over bolu3dRes 2/ -
	distfast
	bolu3dres 2/ swap -
	-? ( 3drop ; )
	pick2 pick2 pick2 bolu3dRes 2/ + fillall
	bolu3dRes 2/ swap - fillall
	;

:fillcircle | x y --
	over bolu3dRes 2/ -
	over bolu3dRes 2/ -
	dup * swap dup * + sqrt
	bolu3dres 2/ swap -
	-? ( 3drop ; )
	0.25 bolu3dres */ sin bolu3dres 0.5 */

	pick2 pick2 pick2 bolu3dRes 2/ + fillall
	bolu3dRes 2/ swap - fillall
	;

:calc3d | u v -- x y z
	over sincos | u v sinu cosu
	pick2 sincos | u v sinu cosu sinv cosv
	pick3 *. >r | u v sinu cosu sinv   r:x
	rot *. r> ;

:fillcircle | x y --
	over bolu3dRes 2/ -
	over bolu3dRes 2/ -
	dup * swap dup * + sqrt
	bolu3dRes 2/ swap - 4 -
	-? ( 3drop ; )
	pick2 pick2 pick2 bolu3dRes 2/ + fillall
	bolu3dRes 2/ swap - fillall
	;

:fillinez | x y desde hasta --
	>r
	( r <? )(
		pick2 pick2 pick2 fillall
		1+ ) 3drop
	rdrop ;

:fillcilindro | x y --
	over bolu3dRes 2/ -
	over bolu3dRes 2/ -
	dup * swap dup * + sqrt
	bolu3dRes 2/ swap - 4 -
	-? ( 3drop ; ) drop
	bolu3dRes 2/ 8 -
	dup bolu3dRes 2/ +
	swap bolu3dRes 2/ swap -
	swap fillinez ;

:gensphere
	clearbox
	0 ( bolu3dRes <=? )(
		0 ( bolu3dRes <=? )(
			2dup
			fillcircle
|			fillhexa
|			fillcilindro
			1+ ) drop
		view1 redraw
		1+ ) drop
	;

|---- caja en normalizado
:drawboxz | z --
	-$1ff -$1ff pick2 3dop
	$1ff -$1ff pick2 3dline
	$1ff $1ff pick2 3dline
	-$1ff $1ff pick2 3dline
	-$1ff -$1ff rot 3dline ;

:drawlinez | x1 x2 --
	2dup -$1ff 3dop $1ff 3dline ;

:draw3dnorm
	-$1ff drawboxz
	$1ff drawboxz
	-$1ff -$1ff drawlinez
	$1ff -$1ff drawlinez
	$1ff $1ff drawlinez
	-$1ff $1ff drawlinez ;

|--------------------------------------
:saveb3d | "" --
	bolu3dMap bolu3dImg 12 * rot save ;

:main
	here 'bolu3dMap !
	4
	show clrscr
		view1


		verde dup ":r%d " print
		blanco 'SAVEFILE " %s " print
		cyan bolu3dimg 12 * bolu3dRes " b4R:res:%d mem:%d" print cr

		'gensphere <f1>
		[ 'SAVEFILE saveb3d ; ] <f5>
		'exit >esc< ;

|--------------------------
:main2
	4
	show clrscr
		verde dup ":r%d " print
		blanco 'SAVEFILE " %s " print
		cyan bolu3dimg 12 * bolu3dRes  " b4R:%d mem:%d" print cr

		cflecha

		omode
		freelook
		xcam ycam zcam mtrans
		cyan draw3dnorm

		[ -0.01 'zcam +! ; ] <up>
		[ 0.01 'zcam +! ; ] <dn>

		'exit >esc< ;

: mark main ;
