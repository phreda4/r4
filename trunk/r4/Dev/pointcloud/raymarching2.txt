| Ray Marching
| http://iquilezles.org/www/articles/terrainmarching/terrainmarching.htm
| generando el rayo direccion mas rapido
| con el truco http://iquilezles.org/www/articles/sincos/sincos.htm
| levemente desviado pero parece que funciona!!
|---
^r4/lib/gui.txt
^r4/lib/trace.txt

#rox 0 #roy 0 #roz 0 | origen
#rdx 0 #rdy 0 #rdz 0 | direccion

#px #py #pz
#nx #ny #nz

#sun 0.0 1.0 0
#eps 0.0001

:f(xy) | x y -- r
	sin swap sin *. ;

:getNormal
	px eps - pz f(xy)
	px eps + pz f(xy) - 'nx !
	eps 2* 'ny !
	px pz eps - f(xy)
	px pz eps + f(xy) - 'nz !
	'nx v3nor
	;

:skycolor
	$ff0000
	;

:terraincolor
	getnormal
	'nx 'sun v3ddot
	4 <<
	;

:calcpf | t -- t ;ro +rd*t
	rdx over *. rox + 'px !
	rdy over *. roy + 'py !
	rdz over *. roz + 'pz !
	px pz f(xy)
	;

:castRay
	0.05
	0.01 ( 1.0 <? )(
		calcpf
		py >? (
			3drop
			1 ;	)
		drop
		swap 0.001 + swap
		over + )
	2drop 0 ;

:v3print | v
	@+ "%f "  print
	@+ "%f "  print
	@ "%f "  print cr ;

|--------------------------------
#halfFovX 0.25
#halfFovY
#tanHalfFovX
#tanHalfFovY

:generateRayForPixel | i j -- i j
	2dup
	2* sw - tanHalfFovX sw */ 'rdx !
	2* sh - tanHalfFovY sh */ 'rdy !
	1.0 'rdz !
	'rdx v3nor
	;


:generateRayForPixel | i j -- i j
	over sh 2/ - 0.3 500 */
	over sw 2/ - 0.3 500 */
	| a b
	sincos | v sinu cosu
	rot sincos | sinu cosu sinv cosv
	pick3 *. >r | sinu cosu sinv   r:x
	rot *. r>
	'rdx ! 'rdy ! 'rdz ! ;

:generaimagen1
	0 0 setxy
	0 ( sh <? )(
		0 ( sw <? )(
			generateRayForPixel
|			castRay 0? ( 0 )( terraincolor ) px!+ drop
			rdx 8 >> $ff and rdy $ff00 and or rdz 8 << $ff0000 and or px!+
			1+ ) drop
|		redraw
		1+ ) drop
	>xfb
	;

#ix #iy #ixs #iys
#sinu #cosu #sinv #cosv
#sinu2 #cosu2 #sinv2 #cosv2

:nextx
	cosu2 cosu *. sinu2 sinu *. -
	sinu2 cosu *. cosu2 sinu *. +
	'sinu ! 'cosu ! ;

:nexty
	cosv2 cosv *. sinv2 sinv *. -
	sinv2 cosv *. cosv2 sinv *. +
	'sinv ! 'cosv !
	ix sincos 'cosu ! 'sinu !
	ixs sincos 'cosu2 ! 'sinu2 !
	;

:calcray
	cosu 'rdz !
	sinu sinv *. 'rdy !
	cosv sinu *. 'rdx !
	;

:generaimagen2 | version con precalculo de sin/cos
	sw 2/ neg 0.3 500 */ 'ix !
	sw 2/ neg 1+ 0.3 500 */ ix - 'ixs !
	sh 2/ neg 0.3 500 */ 'iy !
	sh 2/ neg 1+ 0.3 500 */ iy - 'iys !

	ix sincos 'cosu ! 'sinu !
	ixs sincos 'cosu2 ! 'sinu2 !
	iy sincos 'cosv ! 'sinv !
	iys sincos 'cosv2 ! 'sinv2 !
	0 0 setxy
	0 ( sh <? )(
		0 ( sw <? )(
			calcray
			rdx 8 >> $ff and rdy $ff00 and or rdz 8 << $ff0000 and or px!+
			nextx
			1+ ) drop
		nexty
|		redraw
		1+ ) drop
	>xfb
	;

:generaimagen3 | pruba de velocidad de pintado (textura xor)
	0 0 setxy
	0 ( sh <? )(
		0 ( sw <? )(
			over over xor px!+
			1+ ) drop
|		redraw
		1+ ) drop
	>xfb
	;
|-------------------------------

:tabla
	-0.3 sincos 'cosu ! 'sinu !
	0.02 sincos 'cosu2 ! 'sinu2 !
	-0.3 ( 0.3 <? )(
		dup sincos pick2 "%f | %f  %f | " print
		sinu cosu " %f  %f " print
		cr nextx
		0.02 + ) drop
	;
|------------------------------------
:setparam
	sh halfFovX sw */ 'halfFovY !
	halfFovX tan 'tanHalfFovX !
	halfFovY tan 'tanHalfFovY !
	0 'rox !
	0 'roy !
	0 'roz !
	;


:main
	setparam
	show clrscr
|		castRay 1? ( $ff00 )( $ff ) ink xymouse 1+ 2dup op line
|		drop
		xfb>
		dup "%d" print cr

		xymouse generateRayForPixel 2drop
		rdz rdy rdx "%f %f %f" print cr

		tabla

		cflecha
		'generaimagen1 <f1>
		'generaimagen2 <f2>
		'generaimagen3 <f3>
		'exit >esc<
;

: 33 main ;
