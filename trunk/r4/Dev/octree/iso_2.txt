| iso test 2
| PHREDA 2015
|---------------------
^r4/lib/gui.txt
^r4/lib/dlgfile.txt

^r4/lib/morton.txt
^r4/lib/trace.txt

#xcam 0 #ycam 0 #zcam 0.125

#octre
#pixels
#octre>

#dmask
#level

#ymin #nymin
#ymax #nymax
#xmin #nxmin
#xmax #nxmax
#zmin #nzmin
#rotsum )( 640
#rotsum> 'rotsum

#ny1
#ny2
#nx1
#nx2
:id3di | id x y z -- u v
	transform
	dup 'zmin ! pick3 'nzmin !
	project | id x y
	dup 'ymin ! pick2 'nymin !
	dup 'ymax ! pick2 'nymax !
	swap
	dup 'xmin ! pick2 'nxmin !
	dup 'xmax ! pick2 'nxmax !
	swap rot drop ;

:id3d | id x y z -- u v
	transform
	zmin >? ( dup 'zmin ! pick3 'nzmin ! )
	project | id x y
	ymin <? ( dup 'ymin ! pick2 'nymin ! )
	ymax >? ( dup 'ymax ! pick2 'nymax ! )
	swap
	xmin <? ( dup 'xmin ! pick2 'nxmin ! )
	xmax >? ( dup 'xmax ! pick2 'nxmax ! )
	swap rot drop ;

:fillrotvec | --
	'rotsum >r
	0 1024 1024 1024 id3di r!+ r!+	| 111
	1 1024 1024 -1024 id3d r!+ r!+	| 110
	2 1024 -1024 1024 id3d r!+ r!+	| 101
	3 1024 -1024 -1024 id3d r!+ r!+	| 100
	4 -1024 1024 1024 id3d r!+ r!+	| 011
	5 -1024 1024 -1024 id3d r!+ r!+	| 010
	6 -1024 -1024 1024 id3d r!+ r!+	| 001
	7 -1024 -1024 -1024 id3d r!+ r!+ | 000
	r> 'rotsum> !

	nymin dup 'ny1 ! 3 << 64 - 'nymin !
	nymax dup 'ny2 ! 3 << 64 - 'nymax !
	nxmin dup 'nx1 ! 3 << 4+ 64 - 'nxmin !
	nxmax dup 'nx2 ! 3 << 4+ 64 - 'nxmax !
	nzmin 'dmask !
	;

:addchild | id --
	rotsum> dup >r
	64 - swap 3 << over + | prev pivot
	@+ swap @ rot | y x prev
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	3drop r> 'rotsum> ! ;


:dbox | x1 y1 x2 y2 --
	2over op
	pick3 over line
	2dup line
	over pick3 line
	2drop line ;

:fbox | x1 y1 x2 y2 --
	2over op
	pick3 over pline
	2dup pline
	over pick3 pline
	2drop pline poli ;

:drawbox | oct --
	octre - pixels + @ ink
	rotsum> >r
	nxmin r + @
	nymin r + @
	nxmax r + @
	nymax r> + @
	fbox
	;

|--- 1 contorno
#contorno (
1 5 4 6 2 3
0 2 3 7 5 4
0 1 3 7 6 4
0 2 6 7 5 1
0 2 6 7 5 1
0 1 3 7 6 4
0 2 3 7 5 4
1 5 4 6 2 3
)

:getxy | nro
	3 << rotsum> 64 - + @+ swap @ swap ;

:drawcon | oct --
	octre - pixels + @ ink
	nzmin 2* dup 2* + 'contorno +
	c@+ getxy 2dup op rot
	c@+ getxy pline
	c@+ getxy pline
	c@+ getxy pline
	c@+ getxy pline
	c@ getxy pline pline
	poli
	;

|--- 3 paneles

#paneles (
0 1 3 2
4 5 7 6
0 2 6 4
1 3 7 5
0 1 5 4
2 3 7 6
)

:drawpan | n
	2 << 'paneles +
	c@+ getxy 2dup op rot
	c@+ getxy pline
	c@+ getxy pline
	c@ getxy pline pline poli ;

#npan
$024
$034
$025
$035
$421
$314
$125
$153

:draw3pan | oct --
	octre - pixels + @ ink
	nzmin 2 << 'npan + @
	dup $f and drawpan
	dup 4 >> $f and drawpan
	8 >> $f and drawpan
	;

:drawpoint | oct x y --
	setxy octre - pixels + @ px!+ ;

:drawpoint1 | oct x --
	rotsum> nymin + @
	rotsum> nymax + @ =? ( drawpoint ; )
	rot octre - pixels + @ ink
	over rotsum> nymax + @
	op line ;

:drawpoint2 | oct x y --
	rot octre - pixels + @ ink
    rotsum> nxmax + @ over
	op line ;

:viewchildm | node bitm nro -- node bitm
	1 over << pick2 nand? ( 2drop ; )	| node bitm nro place
	swap addchild
	1- over and popcnt 2 << pick2 +    | node bitm node'

|.....................................
	rotsum>	nxmin + @
	rotsum>	nxmax + @ =? ( drawpoint1 -64 'rotsum> +! ; )
	rotsum>	nymin + @
	rotsum>	nymax + @ =? ( drawpoint2 -64 'rotsum> +! ; )
	2drop
	level 4 >? ( drop drawcon -64 'rotsum> +! ; ) drop
|	pixels >? ( drawbox -64 'rotsum> +! ; )
|.....................................

:viewo | node --

	1 'level +!
	@ dup 8 >> 2 << octre + swap $ff and | adr bitmask

	dmask viewchildm
	dmask 1 xor viewchildm
	dmask 2 xor viewchildm
	dmask 4 xor viewchildm
	dmask 3 xor viewchildm
	dmask 5 xor viewchildm
	dmask 6 xor viewchildm
	dmask 7 xor viewchildm

	2drop
	-1 'level +!
	-64 'rotsum> +!
	;

:boxlim
	verde xmin ymin xmax ymax dbox ;

::drawiso | octre --
	fillrotvec
	0 'level !
	viewo
|	boxlim
	;

::drawiso1 | octree
	fillrotvec
	0 'level !

	0 addchild
	dup drawcon
	-64 'rotsum> +!
	7 addchild
	0 addchild
	0 addchild
	drawcon
	;

|-------------
:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx mroty ;

|------------------------------
:drawpixels
	0 0 setxy
	pixels ( octre> <? )( @+ px!+ ) drop ;

:load3do | "" --
	here 'octre !
	octre swap load 'octre> !
	octre> 4 - @ octre + 'pixels !
|	octre> 'here !
	;

:loadoctree
	mark
	"media/3do" dlgfileload 0? ( drop empty ; )
	load3do
	empty ;

|-------------
:main
	"media/3do/luigi.3do" load3do

	33
	show clrscr
|		drawpixels

		verde
		dup "%d " print cr
ny1
ny2
nx1
nx2
"%d %d %d %d " print cr

		omode
		freelook
		xcam ycam zcam mtrans

		octre drawiso1
|		octre drawiso


		cr2 fonti
		'loadoctree dup <f1> "F1-Load" sp btnt cr

		[ -0.025 'zcam +! ; ] <up>
		[ 0.025 'zcam +! ; ] <dn>
		[ -0.025 'xcam +! ; ] <le>
		[ 0.025 'xcam +! ; ] <ri>
		[ -0.025 'ycam +! ; ] <pgup>
		[ 0.025 'ycam +! ; ] <pgdn>

		'exit >esc< cminiflecha ;

: mark main ;

