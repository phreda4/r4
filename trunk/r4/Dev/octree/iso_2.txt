| iso test 2
| PHREDA 2015
|---------------------
^r4/lib/gui.txt
^r4/lib/dlgfile.txt

^r4/lib/morton.txt
^r4/lib/trace.txt

|#xcam 0 #ycam 0 #zcam 4096
#xcam 000 #ycam 0 #zcam 0.125

#octre
#pixels
#octre>

#dmask

|-------------- orden segun vista
#maskc
$4152637	$15043726	$26370415	$37261504	$40516273	$51407362	$62734051	$73625140
$4216537	$15307426	$26034715	$37152604	$40625173	$51743062	$62470351	$73516240
$1234567	$10352476	$23016745	$32107654	$45670123	$54761032	$67452301	$76543210
$1452367	$10534276	$23670145	$32716054	$45016723	$54107632	$67234501	$76325410
$2461357	$13570246	$20634175	$31725064	$46052713	$57134602	$64207531	$75316420
$2134657	$13025746	$20316475	$31207564	$46570213	$57461302	$64725031	$75643120

|-------
:maskabs | ax ay az -- mask
	| ax ay az
	pick2 <? ( over <? ( | x<z && y<z
			drop <? ( 0 )( 8 )
			nip ; ) )
	rot | ay az ax
	pick2 <? ( over <? ( | y<x && z<x
			drop <? ( 16 )( 24 )
			nip ; ) )
	<? ( 32 )( 40 )
	nip nip ;

:calcmask
	matinv
	0 0 1.0 transform
	rot +? ( 1 )( 0 ) >r abs
	rot +? ( 2 r+ ) abs
	rot +? ( 4 r+ ) abs
	maskabs r> or
	2 << 'maskc + @ 'dmask !
	;

|---------------------------------
| vectores para rotar puntos

#level

#rotsum )( 640
#rotsum> 'rotsum

:fillrotvec | --
	'rotsum >r
	1024 1024 1024 project3d r!+ r!+	| 111
	1024 1024 -1024 project3d r!+ r!+	| 110
	1024 -1024 1024 project3d r!+ r!+	| 101
	1024 -1024 -1024 project3d r!+ r!+	| 100
	-1024 1024 1024 project3d r!+ r!+	| 011
	-1024 1024 -1024 project3d r!+ r!+	| 010
	-1024 -1024 1024 project3d r!+ r!+	| 001
	-1024 -1024 -1024 project3d r!+ r!+	| 000
	r> 'rotsum> !
	;

:addchild | id --
	rotsum> dup >r
	64 - swap 3 << over + | prev pivot
	@+ swap @ rot | y x prev
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	3drop r> 'rotsum> ! ;


:drawpixels
	0 0 setxy
	pixels ( octre> <? )( @+ px!+ ) drop ;


:drawpoint	| oct --
	octre - pixels + @ ink
	rotsum> 64 - >r
	r@+ r@+ swap op
	r@+ r@+ swap line
	r@+ r@+ swap line
	r@+ r@+ swap line
	r@+ r@+ swap line
	r@+ r@+ swap line
	r@+ r@+ swap line
	r@+ r@+ swap line
	rdrop
	;

:viewchildm | node bitm nro -- node bitm
|	$7 xor	| de atras para adelante
	1 over << pick2 nand? ( 2drop ; )	| node bitm nro place
	swap addchild
	1- over and popcnt 2 << pick2 +    | node bitm node'

	level 7 >? ( drop drawpoint -64 'rotsum> +! ; ) drop
|	pixels >? ( drawpoint ; )

:viewo | node --

	1 'level +!
	@ dup 8 >> 2 << octre + swap $ff and | adr bitmask

	dmask $7 and viewchildm
	dmask 4 >> $7 and viewchildm
	dmask 8 >> $7 and viewchildm
	dmask 12 >> $7 and viewchildm
	dmask 16 >> $7 and viewchildm
	dmask 20 >> $7 and viewchildm
	dmask 24 >> $7 and viewchildm
	dmask 28 >> $7 and viewchildm

	2drop
	-1 'level +!
	-64 'rotsum> +!
	;

::drawiso | octre --
	>r
	fillrotvec
	calcmask
	0 'level !
	r>
	viewo
	;

|-------------
:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx mroty ;

|------------------------------
:load3do | "" --
	here 'octre !
	octre swap load 'octre> !
	octre> 4 - @ octre + 'pixels !
|	octre> 'here !
	;

:loadoctree
	mark
	"media/3do" dlgfileload 0? ( drop empty ; )
	load3do
	empty ;

|-------------
:main
	"media/3do/luigi.3do" load3do

	33
	show clrscr
|		drawpixels

		verde
		dup "%d " print cr
|		pick2 pick2 pick2 "%d %d %d" print cr

		omode
		freelook
		xcam ycam zcam mtrans

		octre drawiso


		cr2 fonti
		'loadoctree dup <f1> "F1-Load" sp btnt cr

		[ -0.025 'zcam +! ; ] <up>
		[ 0.025 'zcam +! ; ] <dn>
		[ -0.025 'xcam +! ; ] <le>
		[ 0.025 'xcam +! ; ] <ri>
		[ -0.025 'ycam +! ; ] <pgup>
		[ 0.025 'ycam +! ; ] <pgdn>

		'exit >esc< cminiflecha ;

: mark main ;

