| Editor de Voxels
| PHREDA 2014
|-----------------------------
^r4/lib/gui.txt
^r4/lib/btn.txt
^r4/lib/sort.txt
^r4/lib/bsearch.txt
^r4/lib/morton.txt
^r4/lib/bmr.txt

^r4/dev/octree/buildoctree.txt
^r4/dev/octree/iso_5.txt

^r4/lib/trace.txt

#filename )( 1024

#octsize 0.05

#xcam 0 #ycam 0 #zcam 0.2
#rx #ry

|-------- cursor
#curx #cury #curz
#color $ff00

#memini
#bitmap1
#bitmap2
#bitmap3

|----------------
:clearvox
	memvox 'memvox> ! ;

:vox-cnt-mem | -- cnt mem
	memvox memvox> over - 3 >> 1+ swap ;

:vox! | c x y z --
	mortonlut memvox> !+ !+ 'memvox> ! ;

:vox@ | x y z -- c
	mortonlut vox-cnt-mem binsearch
	0? ( -1 nip ; ) 4+ @ ;

|----------- graficacion
:3dop transform 3dproject op ;
:3dline transform 3dproject line ;

|---- dibujos de grillas
:drawboxz | z --
	octsize neg octsize neg pick2 3dop
	octsize octsize neg pick2 3dline
	octsize octsize pick2 3dline
	octsize neg octsize pick2 3dline
	octsize neg octsize neg rot 3dline ;

:drawboxy | y --
	octsize neg over octsize neg 3dop
	octsize over octsize neg 3dline
	octsize over octsize 3dline
	octsize neg over octsize 3dline
	octsize neg swap octsize neg 3dline ;

:drawboxx | x --
	dup octsize neg octsize neg 3dop
	dup octsize octsize neg 3dline
	dup octsize octsize 3dline
	dup octsize neg octsize 3dline
	octsize neg octsize neg 3dline ;

:drawlinez | x1 x2 --
	2dup octsize neg 3dop octsize 3dline ;

:draw3dbox
	$707070 neg ink
	octsize neg drawboxz
	octsize drawboxz
	octsize neg octsize neg drawlinez
	octsize octsize neg drawlinez
	octsize octsize drawlinez
	octsize neg octsize drawlinez ;

|------------- generadores
:memmapas
	qsize 1+ dup * 2 <<
	memini
	dup 'bitmap1 !
	over + 'bitmap2 !
	over + 'bitmap3 !
	+ dup 'memvox !
	'memvox> !
	;

:bitxy | x y -- adr
    qsize and qsize 1+ * swap qsize and + 2 << ;

:getbitmap1 | x y -- color
	bitxy bitmap1 + @ ;

:getbitmap2 | x y -- color
	bitxy bitmap2 + @ ;

:getbitmap3 | x y -- color
	bitxy bitmap3 + @ ;

|---- 1 mapa
:get1 | x y z -- x y z c
	qsize 1+ 2/ neg >r
	pick2 r - dup * over r> - dup * + sqrt pick3 +
	pick2 getbitmap1 ;

:cadaVoxel1 | x y z -- x y z
	get1 -? ( drop ; ) pick3 pick3 pick3 vox! ;

:genera1
	memvox 'memvox> !
	0 ( qsize <=? )(
		0 ( qsize <=? )(
			0 ( qsize <=? )(
				cadaVoxel1
			1+ ) drop
		1+ ) drop
	1+ ) drop
	;

:main1map

	show clrscr

		fonti
		verde over ":r%d 1 MAPA " print
		cyan qsize 1+ dup "%dx%d " print

		[ genera1 exit ; ] <f1>
		'exit >esc<
		cminiflecha ;

:gen1mapa
	memini
	main1map
	buildoctree
	;

|------------- load import
:testmodel
	clearvox
	qsize 1+ ( 1? )( 1-
		$ff 0 0 pick3 vox!
		$ff00 0 pick2 0 vox!
		$ff0000 over 0 0 vox!
		) drop
|	$ffffff 0 0 0 vox!
	repevoxel
	;


:randvox
	$ff00 0 0 0 vox!
	$ff00 0 0 1 vox!
	$ff 1 0 0 vox!
	$ff 1 0 1 vox!
	$ff0000 0 1 0 vox!
	$ff0000 0 1 1 vox!
	;

|------ vista
#xm #ym
:dnlook
	xymouse 'ym ! 'xm ! ;

:movelook
	xymouse
	ym over 'ym ! - 7 << 'rx +!
	xm over 'xm ! - neg 7 << neg 'ry +!  ;

|-----------------
:main
|	randvox
	$f 'qsize ! 4 'deepvox !
	testmodel
	buildoctree

|	qsize 1+ 5 << 'zcam !
	4
	show clrscr
		3dini
		rx mrotx ry mroty
		xcam ycam zcam mtrans
		qsize 2/ neg dup dup mtransi

		draw3dbox
		maskb.clear
		$inifile drawoctree

		'dnlook 'movelook guiDnMove

		verde
		dup ":r%d VoxelEditor " print
		qsize deepvox "O:%d size:%d " print
		memvox> memvox - 3 >> "pnts:%d " print
		octre> octre - 2 >> "nod:%d " print
		cr

		curz cury curx "x:%d y:%d z:%d" print cr

		1 rows 2 - gotoxy azul
		'main1map dup <f5> "F5-1xI" sp btnt
		'main1map dup <f6> "F6-2xI" sp btnt
		'main1map dup <f7> "F7-3xI" sp btnt

		[ curx 1+ qsize >=? ( 0 nip ) 'curx ! ; ] <up>
		[ curx 1- -? ( qsize 1- nip ) 'curx ! ; ] <dn>
		[ cury 1+ qsize >=? ( 0 nip ) 'cury ! ; ] <le>
		[ cury 1- -? ( qsize 1- nip ) 'cury ! ; ] <ri>
		[ curz 1+ qsize >=? ( 0 nip ) 'curz ! ; ] <pgup>
		[ curz 1- -? ( qsize 1- nip ) 'curz ! ; ] <pgdn>
		[ color curx cury curz vox! buildoctree ; ] <spc>

		[ 1 0 0 movevoxel buildoctree ; ] <f1>
		[ 0 1 0 movevoxel buildoctree ; ] <f2>
		[ 0 0 1 movevoxel buildoctree ; ] <f3>
		'exit >esc<
		cminiflecha ;

|--------------------------
:memory
	mark
	maskb.ini
	here dup 'memini !
	dup 'memvox !
	'memvox> !
	;

: memory main ;
