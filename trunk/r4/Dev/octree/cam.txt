| cam test
| PHREDA 2014
|-----------------------------
^r4/lib/gui.txt
^r4/lib/trace.txt
^r4/lib/sort.txt
^r4/lib/morton.txt

|----------- graficacion
:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx
	mroty ;

:drawp | x y z ---
	project3d |2dup op line ;
	-? ( 2drop ; ) sh >=? ( 2drop ; )
	swap -? ( 2drop ; ) sw >=? ( 2drop ; ) swap
	setxy
	ink@ px!+
	;

:3dop project3d op ;
:3dline project3d line ;

|---- caja en normalizado
:drawboxz | z --
	-0.5 -0.5 pick2 3dop
	0.5 -0.5 pick2 3dline
	0.5 0.5 pick2 3dline
	-0.5 0.5 pick2 3dline
	-0.5 -0.5 rot 3dline ;

:drawlinez | x1 x2 --
	2dup -0.5 3dop 0.5 3dline ;

:draw3dnorm
	-0.5 drawboxz
	0.5 drawboxz
	-0.5 -0.5 drawlinez
	0.5 -0.5 drawlinez
	0.5 0.5 drawlinez
	-0.5 0.5 drawlinez ;


#pixels
#octre
#octre>

|----------- busca masa
#nodo          
:nexto | now value -- newa
	dup rot 1- and popcnt swap 8 >> + ;

:binhit | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	over 18 >> $7 and place swap @ over nand? ( 3drop 64 ; ) nexto 2 << octre +
	over 15 >> $7 and place swap @ over nand? ( 3drop 32 ; ) nexto 2 << octre +
	over 12 >> $7 and place swap @ over nand? ( 3drop 16 ; ) nexto 2 << octre +
	over 9 >> $7 and place swap @ over nand? ( 3drop 8 ; ) nexto 2 << octre +
	over 6 >> $7 and place swap @ over nand? ( 3drop 4 ; ) nexto 2 << octre +
	over 3 >> $7 and place swap @ over nand? ( 3drop 2 ; ) nexto 2 << octre +
	swap $7 and place swap @ over nand? ( 2drop 1 ; )
	nexto 'nodo ! 0  ;

:binhit1 | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	over 18 >> $7 and place swap @ over nand? ( 3drop 64 ; ) nexto 2 << octre +
	over 15 >> $7 and place swap @ over nand? ( 3drop 32 ; ) nexto 2 << octre +
	over 12 >> $7 and place swap @ over nand? ( 3drop 16 ; ) nexto 2 << octre +
	over 9 >> $7 and place swap @ over nand? ( 3drop 8 ; ) nexto 2 << octre +
	over 6 >> $7 and place swap @ over nand? ( 3drop 4 ; ) nexto 2 << octre +
	swap 3 >> $7 and place swap @ over nand? ( 2drop 2 ; )
	nexto 'nodo ! 0  ;

:binhit2 | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	over 18 >> $7 and place swap @ over nand? ( 3drop 64 ; ) nexto 2 << octre +
	over 15 >> $7 and place swap @ over nand? ( 3drop 32 ; ) nexto 2 << octre +
	over 12 >> $7 and place swap @ over nand? ( 3drop 16 ; ) nexto 2 << octre +
	over 9 >> $7 and place swap @ over nand? ( 3drop 8 ; ) nexto 2 << octre +
	swap 6 >> $7 and place swap @ over nand? ( 2drop 4 ; )
	nexto 'nodo ! 0  ;

:binhit3 | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	over 18 >> $7 and place swap @ over nand? ( 3drop 64 ; ) nexto 2 << octre +
	over 15 >> $7 and place swap @ over nand? ( 3drop 32 ; ) nexto 2 << octre +
	over 12 >> $7 and place swap @ over nand? ( 3drop 16 ; ) nexto 2 << octre +
	swap 9 >> $7 and place swap @ over nand? ( 2drop 8 ; )
	nexto 'nodo ! 0  ;

:binhit4 | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	over 18 >> $7 and place swap @ over nand? ( 3drop 64 ; ) nexto 2 << octre +
	over 15 >> $7 and place swap @ over nand? ( 3drop 32 ; ) nexto 2 << octre +
	swap 12 >> $7 and place swap @ over nand? ( 2drop 16 ; )
	nexto 'nodo ! 0  ;

:binhit5 | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	over 18 >> $7 and place swap @ over nand? ( 3drop 64 ; ) nexto 2 << octre +
	swap 15 >> $7 and place swap @ over nand? ( 2drop 32 ; )
	nexto 'nodo ! 0  ;

:binhit6 | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	swap 18 >> $7 and place swap @ over nand? ( 2drop 64 ; )
	nexto 'nodo ! 0  ;

:binhit7 | x y z -- m
	mortonlut8 octre
	swap 21 >> $7 and place swap @ over nand? ( 2drop 128 ; )
	nexto 'nodo ! 0  ;

#lod binhit binhit1 binhit2 binhit3 binhit4 binhit5 binhit6 binhit7

:getcolor
	nodo 2 << pixels + @ ;

:drawph | x y z -- nodo/0
	pick2 abs pick2 abs pick2 abs or or $ffff8000 and? ( 4drop 0 ; ) drop
	rot 8 >> $80 + rot 8 >> $80 + rot 8  >> $80 +
	binhit3 0? ( drop nodo 2 << pixels + ; )
	drop 0 ;


#rut
:getvox | x y z -- nodo/0
	pick2 abs pick2 abs pick2 abs or or $ffff8000 and? ( 4drop 0 ; ) drop
	rot 8 >> $80 + rot 8 >> $80 + rot 8 >> $80 +
	rut exec 0? ( drop nodo 2 << pixels + ; )
	drop 0 ;


|------------- load import
:load3do | "filename" --
	here dup 'octre !
	swap load 'octre> !
	octre> 4 - @ octre + 'pixels !

	octre> 'here !
	;

|--------------------------------

#xcam 0 #ycam 0 #zcam 6.0	| camara externa

#camox 0 #camoy 0 #camoz 0	| origen
#camdx 0 #camdy 0 #camdz 0	| direccion
#camux 0 #camuy 0 #camuz 0	| up
#camvx 0 #camvy 0 #camvz 0	| left

#ax #ay #az	| actual
#sx #sy #sz	| suma ux
#vx #vy #vz	| suma vx

|---- dibuja FOV
:pointray | --
	camox ax + camoy ay + camoz az +
	pick2 camdx + ax + pick2 camdy + ay + pick2 camdz + az +
	3dop 3dline ;

:colores
	-0.5 <? ( gris ; ) 0.5 >? ( gris ; )
	rot -0.5 <? ( gris rot rot ; ) 0.5 >? ( gris rot rot ; )
	rot -0.5 <? ( gris rot ; ) 0.5 >? ( gris rot ; )
	rot verde ;

:drawpp | x y z --
	|colores
	pick2 abs pick2 abs pick2 abs or or $ffff8000 nand? ( verde )( gris ) drop
	drawp ;

#value
:step
	pick2 pick2 pick2 drawpp
	rot camdx ax + value >> +
	rot camdy ay + value >> +
	rot camdz az + value >> +
	;

:pointray | --
	8 'value !
	camox ax + camoy ay + camoz az +
	8 ( 1? )( 1- >r
		step step step step
		-1 'value +!
		r> ) drop
	3drop
	;

:pointcamo
	camux camvx + neg 'ax !
	camuy camvy + neg 'ay !
	camuz camvz + neg 'az !
	camux 4 >> 'sx !	| 16 es la resolucion/2
	camuy 4 >> 'sy !
	camuz 4 >> 'sz !
	camvx 4 >> camux 2* - 'vx ! | 16 es la resolucion/2
	camvy 4 >> camuy 2* - 'vy ! | resta para retroceder el raster
	camvz 4 >> camuz 2* - 'vz !
	32 ( 1? )( 1-
		32 ( 1? )( 1-
			|...ax ay az drawp
			pointray
			sx 'ax +! sy 'ay +! sz 'az +!
			) drop
		vx 'ax +! vy 'ay +! vz 'az +!
		) drop ;

|---------------------------------------------------------
#loda

:getvoxx
	rot camdx ax + value >> +
	rot camdy ay + value >> +
	rot camdz az + value >> +
	pick2 pick2 pick2 getvox ;
:incx
	value 1- -? ( 0 ) 'value !
	loda @+ 'rut ! 'loda ! ;

:pointcolor
	2 'value !
	'lod 'loda ! incx
	camox ax + camdx ax + 2 >> +
	camoy ay + camdy ay + 2 >> +
	camoz az + camdz az + 2 >> +
	8 ( 1? )( 1- >r
		getvoxx 1? ( nip nip nip rdrop @ ; ) drop
		getvoxx 1? ( nip nip nip rdrop @ ; ) drop
		getvoxx 1? ( nip nip nip rdrop @ ; ) drop
		getvoxx 1? ( nip nip nip rdrop @ ; ) drop
		getvoxx 1? ( nip nip nip rdrop @ ; ) drop
		getvoxx 1? ( nip nip nip rdrop @ ; ) drop
		getvoxx 1? ( nip nip nip rdrop @ ; ) drop
		getvoxx 1? ( nip nip nip rdrop @ ; ) drop
		incx r> ) 4drop
	$f ;

:renderwin | x y --
	setxy
	camux camvx + neg 'ax !
	camuy camvy + neg 'ay !
	camuz camvz + neg 'az !
	camux 6 >> 'sx !
	camuy 6 >> 'sy !
	camuz 6 >> 'sz !
	camvx 6 >> camux 2* - 'vx !
	camvy 6 >> camuy 2* - 'vy ! | resta para retroceder el raster
	camvz 6 >> camuz 2* - 'vz !
	128 ( 1? )( 1-
		128 ( 1? )( 1-
			pointcolor px!+
			sx 'ax +! sy 'ay +! sz 'az +!
			) drop
		sw 128 - px+!
		vx 'ax +! vy 'ay +! vz 'az +!
		) drop ;

|---------------------------------------------
#ssx #ssy #ssz

:getvoxx
	rot ssx + rot ssy + rot ssz +
	pick2 pick2 pick2 getvox
	;

:incx
	-1 'value +!
	value
	camdx ax 6 >> + over >> 'ssx !
	camdy ay 6 >> + over >> 'ssy !
	camdz az 6 >> + swap >> 'ssz !
	loda @+ 'rut ! 'loda ! ;

:pointcolor2
	9 'value !
	'lod 'loda !
	incx
	camox ax 6 >> + camoy ay 6 >> + camoz az 6 >> + | origen
	8 ( 1? )( 1- >r
		getvoxx 1? ( rdrop nip nip nip @ ; ) drop
		getvoxx 1? ( rdrop nip nip nip @ ; ) drop
		getvoxx 1? ( rdrop nip nip nip @ ; ) drop
		getvoxx 1? ( rdrop nip nip nip @ ; ) drop
		getvoxx 1? ( rdrop nip nip nip @ ; ) drop
		getvoxx 1? ( rdrop nip nip nip @ ; ) drop
		getvoxx 1? ( rdrop nip nip nip @ ; ) drop
		getvoxx 1? ( rdrop nip nip nip @ ; ) drop
		incx r> ) 4drop
	$f ;

:renderwin2 | x y --
	setxy
	camux camvx + neg 5 << 'ax !	| 6 bits more resolution
	camuy camvy + neg 5 << 'ay !
	camuz camvz + neg 5 << 'az !
	camux  2/ 'sx !
	camuy  2/ 'sy !
	camuz  2/ 'sz !
	camvx  camux 7 << - 2/ 'vx !
	camvy  camuy 7 << - 2/ 'vy ! | resta para retroceder el raster
	camvz  camuz 7 << - 2/ 'vz !
	128 ( 1? )( 1-
		128 ( 1? )( 1-
			pointcolor2 px!+
			sx 'ax +! sy 'ay +! sz 'az +!
			) drop
		sw 128 - px+!
		vx 'ax +! vy 'ay +! vz 'az +!
		) drop ;

:renderwin3 | x y --
	setxy
	camux camvx + neg 6 << 'ax !	| 6 bits more resolution
	camuy camvy + neg 6 << 'ay !
	camuz camvz + neg 6 << 'az !
	camux 2/ 'sx !
	camuy 2/ 'sy !
	camuz 2/ 'sz !
	camvx 2/ camux 7 << - 'vx !
	camvy 2/ camuy 7 << - 'vy ! | resta para retroceder el raster
	camvz 2/ camuz 7 << - 'vz !
	256 ( 1? )( 1-
		256 ( 1? )( 1-
			pointcolor2 px!+
			sx 'ax +! sy 'ay +! sz 'az +!
			) drop
		sw 256 - px+!
		vx 'ax +! vy 'ay +! vz 'az +!
		) drop ;

|---------------------------------------------
#tipo 0
:drawcam
	| draw cam axis
	rojo camox camoy camoz pick2 camdx + pick2 camdy + pick2 camdz + 3dop 3dline
	violeta camox camoy camoz pick2 camux + pick2 camuy + pick2 camuz + 3dop 3dline
	cyan camox camoy camoz pick2 camvx + pick2 camvy + pick2 camvz + 3dop 3dline
	| draw ray point
|	gris pointcamo
	| real render

	100 200
	tipo 1? ( drop renderwin )( drop renderwin2 )
	;

#zzcam 1.0
#ani
#xxpos

:ubicam
	ani 0? ( msec 2 << )( xxpos ) nip	| animado o no

	dup sin zzcam *.
|	0
	'camoz !
	dup sin zzcam *. 'camoy !
	dup cos zzcam *. 'camox !

	dup sin neg
|	0
	'camdz !
	dup sin neg 'camdy !
	cos neg 'camdx !

	| normaliza
	camdx dup *. camdy dup *. + camdz dup *. + sqrt. 1.0 swap /.
	camdx over *. 'camdx !
	camdy over *. 'camdy !
	camdz swap *. 'camdz !

	camdx neg 'camuy !
	camdy 'camux !
	|camdz
	0 'camuz !

	camdy camuz *. camuy camdz *. - 'camvx !
	camdz camux *. camuz camdx *. - 'camvy !
	camdx camuy *. camux camdy *. - 'camvz !

	;

|--------------------------
:main
|"media/3do/mario.3do"
"media/3do/luigi.3do"
|"media/3do/horse.3do"
|"media/3do/earth.3do"
	load3do
	4
	show clrscr verde
		dup ":r%d " print cr

		camox camoy camoz "Zo:%f Yo:%f Xo:%f" print cr
		camdx camdy camdz "Zd:%f Yd:%f Xd:%f" print cr
		camux camuy camuz "Zu:%f Yu:%f Xu:%f" print cr
		camvx camvy camvz "Zv:%f Yv:%f Xv:%f" print cr

		omode
		freelook
		xcam ycam zcam mtrans

		ubicam
        drawcam
		cyan draw3dnorm

		[ -0.1 'zzcam +! ; ] <up>
		[ 0.1 'zzcam +! ; ] <dn>
		[ ani not 'ani ! ; ] <spc>
		[ -0.01 'xxpos +! ; ] <le>
		[ 0.01 'xxpos +! ; ] <ri>
		[ tipo not 'tipo ! ; ] <f1>
		'exit >esc<
		cflecha ;

: mark main ;
