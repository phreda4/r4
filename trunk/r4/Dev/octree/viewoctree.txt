| genera vista de octree
| PHREDA 2012
|-----------------------------
^r4/lib/gui.txt
^r4/lib/fontj.txt
^r4/lib/trace.txt
^r4/lib/sort.txt
^r4/lib/bsearch.txt
^r4/lib/morton.txt

#xcam 0 #ycam 0 #zcam 2048

#xmin #ymin #zmin #xmax #ymax #zmax

#octre
#octre>

|----------- graficacion
#rx
#ry
:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx mroty ;


:drawp | x y z ---
	project3d |2dup op line ;
	-? ( 2drop ; ) sh >=? ( 2drop ; )
	swap -? ( 2drop ; ) sw >=? ( 2drop ; ) swap
	setxy
	ink@ px!+
	;

:3dop project3d op ;
:3dline project3d line ;

|-------- dibujo octree
#xc #yc #zc
#size

:drawz | z --
	xc size - yc size - pick2 3dop
	xc size + yc size - pick2 3dline
	xc size + yc size + pick2 3dline
	xc size - yc size + pick2 3dline
	xc size - yc size - rot 3dline ;

:drawl | x1 x2 --
	2dup zc size - 3dop zc size + 3dline ;

:box3d
	zc size - drawz zc size + drawz
	xc size - yc size - drawl xc size + yc size - drawl
	xc size + yc size + drawl xc size - yc size + drawl ;

|-------------- muestra oc de 1 punto
:+movx
	1 and? ( size )( size neg ) 'xc +!
	2 and? ( size )( size neg ) 'yc +!
	4 and? ( size )( size neg ) 'zc +!
	drop ;

:drawtree | nro shift --
	size 2/ 'size !
	2dup >> $7 and | nro shift val
	+movx box3d
	3 - 0? ( 2drop ; )
	drawtree ;

:showpoint | adr --
	0? ( drop ; ) @
	0 'xc ! 0 'yc ! 0 'zc !
	$1ff 'size ! box3d
	27 drawtree ;

|---------------------
|:drawpoint
|	size 2 <? ( 2drop xx yy 2dup op line ; ) drop
|	@
|	dup $f and 0? ( 2drop ; ) |xx yy 2dup op line ; ) |4box2d ; ) |xx yy 2dup op size + swap size + swap line ; )
|	swap 8 >> 2 << 4tre + swap
|	size 2/ 'size !
|	1 and? ( swap dup drawpoint 4+ swap )
|	2 and? ( size 'xx +! swap dup drawpoint 4+ swap size neg 'xx +! )
|	4 and? ( size 'yy +! swap dup drawpoint 4+ swap size neg 'yy +! )
|	8 and? ( size dup 'xx +! 'yy +! swap dup drawpoint 4+ swap size neg dup 'xx +! 'yy +! )
|	2drop
|	size 2* 'size !
|	;

:endr | vnodo --
	drop
	box3d
	;

:viewo | adr --
|	size 2 <? ( 2drop box3d ; ) drop
	@ $80000000 and? ( endr ; )
	size 2/ 'size !
	dup 8 >> 2 << octre +
	swap $ff and | adr bitmask
	( 1? )(
		1 and? ( swap dup viewo 4+ swap )
		2/ )
	2drop
	size 2* 'size !
	;

:viewoctree | mem --
	$1ff 'size !
	0 'xc ! 0 'yc ! 0 'zc !
	octre viewo ;

|---------

:endr | x y z size adr bit -- x y niv
	3drop
	255 swap 2/ -
	dup 8 << over 16 << or or ;

:raycast | x y z size adr -- x y niv
	dup
	@ $80000000 and? ( endr ; )
	8 >> and
	;

:viewo
	0 ( 512 <? )(
		0 over setxy
		0 ( 512 <? )(
			511 8 octree rayCast
			px!+
			1+ ) drop
		1+ ) drop
	;

|-----------------------------
:flecha
	blanco
	1000 0 0 3dop 500 0 0 3dline
	550 50 0 3dline 500 0 0 3dline 550 -50 0 3dline ;

|--------------------------
:main
	here 'octre !
	"media/3do/bunny.3do"
|	"media/3do/xyzrgb_statuette.3do"
|	"media/3do/dragon.3do"
	octre load 'octre> !

	4
	show clrscr verde
		dup ":r%d " print cr

		azul
|		cflecha

		omode
		freelook
		xcam ycam zcam mtrans


		octre viewoctree
|		rx mrotxi ry mrotyi flecha

		[ -0.01 'zcam +! ; ] <up>
		[ 0.01 'zcam +! ; ] <dn>

		'exit >esc< ;

: mark main ;
