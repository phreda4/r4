| qbuffer
| PHREDA 2014
|-----------------------------
^r4/lib/morton.txt

^r4/lib/gui.txt
^r4/lib/trace.txt

#b0	)( 4	| 2*2
#b1 )( 4
#b2 )( 8
#b3 )( 32
#b4 )( 128
#b5 )( 512
#b6 )( 2048
#b7 )( 8192
#b8 )( 32768
#b9 )( 131072
#bz 0
#quan b0 b1 b2 b3 b4 b5 b6 b7 b8 b9
#quan> 'quan
#buff

::quaini
	'quan 'quan> !
	'b0 dup 'buff !
	( 'bz <? )( 0 swap !+ ) drop ;

::qua! | morton --
	dup 5 >> 2 << buff + swap
	$1f and place over @ or swap ! ;

::quak! | morton --
	dup 5 >> 2 << buff +		| morton adr
	1 pick2 $1f and << over @ or | morton adr newb
	dup rot !	| morton neb
	quan> 4 -	| morton newb adr
	( 'quan >? )( 4 -
		swap pick2 $1c and >> $f and
		$f <>? ( 3drop ; ) drop	| morton adr
		swap 2 >> swap
		over 5 >> 2 << over @ + | morton adr dirp
		1 pick3 $1f and << over @ or | morton adr dirp newb
		dup rot !	| morton adr newb
		swap ) 3drop ;

::qua@ | morton -- 0/any
	dup 5 >> 2 << buff + @
	swap $1f and place and ;

::quapush
	quan> @+ 'buff ! 'quan> ! ;

::quapop
	quan> 4 -  dup @ 'buff ! 'quan> ! ;

::setlev | n --
	2 << 'quan + @+ 'buff ! 'quan> ! ;

|-- morton level-8|morton-24
::setq1buffer | morton -- morton
	9 2 << 'quan + @+ 'buff ! 'quan> !
	dup $ffffff and quak! ;

::setqbuffer | morton -- morton
	dup 24 >> 2 << 'quan + @+ 'buff ! 'quan> !
	dup quak! ;

::getqbuffer | morton -- 0/si
	dup 24 >> 2 << 'quan + @
	over $ffffff and 5 >> 2 << + @
	1 rot $1f and << and ;

|------------ test lib ------------
|  test de quadtree para oclusion
|----------------------------------
::drawlev | n x y
	setxy
    1 over << | n size
	swap setlev
	0 ( over <? )(
		0 ( pick2 <? )(
			2dup morton2d qua@ 1? ( $ffffff )( $ff ) nip px!+
			1+ ) drop
		sw pick2 - px+!
		1+ ) 2drop ;

#x #y

:set5
	quapush quapush quapush quapush quapush
	31 y - 31 x - morton2d quak!
	quapop quapop quapop quapop quapop ;

:testq
	33
	quaini
	show clrscr
		dup "%d" print

		0 15 10 drawlev quapush
		1 20 10 drawlev quapush
		2 30 10 drawlev quapush
		3 50 10 drawlev quapush
		4 80 10 drawlev quapush
		5 120 10 drawlev
		quapop quapop quapop quapop quapop

		blink 1? ( 120 x + 10 y + setxy $ff00 px!+ ) drop

		[ -1 'x +! ; ] <le>
		[ 1 'x +! ; ] <ri>
		[ -1 'y +! ; ] <up>
		[ 1 'y +! ; ] <dn>
		'set5 <spc>

		'exit >esc<
		cminiflecha ;

: testq ;

