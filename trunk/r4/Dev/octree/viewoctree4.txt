| genera vista de octree
| PHREDA 2014
|-----------------------------
^r4/lib/gui.txt
^r4/lib/morton.txt

^r4/lib/trace.txt

#xcam 0 #ycam 0 #zcam 512

#lod 8

|-- quadtree
#sizeq 512
#xc #yc
#color

|-- octree
#octre
#pixels
#octre>

#mask
#dmask

#zsz #zsy #zsx
#ysz #ysy #ysx
#xsz #xsy #xsx

|----------
| tabla combinaciones
| 8 posibilidades*3 dim *4 bytes
|
#rotconv )( 96

:fillrotvec
	'rotconv >r
	xsx ysx zsx + + neg r!+	xsy ysy zsy + + neg r!+ xsz ysz zsz + + neg r!+	| 111
	xsx ysx zsx + - r!+	xsy ysy zsy + - r!+ xsz ysz zsz + - r!+	| 110
	ysx zsx xsx + - r!+	ysy zsy xsy + - r!+ ysz zsz xsz + - r!+	| 101
	xsx ysx zsx - + r!+	xsy ysy zsy - + r!+ xsz ysz zsz - + r!+	| 100
	zsx ysx xsx + - r!+ zsy ysy xsy + - r!+ zsz ysz xsz + - r!+ | 011
	xsx zsx ysx - + r!+ xsy zsy ysy - + r!+ xsz zsz ysz - + r!+ | 010
	ysx zsx xsx - + r!+ ysy zsy xsy - + r!+ ysz zsz xsz - + r!+	| 001
	xsx ysx zsx + + r!+	xsy ysy zsy + + r!+ xsz ysz zsz + + r!+	| 000
	rdrop ;

|-----------------------------------------
#level

:idmovn | x y z id -- x' y' z'
	$7 and dup 2* + 2 << 'rotconv + >r
	rot r@+ level >> + rot r@+ level >> + rot r> @ level >> + ;

|---- v4  loopless
:c9 | x z -- x'
	2/ 0 swap over | x 0 z 0
	pick3 >? ( over - rot )( over + rot 256 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 128 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 64 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 32 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 16 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 8 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 4 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 2 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 1+ )
	nip nip nip ;

#lq

:fillqtree | color size xc yc --
	setxy
	dup ( 1? )( 1-
		over ( 1? )( 1-
			pick3 px!+
			) drop
		sw pick2 - px+!
		)
	3drop ;

:drawbox | x y z size nodo --
	>r
	1 swap 21 - << 'lq !
|	swap over c9 >r c9 lq 1- not and xc + r> lq 1- not and yc + | x y

	swap over c9 >r c9 xc + r> yc + | x y
	r> octre - pixels + @ lq
	2swap fillqtree ;

:drawpoint	| x y z nodo --
	>r
	dup clz 21 >? ( r> drawbox ; ) drop
	swap over c9 >r c9 xc + r> yc + setxy
	r> octre - pixels + @ px!+ ;

|---- v5 morton
:cmorton | x y z -- m
	2/ 0 dup dup >r | x y z 0 0
	pick4 >? ( pick2 - )( pick2 + $20000 r+ ) swap
	pick3 >? ( pick2 - )( pick2 + $10000 r+ ) swap rot 2/ rot rot
	pick4 >? ( pick2 - )( pick2 + $8000 r+ ) swap
	pick3 >? ( pick2 - )( pick2 + $4000 r+ ) swap rot 2/ rot rot
	pick4 >? ( pick2 - )( pick2 + $2000 r+ ) swap
	pick3 >? ( pick2 - )( pick2 + $1000 r+ ) swap rot 2/ rot rot
	pick4 >? ( pick2 - )( pick2 + $800 r+ ) swap
	pick3 >? ( pick2 - )( pick2 + $400 r+ ) swap rot 2/ rot rot
	pick4 >? ( pick2 - )( pick2 + $200 r+ ) swap
	pick3 >? ( pick2 - )( pick2 + $100 r+ ) swap rot 2/ rot rot
	pick4 >? ( pick2 - )( pick2 + $80 r+ ) swap
	pick3 >? ( pick2 - )( pick2 + $40 r+ ) swap rot 2/ rot rot
	pick4 >? ( pick2 - )( pick2 + $20 r+ ) swap
	pick3 >? ( pick2 - )( pick2 + $10 r+ ) swap rot 2/ rot rot
	pick4 >? ( pick2 - )( pick2 + $8 r+ ) swap
	pick3 >? ( pick2 - )( pick2 + $4 r+ ) swap rot 2/ rot rot
	pick4 >? ( pick2 - )( pick2 + $2 r+ ) swap
	pick3 <=? ( $1 r+ )
	nip 4drop r> ;

|-----------------------
:viewchildm | x y z node bit nro -- x y z node bit
	$7 xor
	dup place pick2 nand? ( 2drop ; ) | x y z node bit bitc
	1- pick2 and popcnt 2 << pick3 +
	>r >r pick4 pick4 pick4 r> idmovn r>
	|****** recursion (no poner ; !!)
:view3do | x y z node --

	level 7 >? ( drop drawpoint ; ) drop

	1 'level +!
	@ dup 8 >> 2 << octre + swap $ff and | x y z adr bitmask
	dmask >r
	r $7 and viewchildm
	r 4 >> $7 and viewchildm
	r 8 >> $7 and viewchildm
	r 12 >> $7 and viewchildm
	r 16 >> $7 and viewchildm
	r 20 >> $7 and viewchildm
	r 24 >> $7 and viewchildm
	r> 28 >> $7 and viewchildm
	nip 4drop
	-1 'level +!
	;

|-------------- orden segun vista
#maskc
$4152637	$15043726	$26370415	$37261504	$40516273	$51407362	$62734051	$73625140
$4216537	$15307426	$26034715	$37152604	$40625173	$51743062	$62470351	$73516240
$1234567	$10352476	$23016745	$32107654	$45670123	$54761032	$67452301	$76543210
$1452367	$10534276	$23670145	$32716054	$45016723	$54107632	$67234501	$76325410
$2461357	$13570246	$20634175	$31725064	$46052713	$57134602	$64207531	$75316420
$2134657	$13025746	$20316475	$31207564	$46570213	$57461302	$64725031	$75643120

|-------------
:calcmaskn
	matinv
	xcam ycam zcam transform
	+? ( 4 )( 0 ) nip
	swap +? ( drop 2 or )( drop )
	swap +? ( drop 1 or )( drop )
	'mask !
	;

:maskabs | ax ay az -- mask
	pick2 <? ( over <? ( | x<z && y<z
			drop <? ( 0 )( 8 )
			nip ; ) )
	rot | ay az ax
	pick2 <? ( over <? ( | y<x && z<x
			drop <? ( 16 )( 24 )
			nip ; ) )
	<? ( 32 )( 40 )
	nip nip ;

:calcmask
	matinv
	0 0 1.0
|	xcam ycam zcam
	transform
	rot +? ( 1 )( 0 ) >r abs
	rot +? ( 2 r+ ) abs
	rot +? ( 4 r+ ) abs
	| ax ay az :r mask0
	maskabs r> or
	dup 'mask !
	2 << 'maskc + @
	'dmask !
	;

|-------------
:fillqtree | size xc yc --
	setxy
	dup ( 1? )( 1-
		over ( 1? )( 1-
			color px!+
			) drop
		sw pick2 - px+!
		)
	2drop
	$f 'color +! ;

:qtree | x y nivel --
	1 =? ( drop setxy color px!+ 1  'color +! ; )
	2/
	pick2 pick2 pick2 qtree
	pick2 pick2 pick2 + pick2 qtree
	pick2 over + pick2 pick2 qtree
	pick2 over + pick2 pick2 + pick2 qtree
	3drop ;


|----------- graficacion
:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx mroty ;

|--------------------------
:main
	here 'octre !
	"media/3do/mario.3do"

	octre swap load 'octre> !
	octre> 4 - @ octre + 'pixels !

	sh 2/ 256 - 'yc !
	sw 2/ 256 - 'xc !
	4
	show clrscr verde
		dup ":r%d " print cr
		lod "LOD:%d " print cr
		mask "mask:%h" print cr
		dmask "dmask:%h" print cr

		zcam 1 over clz 21 - << swap "zcam %d  %d" print cr
|		xc yc 512 qtree

		omode
		freelook

|		xcam ycam zcam mtrans

|		msec 3 << mrotxi
|		msec 4 << mrotyi
		0 0 256 transform 'zsz ! 'zsy ! 'zsx !
		0 256 0 transform 'ysz ! 'ysy ! 'ysx !
		256 0 0 transform 'xsz ! 'xsy ! 'xsx !

		calcmask
		fillrotvec
		0 'level !
		xcam ycam zcam octre view3do

		[ -4 'xcam +! ; ] <le>
		[ 4 'xcam +! ; ] <ri>
		[ -4 'zcam +! ; ] <up>
		[ 4 'zcam +! ; ] <dn>

		'exit >esc< ;

: mark main ;
