| cam test
| con bresemham
| PHREDA 2014
|-----------------------------
^r4/lib/gui.txt
^r4/lib/morton.txt

^r4/lib/trace.txt


#octre
#pixels
#octre>

|----------- busca masa
#nodo
:nexto | now value -- newa
	dup rot 1- and popcnt swap 8 >> + ;

:binhit | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	over 18 >> $7 and place swap @ over nand? ( 3drop 64 ; ) nexto 2 << octre +
	over 15 >> $7 and place swap @ over nand? ( 3drop 32 ; ) nexto 2 << octre +
	over 12 >> $7 and place swap @ over nand? ( 3drop 16 ; ) nexto 2 << octre +
	over 9 >> $7 and place swap @ over nand? ( 3drop 8 ; ) nexto 2 << octre +
	over 6 >> $7 and place swap @ over nand? ( 3drop 4 ; ) nexto 2 << octre +
	over 3 >> $7 and place swap @ over nand? ( 3drop 2 ; ) nexto 2 << octre +
	swap $7 and place swap @ over nand? ( 2drop 1 ; )
	nexto 'nodo ! 0  ;

:binhit1 | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	over 18 >> $7 and place swap @ over nand? ( 3drop 64 ; ) nexto 2 << octre +
	over 15 >> $7 and place swap @ over nand? ( 3drop 32 ; ) nexto 2 << octre +
	over 12 >> $7 and place swap @ over nand? ( 3drop 16 ; ) nexto 2 << octre +
	over 9 >> $7 and place swap @ over nand? ( 3drop 8 ; ) nexto 2 << octre +
	over 6 >> $7 and place swap @ over nand? ( 3drop 4 ; ) nexto 2 << octre +
	swap 3 >> $7 and place swap @ over nand? ( 2drop 2 ; )
	nexto 'nodo ! 0  ;

:binhit2 | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	over 18 >> $7 and place swap @ over nand? ( 3drop 64 ; ) nexto 2 << octre +
	over 15 >> $7 and place swap @ over nand? ( 3drop 32 ; ) nexto 2 << octre +
	over 12 >> $7 and place swap @ over nand? ( 3drop 16 ; ) nexto 2 << octre +
	over 9 >> $7 and place swap @ over nand? ( 3drop 8 ; ) nexto 2 << octre +
	swap 6 >> $7 and place swap @ over nand? ( 2drop 4 ; )
	nexto 'nodo ! 0  ;

:binhit3 | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	over 18 >> $7 and place swap @ over nand? ( 3drop 64 ; ) nexto 2 << octre +
	over 15 >> $7 and place swap @ over nand? ( 3drop 32 ; ) nexto 2 << octre +
	over 12 >> $7 and place swap @ over nand? ( 3drop 16 ; ) nexto 2 << octre +
	swap 9 >> $7 and place swap @ over nand? ( 2drop 8 ; )
	nexto 'nodo ! 0  ;

:binhit4 | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	over 18 >> $7 and place swap @ over nand? ( 3drop 64 ; ) nexto 2 << octre +
	over 15 >> $7 and place swap @ over nand? ( 3drop 32 ; ) nexto 2 << octre +
	swap 12 >> $7 and place swap @ over nand? ( 2drop 16 ; )
	nexto 'nodo ! 0  ;

:binhit5 | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	over 18 >> $7 and place swap @ over nand? ( 3drop 64 ; ) nexto 2 << octre +
	swap 15 >> $7 and place swap @ over nand? ( 2drop 32 ; )
	nexto 'nodo ! 0  ;

:binhit6 | x y z -- m
	mortonlut8 octre
	over 21 >> $7 and place swap @ over nand? ( 3drop 128 ; ) nexto 2 << octre +
	swap 18 >> $7 and place swap @ over nand? ( 2drop 64 ; )
	nexto 'nodo ! 0  ;

:binhit7 | x y z -- m
	mortonlut8 octre
	swap 21 >> $7 and place swap @ over nand? ( 2drop 128 ; )
	nexto 'nodo ! 0  ;

#lod binhit binhit1 binhit2 binhit3 binhit4 binhit5 binhit6 binhit7

#rut
:getvox | x y z -- nodo/0
	rot 8 >> $80 + rot 8 >> $80 + rot 8 >> $80 +
	pick2 pick2 pick2 or or $ffffff00 nand? ( 4drop 0 ; ) drop
	rut exec 0? ( drop nodo 2 << pixels + @ ; )
	drop 0 ;

:getvox | x y z -- nodo/0
|	rot 8 >> $80 + $ff and rot 8 >> $80 + $ff and  rot 8 >> $80 + $ff and
|	rot 8 >> $80 + rot 8 >> $80 + rot 8 >> $80 +
|	rot $80 + rot $80 + rot $80 +
|	pick2 pick2 pick2 or or $ffffff00 nand? ( 4drop 0 ; ) drop

|	rot $ff and rot $ff and rot $ff and

	binhit1 0? ( drop nodo 2 << pixels + ; )
	drop 0 ;


|------------- load import
:load3do | "filename" --
	here dup 'octre !
	swap load 'octre> !
	octre> 4 - @ octre + 'pixels !

	octre> 'here !
	;

|--------------------------------

#xcam 0 #ycam 0 #zcam -300	| camara externa

#camox 0 #camoy 0 #camoz 0	| origen
#camdx 0 #camdy 0 #camdz 0	| direccion
#camux 0 #camuy 0 #camuz 0	| up
#camvx 0 #camvy 0 #camvz 0	| left

#zzcam 1.1898
#ani 0
#xxpos

#ax #ay #az	| actual
#ux #uy #uz	| suma ux
#vx #vy #vz	| suma vx

|---------------------------------------------------------
#loda

#ex #ey #ez
#cx #cy #cz
#dx #dy #dz
#sx #sy #sz

|---------- bresenham
#paso

:pasox
	ey +? ( sy 'cy +! dx 2* - ) dy 2* + 'ey !
	ez +? ( sz 'cz +! dx 2* - ) dz 2* + 'ez !
	sx 'cx +!
	;
:pasoy
	ex +? ( sx 'cx +! dy 2* - ) dx 2* + 'ex !
	ez +? ( sz 'cz +! dy 2* - ) dz 2* + 'ez !
	sy 'cy +!
	;
:pasoz
	ey +? ( sy 'cy +! dx 2* - ) dy 2* + 'ey !
	ex +? ( sx 'cx +! dz 2* - ) dx 2* + 'ex !
	sz 'cz +!
	;

:bre3ini | x y z --
|	camox camoy camoz
	camox ax 6 >> + camoy ay 6 >> + camoz az 6 >> +
	'cz ! 'cy ! 'cx !
	camdx ax 6 >> + +? ( 1 )( -1 ) 'sx ! abs 'dx !
	camdy ay 6 >> + +? ( 1 )( -1 ) 'sy ! abs 'dy !
	camdz az 6 >> + +? ( 1 )( -1 ) 'sz ! abs 'dz !

	dx dy >=? (
		dz >=? ( drop
			dy 2* dx - 'ey !
			dz 2* dx - 'ez !
			'pasox 'paso ! ; )
		drop
		dx 2* dz - 'ex !
		dy 2* dz - 'ey !
		'pasoz 'paso ! ; )
	drop
	dy dz >=? (
		drop
		dx 2* dy - 'ex !
		dz 2* dy - 'ez !
		'pasoy 'paso ! ; )
	drop
	dx 2* dz - 'ex !
	dy 2* dz - 'ey !
	'pasoz 'paso ! ;

:dupli
	dx 2* 'dx ! sx 2* 'sx ! dy 2* 'dy ! sy 2* 'sy ! dz 2* 'dz ! sz 2* 'sz ! ;

#value
:incx
	-1 'value +!
	loda @+ 'rut ! 'loda ! ;

:traverse | --
	9 'value ! 'lod 'loda ! incx

	bre3ini
	dupli |dupli |dupli dupli dupli
	64 ( 1? )( 1-
		cx cy cz getvox 1? ( nip @ ; ) drop
		paso exec
		)
	 ;

|---------------------------------------------
:renderwin | x y --
	setxy
	camux camvx + neg 6 << 'ax !	| 6 bits more resolution
	camuy camvy + neg 6 << 'ay !
	camuz camvz + neg 6 << 'az !
	camux  'ux !
	camuy  'uy !
	camuz  'uz !
	camvx  camux 7 << - 'vx !
	camvy  camuy 7 << - 'vy ! | resta para retroceder el raster
	camvz  camuz 7 << - 'vz !
	128 ( 1? )( 1-
		128 ( 1? )( 1-
			traverse px!+
			ux 'ax +! uy 'ay +! uz 'az +!
			) drop
		sw 128 - px+!
		vx 'ax +! vy 'ay +! vz 'az +!
		) drop ;

|---------------------------------------------

:ubicam
	ani 0? ( msec 2 << )( xxpos ) nip	| animado o no

	dup sin zzcam *.
|	0
	'camoz !
	dup sin zzcam *. 'camoy !
	dup cos zzcam *. 'camox !

	dup sin neg
|	0
	'camdz !
	dup sin neg 'camdy !
	cos neg 'camdx !

	| normaliza
	camdx dup *. camdy dup *. + camdz dup *. + sqrt. 1.0 swap /.
	camdx over *. 'camdx !
	camdy over *. 'camdy !
	camdz swap *. 'camdz !

	camdx neg 'camuy !
	camdy 'camux !
	|camdz
	0 'camuz !

	camdy camuz *. camuy camdz *. - 'camvx !
	camdz camux *. camuz camdx *. - 'camvy !
	camdx camuy *. camux camdy *. - 'camvz !

	;



|--------------------------
:main

"media/3do/mario.3do"
|"media/3do/horse.3do"
|"media/3do/earth.3do"
	load3do
	4
	show clrscr verde
		dup ":r%d " print cr

		camox camoy camoz "%f %f %f" print cr
		camdx camdy camdz "%f %f %f" print cr


		ubicam
		100 200 renderwin

		[ -0.1 'zzcam +! ; ] <up>
		[ 0.1 'zzcam +! ; ] <dn>

		[ ani not 'ani ! ; ] <spc>
		[ -0.01 'xxpos +! ; ] <le>
		[ 0.01 'xxpos +! ; ] <ri>
		'exit >esc<
		cflecha ;

: mark main ;
