| iso test 3
| PHREDA 2015
|---------------------
^r4/lib/gui.txt
^r4/lib/dlgfile.txt

^r4/lib/morton.txt
^r4/lib/trace.txt


|--- maskbuffer | 1024*sh
#xsc #ysc
#maskb

:mask.adr | x y -- d m
	5 << over 5 >> + 1 rot $1f and << ;

:maskb.get | x y -- b
	mask.adr swap maskb + and ;

:maskb.set | x y --
	mask.adr swap maskb + dup @ rot or swap ! ;

:maskb.clear
	maskb >r
	sh 5 << ( 1? )( 0 r!+ 1- ) drop
	rdrop
	;

:maskb.ini
	1024 sw - 2/ neg 'xsc !
	1024 sh - 2/ neg 'ysc !
	here dup 'maskb !
	sh 5 << + 'here !
	;
|-------------
#xcam 0 #ycam 0 #zcam 0.08

#octre
#pixels
#octre>

#dmask

#level
#ymin #nymin
#ymax #nymax
#xmin #nxmin
#xmax #nxmax
#zmin #nzmin
#rotsum )( 640
#rotsum> 'rotsum

:c10 | x z -- x'
	2/ 0 swap over | x 0 z 0
	pick3 >? ( over - rot )( over + rot 512 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 256 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 128 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 64 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 32 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 16 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 8 + ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 4+ ) rot 2/ rot
	pick3 >? ( over - rot )( over + rot 2 + ) rot 2/ rot
	pick3 >? ( 2drop )( 2drop 1+ )
	nip ;

:project | x y z -- x y
	swap over c10 ysc + >r c10 xsc + r> ;

:id3di | id x y z -- u v
	dup 'zmin ! pick3 'nzmin !
	project | id x y
	dup 'ymin ! pick2 'nymin !
	dup 'ymax ! pick2 'nymax !
	swap
	dup 'xmin ! pick2 'nxmin !
	dup 'xmax ! pick2 'nxmax !
	swap rot drop ;

:id3d | id x y z -- u v
	zmin >? ( dup 'zmin ! pick3 'nzmin ! )
	project | id x y
	ymin <? ( dup 'ymin ! pick2 'nymin ! )
	ymax >? ( dup 'ymax ! pick2 'nymax ! )
	swap
	xmin <? ( dup 'xmin ! pick2 'nxmin ! )
	xmax >? ( dup 'xmax ! pick2 'nxmax ! )
	swap rot drop ;

:fillrotvec | --
	'rotsum >r
	0 1024 1024 1024 transform id3di r!+ r!+	| 111
	1 1024 1024 -1024 transform id3d r!+ r!+	| 110
	2 1024 -1024 1024 transform id3d r!+ r!+	| 101
	3 1024 -1024 -1024 transform id3d r!+ r!+	| 100
	4 -1024 1024 1024 transform id3d r!+ r!+	| 011
	5 -1024 1024 -1024 transform id3d r!+ r!+	| 010
	6 -1024 -1024 1024 transform id3d r!+ r!+	| 001
	7 -1024 -1024 -1024 transform id3d r!+ r!+ | 000
	r> 'rotsum> !
	nymin 3 << 64 - 'nymin !
	nymax 3 << 64 - 'nymax !
	nxmin 3 << 4+ 64 - 'nxmin !
	nxmax 3 << 4+ 64 - 'nxmax !
	;

:addchild | id --
	rotsum> dup >r
	64 - swap 3 << over + | prev pivot
	@+ swap @ rot | y x prev
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	3drop r> 'rotsum> ! ;

:dbox | x1 y1 x2 y2 --
	2over op
	pick3 over line
	2dup line
	over pick3 line
	2drop line ;

:fbox | x1 y1 x2 y2 --
	2over op
	pick3 over pline
	2dup pline
	over pick3 pline
	2drop pline poli ;

:fillbox | ancho alto x y --
	setxy
	sw pick2 - rot rot | paso ancho alto
	( 1? )( 1-
		over ( 1? )( 1- ink@ px!+ ) drop
		pick2 px+!
		) 3drop ;

:drawbox | oct --
	octre - pixels + @ ink
	rotsum> >r
	nxmin r + @ nymin r + @
	nxmax r + @ nymax r> + @
	pick2 - swap pick3 - swap 2swap fillbox
	;

:drawpoint | oct x y --
	setxy octre - pixels + @ px!+ ;

:drawpoint1 | oct x --
	rotsum> nymin over + @
	swap nymax + @ =? ( drawpoint ; )
	rot octre - pixels + @ ink
	over rotsum> nymax + @
	op line ;

:drawpoint2 | oct x y --
	rot octre - pixels + @ ink
    rotsum> nxmax + @ over
	op line ;

:viewchildm | node bitm nro -- node bitm
	1 over << pick2 nand? ( 2drop ; )	| node bitm nro place
	swap addchild
	1- over and popcnt 2 << pick2 +    | node bitm node'

|.........................
	rotsum>	nxmin over + @
	swap nxmax + @ =? ( drawpoint1 -64 'rotsum> +! ; )
	rotsum>	nymin over + @
	swap nymax + @ =? ( drawpoint2 -64 'rotsum> +! ; )
	2drop
	level 7 >? ( drop drawbox -64 'rotsum> +! ; ) drop

|	pixels >? ( drawbox -64 'rotsum> +! ; )
|.........................

:viewo | node --

	1 'level +!
	@ dup 8 >> 2 << octre + swap $ff and | adr bitmask

	nzmin viewchildm
	nzmin 1 xor viewchildm
	nzmin 2 xor viewchildm
	nzmin 4 xor viewchildm
	nzmin 3 xor viewchildm
	nzmin 5 xor viewchildm
	nzmin 6 xor viewchildm
	nzmin 7 xor viewchildm

	2drop
	-1 'level +!
	-64 'rotsum> +!
	;

:boxlim
	verde xmin ymin xmax ymax dbox ;

::drawiso | octre --
	fillrotvec
	0 'level !
	viewo
|	boxlim
	;
|-------------------------------------------
#octvert )( 960 | 10 niveles de 3 valores*8vertices
#octvert> 'octvert

:fillveciso | --
	octvert> 96 - >r
	0 r@+ r@+ r@+ id3di 'rotsum !+ !+ 'rotsum> !
	1 r@+ r@+ r@+ id3d rotsum> !+ !+ 'rotsum> !
	2 r@+ r@+ r@+ id3d rotsum> !+ !+ 'rotsum> !
	3 r@+ r@+ r@+ id3d rotsum> !+ !+ 'rotsum> !
	4 r@+ r@+ r@+ id3d rotsum> !+ !+ 'rotsum> !
	5 r@+ r@+ r@+ id3d rotsum> !+ !+ 'rotsum> !
	6 r@+ r@+ r@+ id3d rotsum> !+ !+ 'rotsum> !
	7 r@+ r@+ r@+ id3d rotsum> !+ !+ 'rotsum> !
	rdrop
	nymin 3 << 64 - 'nymin !
	nymax 3 << 64 - 'nymax !
	nxmin 3 << 4+ 64 - 'nxmin !
	nxmax 3 << 4+ 64 - 'nxmax !
	;

:fillvec3 | --
	'octvert >r
	1024 1024 1024 transform dup 'zmin ! 0 'nzmin ! swap rot
	r!+ r!+ r!+ | 111
	1024 1024 -1024 transform zmin >? ( dup 'zmin ! 1 'nzmin ! ) swap rot
	r!+ r!+ r!+ | 110
	1024 -1024 1024 transform zmin >? ( dup 'zmin ! 2 'nzmin ! ) swap rot
	r!+ r!+ r!+ | 101
	1024 -1024 -1024 transform zmin >? ( dup 'zmin ! 3 'nzmin ! ) swap rot
	r!+ r!+ r!+ | 100
	-1024 1024 1024 transform zmin >? ( dup 'zmin ! 4 'nzmin ! ) swap rot
	r!+ r!+ r!+ | 011
	-1024 1024 -1024 transform zmin >? ( dup 'zmin ! 5 'nzmin ! ) swap rot
	r!+ r!+ r!+ | 010
	-1024 -1024 1024 transform zmin >? ( dup 'zmin ! 6 'nzmin ! ) swap rot
	r!+ r!+ r!+ | 001
	-1024 -1024 -1024 transform zmin >? ( dup 'zmin ! 7 'nzmin ! ) swap rot
	r!+ r!+ r!+ | 000
	r> 'octvert> !
	nzmin 'dmask !
	;

:addchild3 | id --
	octvert> dup >r
	96 -
	swap 2 << dup 2* +	| 12*
	over + swap >r >r | prev pivot
	r@+ r@+ r> @ r> | x y z pri
	@+ pick4 + 2/ r!+ @+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick4 + 2/ r!+ @+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick4 + 2/ r!+ @+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick4 + 2/ r!+ @+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick4 + 2/ r!+ @+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick4 + 2/ r!+ @+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick4 + 2/ r!+ @+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	@+ pick4 + 2/ r!+ @+ pick3 + 2/ r!+ @+ pick2 + 2/ r!+
	4drop r> 'octvert> ! ;

:isonow | oct --
    fillveciso
	viewo
	-96 'octvert> +!
	;

#LOD 3
:viewchildo | node bitm nro -- node bitm
	1 over << pick2 nand? ( 2drop ; )	| node bitm nro place
	swap addchild3
	1- over and popcnt 2 << pick2 +    | node bitm node'

	level LOD >? ( drop isonow ; ) drop

:viewoct | node --

	1 'level +!
	@ dup 8 >> 2 << octre + swap $ff and | adr bitmask

	dmask viewchildo
	dmask 1 xor viewchildo
	dmask 2 xor viewchildo
	dmask 4 xor viewchildo
	dmask 3 xor viewchildo
	dmask 5 xor viewchildo
	dmask 6 xor viewchildo
	dmask 7 xor viewchildo
	2drop
	-1 'level +!
	-96 'octvert> +!
	;

::drawoct | octre --
	fillvec3
	0 'level !
	viewoct
	;

|-------------
:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx mroty ;

|------------------------------
:drawpixels
	0 0 setxy
	pixels ( octre> <? )( @+ px!+ ) drop ;

:load3do | "" --
	here 'octre !
	octre swap load 'octre> !
	octre> 4 - @ octre + 'pixels !
|	octre> 'here !
	;

:loadoctree
	mark
	"media/3do" dlgfileload 0? ( drop empty ; )
	load3do
	empty ;

|-------------
:main
	"media/3do/horse.3do" load3do

	33
	show clrscr
|		drawpixels

		verde fonti
		dup "%d " print cr
		cr2
		'loadoctree dup <f1> "F1-Load" sp btnt cr cr2
		LOD "LEVEL %d <F2-F3>" print cr
		"up/dn      .. zcam" print cr
		"left/right .. xcam" print cr
		"pgup/pgdn  .. ycam" print cr

		omode
		freelook
		xcam ycam zcam mtrans

|		octre drawiso

		octre drawoct
|		0 0.02 0 mtransi octre drawoct

		[ -0.02 'zcam +! ; ] <up>
		[ 0.02 'zcam +! ; ] <dn>
		[ -0.02 'xcam +! ; ] <le>
		[ 0.02 'xcam +! ; ] <ri>
		[ -0.02 'ycam +! ; ] <pgup>
		[ 0.02 'ycam +! ; ] <pgdn>

		[ -1 'LOD +! ; ] <f2>
		[ 1 'LOD +! ; ] <f3>

		'exit >esc< cminiflecha ;

: mark maskb.ini main ;

