^r4/lib/gui.txt
^r4/lib/graf.txt
^r4/lib/fonti.txt
^r4/lib/formkit.txt

#objs )( 10000
#pad 8

#buffer )( 128

#xdrag -1 #ydrag -1 | keep mouse position when first clicked
#dragging? 0
#dx 0 #dy 0 

:s!+ swap !+ ;

:dummy.data
	3 'objs !+
	200 s!+ 100 s!+ 3 s!+ "Note 1" swap strcpyl
	150 s!+ 220 s!+ 7 s!+ "Note 2" swap strcpyl
	250 s!+ 420 s!+ 18 s!+ "Note 3" swap strcpy ;

:draw.line 0 0 op xymouse line ;

:load.objs | ( -- )
	   'objs "mem/todo.mem" load drop ;

:save.objs | ( -- )
	   dummy.data
	   'objs 10000 "mem/todo.mem" save ;

:rot- | ( a b c -- c a b )
      rot rot ;

:adjust.pad | ( -- pad.val )
	cch 4 / 'pad ! ;

:add.padding | ( h w x y -- hh ww xx yy )
	     adjust.pad
	     pad - swap pad - swap
	     2swap
	     pad 2* + swap pad 2* + swap
	     2swap ;

:rect | ancho alto x y --
        2swap >r >r
        2dup op over r> + over 2dup line r + line
        2dup r> + line line ;

:4dup pick3 pick3 pick3 pick3 ;

:atxy_ | ( x y -- x' y ' )
      1 max swap 1 max swap atxy ;

:draw.obj | ( x y txt -- )
	negro sizeprint >r
	rot- 2dup r> cch 2swap add.padding
	4dup
	amarillo vfill
	negro rect
	atxy_ negro print ;

:debug dup rojo "[%d]" print ;

:getxy.dragging
	dragging? 0? ( xymouse dy - swap dx - swap 'ydrag ! 'xdrag ! ) drop ;

:updatedxdy
	dragging? 1? ( xymouse ydrag - 'dy ! xdrag - 'dx ! ) drop ;

:pcr print cr ;

:dragging getxy.dragging updatedxdy ;

:handle.mouse
	   negro xymouse swap "[ %d , %d ]" pcr
	   bmouse 1? ( dragging 1 )( 0 ) 'dragging? ! drop ;

:n.objs 'objs @ ;

:draw.objs
	200 dx + 100 dy + "Example Note 1" draw.obj
	150 dx + 220 dy + "Example Note 2" draw.obj ;

:txtin
	azul 'buffer 128 input ;

:edit
    $cccccc paper
    fonti
    0 'buffer !
    show clrscr
    	rojo 'exit "Exit" 4 menur sp sp
    	negro debug cr cr
    	handle.mouse cr cr
	txtin
	300 300 'buffer draw.obj
	draw.objs
	cminiflecha
	'exit >esc< ;

: load.objs 33 edit save.objs ;
