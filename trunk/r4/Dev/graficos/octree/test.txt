| octree search point
| PHREDA 2014
|----------------------

^r4/lib/gui.txt
^r4/lib/trace.txt

| mesa

#ocdeep 3
#ocdata (
%11111111	| nivel 0

%00011111	| nivel 1
%00101111
%01001111
%10001111
%00010001
%00100010
%01000100
%10001000

%10001111 | nivel 2 ultimo nivel
%00001111
%00001111
%00001111
%10001000


%00001111
%01001111
%00001111
%00001111
%01000100

%00001111
%00001111
%01001111
%00001111
%01000100

%00001111
%00001111
%00001111
%10001111
%10001000

%10001000
%10001000

%01000100
%01000100

%01000100
%01000100

%10001000
%10001000
)

|---------------------------------------
#tpopcnt (
    0 1 1 2 1 2 2 3 1 2 2 3 2 3 3 4
    1 2 2 3 2 3 3 4 2 3 3 4 3 4 4 5
    1 2 2 3 2 3 3 4 2 3 3 4 3 4 4 5
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    1 2 2 3 2 3 3 4 2 3 3 4 3 4 4 5
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    3 4 4 5 4 5 5 6 4 5 5 6 5 6 6 7
    1 2 2 3 2 3 3 4 2 3 3 4 3 4 4 5
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    3 4 4 5 4 5 5 6 4 5 5 6 5 6 6 7
    2 3 3 4 3 4 4 5 3 4 4 5 4 5 5 6
    3 4 4 5 4 5 5 6 4 5 5 6 5 6 6 7
    3 4 4 5 4 5 5 6 4 5 5 6 5 6 6 7
    4 5 5 6 5 6 6 7 5 6 6 7 6 7 7 8 )

:popcnt | nro -- cnt
	'tpopcnt + c@ ;

#tplace ( $01 $02 $04 $08 $10 $20 $40 $80 )

:place | nro -- pl
	'tplace + c@ ;

|--- 3D x y z . 10 bits
:p1x2 | x -- v
 	$3ff and
	dup 16 << xor $ff0000ff and
	dup 8 << xor  $0300f00f and
	dup 4 << xor  $030c30c3 and
	dup 2 << xor  $09249249 and ;

:morton3d | x y z -- Z
	p1x2 2* swap p1x2 or 2* swap p1x2 or ;

|----------------------------------


:esta | x y z -- adr/0
	morton3d 'ocdata | busca 'tree
	dup c@
	pick2 6 >> $7 and place	| busca 'tree value now
	2dup and 0? ( nip nip nip nip ; ) drop	| no hay nadie
	1- and popcnt 			| busca 'tree suma
	+ 1+					| busca 'treen

	dup c@
	pick2 3 >> $7 and place
	2dup and 0? ( nip nip nip nip ; ) drop	| no hay nadie
	1- and popcnt
	+ | sumo anteriores

	nip ;
	dup c@
	pick2 $7 and place
	2dup and 0? ( nip nip nip nip ; ) drop	| no hay nadie
	1- and popcnt
	+ | sumo anteriores
	nip

	;

#z 0
:main
	show clrscr
		z "z:%d " print cr
		0 ( 8 <? )(
			"  " print
			0 ( 8 <? )(
				over over z esta 0? ( " " )( "#" ) nip print
				1+ ) drop
				cr
			1+ ) drop

		[ 1 'z +! ; ] <dn>
		[ -1 'z +! ; ] <up>

		'exit >esc<
		cminiflecha ;

: mark main ;

