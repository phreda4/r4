^r4/lib/gui.txt
^r4/lib/gc.txt
^r4/lib/trace.txt

|^inc/rft/robotobold.rft
|^inc/rft/gooddog.rft
^inc/rft/robotoregular.rft


#fyc #fxc
#fycc #fxcc

:v>rfw ccw 14 *>> ;
:v>rfh cch 14 *>> ;
:rf>xy | value -- x y
	dup  18 >> ccw 14 *>> ccx + swap 14 << 18 >> cch 14 *>> ccy + ;

|--------- formato fuente
#yp #xp
:a0 drop ; | el valor no puede ser 0
:a1 xp $80000000 <>? ( yp pline )( drop )
	rf>xy 2dup 'yp !+ ! op ;  | punto
:a2 rf>xy pline ; | linea
:a3 swap >r rf>xy r@+ rf>xy pcurve r> ;  | curva
:a4 swap >r rf>xy r@+ rf>xy r@+ rf>xy pcurve3 r> ; | curva3

|-- posible extensiones (necesito guardar ultimo punto
|-- Dxy (8bits) sumado al punto anterior
| a5 Dxy pline Dxy plie | XYXY
| a6 DX pline DY pline
| a7 DY pline DX pline
| a8 Dxy Dxy pcurve
| a9 GXY Dxy Dxy pcurve3
| aa REFLEX GXY pcurve ; REFLEX necesita 2 puntos anteriores!!
| ab REFLEX GXY GXY pcurve3
| ac REFLEX DXY DXY pcurve3

#gfont a0 a1 a2 a3 a4 0 0 0

:drawrf | 'rf --
	0? ( drop ; )

	$80000000 'xp !
	( @+ 1? )( dup $7 and 2 << 'gfont + @ exec ) 2drop
	xp yp pline


	poli ;

#inth
#intw
#fontrom
#fontsize

:wsize | c -- wsize
	2 << fontsize + @ ccw 14 *>> ;

:emit | c --
	2 << fontrom + @ drawrf ;

:.c | char
	$ff and
	dup emit
	wsize 'ccx +! ;

:imp | print
	fxcc neg 'ccx +!
	fycc 'ccy +!

	( c@+ 1? )( .c ) 2drop
	fxcc 'ccx +!
	fycc neg 'ccy +!

;

:main
	128 pxtext
	font 'fontrom ! 'fontsize ! 'fyc ! 'fxc !
	fyc v>rfh 'fycc !
	fxc v>rfw 'fxcc !
	show clrscr
		verde
		"Esto es un texto largo para que se lea" imp cr
		Blanco
		"Hola !!?? @#$%&/(*  1234+1.2=324 [€]" imp cr
		rojo
		"Y Eèsto ño te" imp cr
		'exit >esc<
	;
: main ;