| Implicit Tree Heap
| PHREDA 2013
|--------------------------
^r4/lib/gui.txt
^r4/lib/btn.txt
^r4/lib/trace.txt

#coverbuff )( 4096
#coverbuff> 'coverbuff
#ccnt 0

:dumpr
	'coverbuff >r
	ccnt ( 1? )( 1-
		r@+ "%d " allowcr print ) drop rdrop ;

:]cover | nro -- lugar
	2 << 'coverbuff + ;

|-----------------------
:heap! | nodo --
	ccnt dup 1+ 'ccnt !
	( 1? )(
		dup 1- 2/	| v j i
		dup ]cover @ | v j i vi
		pick3 <? ( 2drop ]cover ! ; )
		rot ]cover !	| v i
		) drop
	'coverbuff ! ;

:moveDown | value pos --
	( ccnt 2/ <? )(
		dup 2* 1+ 		| val pos ch1
		dup ]cover @	| val pos ch1 v1
		over 1+         | val pos ch1 v1 ch2
		ccnt <? (
			]cover @	| val pos ch1 V1 V2
    		>? ( drop 1+ dup ]cover @ ) | val pos chm Vm
			)( drop )
		pick3 				| value pos chM vM va
		>=? ( 2drop ]cover ! ; )		| value pos chM vM
		rot over swap ]cover !	| value chM vM
		drop )
	]cover ! ;

:heap@ | -- nodo
	coverbuff
	ccnt 0? ( nip ; )
	1- ]cover @ 0 MoveDown
	-1 'ccnt +!
	;
|-----------------------

#last
:main
|	'coverbuff >r 3 r!+ 1 r!+ 4 r!+ rdrop 3 'ccnt !
	show clrscr
		verde
		ccnt " cnt:%d " print cr
		last " salio:%d " print cr
		coverbuff "primero: %d" print cr
		dumpr cr cr

		sp [ rand heap! ; ] dup "f1 +" btnt <f1>
		sp [ heap@ 'last ! ; ] dup "f2 -" btnt <f2>
		'exit >esc<
		;

: main ;

