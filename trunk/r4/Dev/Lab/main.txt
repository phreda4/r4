| menu principal
| PHREDA 2010
|------------------

^r4/lib/gui.txt
^r4/lib/fontt.txt
^r4/lib/btn.txt
^r4/lib/input.txt
^r4/lib/part16.txt

^r4/system/mem-ed.txt
^r4/system/r4code.txt

^r4/lib/trace.txt

|--------- estado
#ok " ok"
#mensaje 'ok
#lastrun )( 1024
#padin )( 1024

|-------- memoria guardada
#nrof
#ruta )( 1024
#ruta> 'ruta

#ICOWM 200
#ICOHM 50
#ICOW 192
#ICOH 42

#cntcol		| cnt de columnas
#offcol		| offset de columnas
#files 0 0
#nombres
#nombres>

:cpyname | "" -- nadr
	nombres> dup >r
	strcpyl 'nombres> !
	r> ;

:ruta.push | "" --
	ruta> strcpyl
	"/" swap 1- strcpyl
	1- 'ruta> ! ;

:ruta<< | adr -- adr'
 	ruta> 2 -
	( 'ruta >? )( dup c@ $2f =? ( drop 1+ ; ) drop 1- ) drop
	'ruta ;

:ruta.pop | --
	ruta<< 0 over c! 'ruta> ! ;

|----------- estado
:grabaestado
	'nrof 1040 "mem/mp.mem" save ;

:finnew
	'ed.nombre c@ 0? ( drop exit ; ) drop
	grabaestado
	0 0 'ed.ncar ! 'ed.nlin !
	'ed.nombre 'ruta "%s%s" mprint 'ed.nombre strcpy
	ed.save
	"r4/system/edit-code.txt" run
	;

:clicknew
	0 'ed.nombre !
	refreshfoco
	show clrscr
		64 gc.top $00f gc.hfill
		'exit >esc<
|		fonta-verdana14b 
		scr home
		verde " :R4 " print
		blanco
		" NEW FILE" print cr cr
		'ruta " %s" print
		'ed.nombre 32 input
		'finnew lostfoco
		;

:runprg
	grabaestado
	'lastrun run
	;

:runprgshot
	grabaestado
	'lastrun run ;

:editprg
	grabaestado
	ed.load
	'lastrun 'ed.nombre = 0? (
		'lastrun 'ed.nombre strcpy
		0 'ed.nlin ! 0 'ed.ncar !
		) drop
	ed.save

	"r4/system/edit-code.txt" run
	;

|----------------------------------
:helpmodo
	;

:memmapv
	d.TOS memmap
	;

#voc-system
"BYE" "HELP" "RESETVM" "MEMMAP"
( 0 )

#exe-system
'exit 'helpmodo 'resetvm 'memmapv
0

:nextw
    ( c@+ 32 >? )( drop )
	0? ( drop 1- )( drop )
	;

:pushnro | val --
	basen
	10 =? ( drop d.pushDec ; )
	2 =? ( drop d.pushBin ; )
	drop
	d.pushHex ;
	;

:palabraconsola | str -- str'
	( dup c@ 33 <? )( 0? ( nip ; ) drop 1+ )		| quitar espacios
|	$5e =? ( drop esinclude ; )			| $5e ^  Include
|	$7c =? ( drop escomentario ; )		| $7c |	 Comentario
|	$3A =? ( drop esdefinicion ; )		| $3a :  Definicion
|	$23 =? ( drop esvariable ; )		| $23 #  Variable

|	$22 =? ( drop escadena ; )			| $22 "	 Cadena

	$27 =? ( drop 1+ dup 				| $27 ' Direccion
		dup ?macro 1? ( 3drop "mACROnOTdIR" 'mensaje ! 0 ; ) drop
		?palabra 1? ( nip stepadr nextw ; ) 2drop
		"NOTdIR" seterror 3 - 0 ; )
	drop
	dup ?numero 1? ( drop pushnro nip ; ) drop
	dup ?fnumero 1? ( drop d.pushFix nip ; ) drop
	dup 'voc-system inupp? 1? ( 1- 2 << 'exe-system + @ exec nextw ; ) drop
	dup ?macro 1? ( stepmacro nextw ; ) drop
	dup ?palabra 1? ( stepword nextw ; ) drop
	2drop 0
	"??" 'mensaje !  ;

:correconsola
	'padin ( palabraconsola 0? ) drop
	0 'padin !
	refreshfoco
	;

:clickdir
	dup 44 +
	dup ".." = 1? ( 2drop ruta.pop 'ruta 'lastrun strcpy ; ) drop
	ruta.push
	'ruta 'lastrun strcpy ;

:clickfile
	dup 44 + 'ruta "%s%s" mprint 'lastrun strcpy
	;

:nclickfile | n --
	'ruta "%s\\*.*" mprint FFIRST
	( 1? )( 1- FNEXT drop ) drop
	FNEXT clickfile
	;


:cadafile | adr --
	dup @
	$10 =? ( drop verde 'clickdir )( drop azul 'clickfile )
	over 44 +
	dup "." = 1? ( 4drop ; ) drop
	12 sp btntf
	drop
	cr cr2
	bout? 1? ( chome ) drop
	;


|----------------------------------
#xp #yp
#vy

:iconbox | x y --
	2dup op
	over ICOW + over line
	over ICOW + over ICOH + line
	2dup ICOH + line
	2dup line
	;

:boxfile | adr -- /0 delete
	>r
	r@+
	r@+ $10 =? ( azul )( verde ) drop
	r@+ r@+ | x y
	yp + swap xp + swap
	iconbox
	4+ swap 4+ swap +? ( atxy print )( 3drop )
	rdrop
	;

:cfile | adr --
	dup 44 +
	dup "." = 1? ( 3drop ; ) drop
	dup ".." = 1? ( 3drop ; ) drop
	'boxfile 'files p!+ >r
	cpyname r!+		| nombre
	@ r!+			| tipo
	xp 4+ r!+
	yp 4+ r!+
	rdrop
	ICOWM 'xp +!
	xp sw >? ( offcol 'xp ! ICOHM 'yp +! ) drop
	;

:populatefiles
	nombres 'nombres> !
	offcol 'xp ! 0 'yp !
	'files p.clear
	'ruta "%s\\*.*" mprint
	ffirst ( 1? )( cfile fnext ) drop
	0 'xp ! 200 'yp !
	;

:main
	populatefiles
	show clrscr


		verde dup " :R%d " print
		rojo sp 'exit "esc-Exit" link
		verde
		sp 'runprg dup <f1> "f1-Run" link
		sp 'editprg dup <f2> "f2-Edit" link
		violeta 'clicknew dup <f3> "f3-New" sp link
		cr

|		amarillo mensaje print
		blanco 'lastrun " %s " print cr
|		blanco " #" print 'padin 64 input
|		'correconsola lostfoco
|		verde dumpvstack cr
		'exit >esc<

		'files p.draw

		cr cr2 chome!

|		'ruta "%s\\*.*" mprint FFIRST
|		( 1? )( cadafile FNEXT ) drop

		[ 1 'vy ! ; ] <up>
		[ -1 'vy ! ; ] <dn>
		vy 'yp +!
		cminiflecha ;

:memoria
	mark
	"r4" ruta.push
	'nrof "mem/mp.mem" load drop
	'ruta count + 'ruta> !
	1024 'files p.ini
	here dup 'nombres ! 'nombres> !
	$ffff 'here +!
	sw ICOWM / 'cntcol !
	sw cntcol ICOWM * - 2/ 'offcol !
	;

:	$0 paper
	memoria
	4 main
	grabaestado
	;
