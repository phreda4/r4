| busca error de runtime en  :r4
| usando el compilar de bytes completo
| PHREDA
|---------------------------------------
^reda4.txt
^gui3.txt
^fontj.txt
^parse.txt
^r4bytecode.txt
^trace.txt

#nombre )( 64
#iperr -1	| lugar del error
#codins		| codigo instruccion

#pilad )( 1024
#pilad> 'pilad

#pilar )( 1024
#pilar> 'pilar

#dircode
#cntcode
#dirdata
#cntdata

#msge
#erroren

:+data | n --
	pilad> !+ 'pilad> ! ;
:+code | n --
	pilar> !+ 'pilar> ! ;

:printdata
	"D:" print
	'pilad
	( pilad> <? )(
		@+ "%d " print )
	drop ;

:printpilar
	"R:" print
	'pilar
	( pilar> <? )(
		@+ "%h " print )
	drop ;

:loadruntime.err
	mem "runtime.err" load mem 4+ <? ( drop  ; ) 0 swap !
	mem
	'nombre swap ( c@+ 13 <>? )( 0? ( 3drop ; ) rot c!+ swap ) drop 0 rot c!
	trim "IP: " scanp 0? ( 2drop ; )
	trim ?int -? ( 2drop ; ) 1- 'iperr !
	trim ?int -? ( 2drop ; ) 'codins !
	trim "D: " scanp 0? ( 2drop ; )
	( trim
		dup ?numero 1? ( drop +data nip )
		0? 	) drop
	trim ")" scanp 0? ( 2drop ; )
	trim "R: " scanp 0? ( 2drop ; )
	( trim
		dup ?numero 1? ( drop +code nip )
		0? 	) drop
	trim ")" scanp 0? ( 2drop ; )
	trim "code:" scanp 0? ( 2drop ; )
	trim ?int -? ( 2drop ; ) 'dircode !
	trim "cnt:" scanp 0? ( 2drop ; )
	trim ?int -? ( 2drop ; ) 'cntcode !
	trim "data:" scanp 0? ( 2drop ; )
	trim ?int -? ( 2drop ; ) 'dirdata !
	trim "cnt:" scanp 0? ( 2drop ; )
	trim ?int -? ( 2drop ; ) 'cntdata !
	drop
	;

|------------------------------------
:escode | adr -- adr nro/0
	dircode <? ( 0 ; )
	dircode cntcode + >? ( 0 ; )
	dircode - iprog + | transforma direccion
	busqpal 0? ( "??" nip ) print
	;

:esdata | adr -- adr nro/0
	dirdata <? ( 0 ; )
	dirdata cntdata + >? ( 0 ; )
	;

:esfree | adr -- adr nro/0
	dirdata <? ( 0 ; )
	;

:busqdir | dir --
	escode 1? ( iprog - " C(%h)" print ; ) drop
	esdata 1? ( idato - " D(%h)" print ; ) drop
	esfree 1? ( "free %h" print ; ) drop
	"%d" PRINT
	;

:resolverpilar
	'pilar
	( pilar> <? )(
		@+ busqdir
		cr )
	drop ;

|------------------------------------
:pantalla
	clear
	mem 'nombre load 0 swap c!
	mem bytecodecomp 'msge !

|	saveimage	| guarda imagen
|	savecode	| guarda compilado

|	iperr buscapal 'erroren !

	inigui
	'exit >esc<
	show clrscr fontj  |	48 font
		blanco
		'nombre  "%s" print cr
		codins iperr
		2dup "IP:%d %d" print cr
		iprog + c@+ $ff and
		rot =? ( verde )( rojo )
		printcode drop cr
		violeta
		printdata cr
		printpilar cr
		cntcode dircode "CODE:%d %d" print cr
		cntdata dirdata "DATA:%d %d" print cr
|		erroren "%s" print cr
		"-------------------------------------" print cr
		dumptoken
		"-------------------------------------" print cr
		resolverpilar
		"-------------------------------------" print cr
		iperr iprog + busqpal 0? ( "??" nip ) print
		;

|----------- principal
:main
	loadruntime.err
	pantalla
	;

: 0 paper 4 main "main.txt" run  ;

