| debug-code.txt
| PHREDA 2010
|---------------------------------------
^lib/reda4.txt
^lib/gui.txt
^lib/parse.txt
^lib/codecolor.txt
^lib/fontt.txt
^lib/dlgfile.txt
|^lib/trace.txt

^sort.txt
^form.txt
^r4token.txt

#nombre )( 64
#mensaje )( 64

|--------- histograma de cantidades
#matword
#matvar
#matlast

:cadaw | nro cnt -- nro
	neg , dup , ;

:cadav | nro cnt -- nro
	neg , dup , ;

:makehisto
	here 'matword !
	'cadaw wordmap
	here 'matvar !
	'cadav varmap
	here 'matlast !

	matvar matword - 3 >> matword shellsort
	matlast matvar - 3 >> matvar shellsort
	;

:dumphisto
	rojo
	matword ( matvar <? )(
		@+ neg swap @+ nro>nom rot "(%d)%w " allowcr print
		)
	cr violeta
	( matlast <? )(
		@+ neg swap @+ nro>nom rot "(%d)%w " allowcr print
		)
	drop
	;

|------------------------------------------------
| genera codigo en :r4 y lo graba en "plain.txt"
| Sin includes
| Sin locales/exportadas ::->:  ##->#
|------------------------------------------------
|:nro>dicn2   8 >> 4 << 'indicepal + @ ;	| nombre de palabra
:nro>dicn   8 >> "w%h" mprint ;		| w<nro palabra>

:coldefw nro>dicn ":%w" ,print ;
:coldefv nro>dicn "#%w" ,print ;
:colitd
:colitf
:colitb
:colith tomem "%w" ,print ;

:cpycad | adr --
	( c@+ 1? )( 34 =? ( drop c@+ 34 <>? ( 2drop ; ) ) ,c ) 2drop ;

:colits	34 ,c tomem 1+ cpycad 34 ,c ;
:colwor	nro>dicn "%w" ,print ;
:colvar	nro>dicn "%w" ,print ;
:coldwo	nro>dicn "'%w" ,print ;
:coldva	nro>dicn "'%w" ,print ;

#codei 0 'coldefw 'coldefv colitd colith colitb colitf colits colwor colvar coldwo coldva

:,token | a -- a.
	@+ dup $ff and
	12 <? ( 2 << 'codei + @ exec ; ) nip
	nro>macro ,s ;

||| Codigo
:gencod | adrr --
	dup @ swap 8 + @
	( 1? )( 1- swap ,sp ,token swap
		$1f nand? ( ,cr ) )
	2drop ;

||| Variables
:genvar | adrr --
	@
	( @+ dup $ff and
		1 =? ( 0 nip ) | corta con defc
		2 =? ( 0 nip ) | corta con defv
		1? )( 	 | dirv n c
		,sp
		12 <? ( 2 << 'codei + @ exec )( nip nro>macro ,s )
		$7c nand? ( ,cr )
		)
	3drop ;

:gencodigo | nro llamadas -- nro llamadas
	over 4 << 'indicepal +
	dup 8 + @ 1 and? ( 'genvar "#" )( 'gencod ":" ) ,s nip
	swap
	|@+ "%w" ,print 				| nombre de palabra
	4+ pick3 "w%h" ,print      | w<nro palabra>
	swap
	exec | ,cr
	;

:makeplain
	mark
	"| plain.txt generator" ,s ,cr
	"|---------------------" ,s ,cr
	cntword cntvars + 1-
	0 ( over <? )(
		dup getllamadas 1? ( ,cr gencodigo ) drop
		1+ ) nip
	": " ,s 4 << 'indicepal + 4+ gencod
	"plain.txt" savemem
	empty
	"plain.txt generado." 'mensaje strcpy
	;

|------- imprime word
:esvar | adr --
	@ "#%w " violeta print ;

:printword | n --
	4 << 'indicepal +
	indicepal> >=? ( drop ; )
	dup 8 + @ 1 and? ( drop esvar ; ) drop
	dup @ ":%w " rojo print
	dup 12 + @
	swap 4+ @
	|tokeninfolist
	drop
	;

|-------- VER DICCIONARIO
#pagina
#actual
#grid1 4 10  5  5  10  7  7  2

:refresca
	actual -? ( 0 nip )
	cntword cntvars + 1- >? ( cntword cntvars + 1- nip )
	pagina <? ( dup 'pagina ! )
	pagina 29 + >? ( dup 29 - 'pagina ! )
	'actual !
	;

:gridline | nro --
	dup 4 << 'indicepal + indicepal> >=? ( drop ; )
	dup 8 + @ 1 and? ( violeta "#" )( rojo ":" ) nip
	swap @+ rot
	"%s%w" gcell
	@+ drop |"%d " print direccion
	@+
	dup 24 >> "%d" gcell		| pilaR
	dup 8 << 24 >> "%d" gcell	| pilaD
	$fff and "%b" gcell		| flags
	@ "%d" gcell | largo en bytes
	dup getllamadas 1? ( "%d" )( "" nip ) gcellc
	getflags 1? ( "%d" )( "" nip ) gcellc
	;

:verdicc
	0 dup 'pagina ! 'actual !
	inigui
	'exit >esc<
	[ 1 'actual +! refresca ; ] <dn>
	[ -1 'actual +! refresca ; ] <up>
	[ 29 'actual +! refresca ; ] <pgdn>
	[ -29 'actual +! refresca ; ] <pgup>
	show clrscr
		font-vard-8-bold home cr
		verde
		'grid1 8 0.9 grid
		"Nro" gcellc "Nombre" gcellc "RS" gcellc "DS" gcellc
		"Flags" gcellc "Tokens" gcellc "Calls" gcellc " '" gcellc
		cr
		pagina 30 ( 1? )( 1- swap rowg verde
			dup actual =? ( ">%h" )( " %h" ) gcellc
			dup gridline
			cr 1+ swap ) 2drop
		blanco $grid
		cr actual printword
		cmano ;

|--------------------------------
#actualinclude
#maxinclude

#actualword
#inirango
#finrango

:tocopal
	dup 'actualword ! ;

:cadaboton
	"  " allow2cr print
	dup 4 << 'indicepal +
	dup 8 + @ 1 and? ( violeta )( rojo ) drop
	'tocopal swap @ "%w" allowcr btntxt
	;

:cadapal
	actualword <>? ( cadaboton ; )
	cr cr2
	dup 4 << 'indicepal +
	dup 8 + @ 1 and? ( violeta "#" )( rojo " :" ) print drop
	dup @ "%w" print cr
	4+ @ "%h" print
	cr cr2 ;

:rango | hasta desde --
	( over <? )(
		cadapal
		1+ ) 2drop ;

:tocoinclude
	dup 'actualinclude !
	dup 4 << 'indiceinc +
	dup 8 + @ 'indicepal - 4 >> 'inirango !
	dup 12 + @ 'indicepal - 4 >> 'finrango !
	;

:cadainc
	amarillo
    "  " print
	'tocoinclude over 4 << 'indiceinc + @ "%w " allowcr	btntxt
	;

:partes
	actualinclude <>? ( cadainc ; )
	cr cr2
	dup 4 << 'indiceinc + @ "--- %w ---" print
	cr cr2
	finrango inirango rango
	cr cr
	;

:printwords |
	0 ( maxinclude  <? )(
		partes
		1+ ) drop ;

:resetwords
	indicepal> 'indicepal - 4 >> 1-
	dup 1- 'actualword ! 'finrango !
	indicepal< 'indicepal - 4 >> 'inirango !
	indiceinc> 'indiceinc - 4 >>
	dup 1- 'actualinclude ! 'maxinclude !
	;


|----------------------------------
:viewgrilla
	inigui
	'exit >esc<
	show clrscr
		font-vard-8 home blanco
		"hola" print
		dumperror
		cmano ;

:estadoword
	tokenpost
	resetwords
	inigui
	'exit >esc<
	show clrscr
		32 gc.top $f gc.hfill
		font-vard-12-bold home cr2
		verde dup " :R%d" print
		blanco "WORD " print
	|	gris [ end ; ] 'nombre btnt sp

		26 gc.botton $00000f gc.hfill
		font-vard-8-bold home cr2
		rojo sp 'exit "esc-Exit" btnt
		amarillo
		sp 'exit "f1-Usadas" btnt
|		sp 'exit "f2-Usadas" btnt

		32 26 gc.vbetween fonti home
		font-vard-8 home
		printwords
|		dumpcompila
|		dumperror
		cmano ;

:maindebug
	resetwords
	makehisto
	inigui
	'exit >esc<
	show clrscr
		32 gc.top $f gc.hfill
		font-vard-12-bold home cr2
		verde dup " :R%d" print
		blanco "DEBUG " print
		'mensaje print
	|	gris [ end ; ] 'nombre btnt sp

		26 gc.botton $00000f gc.hfill
		font-vard-8-bold home cr2
		rojo sp 'exit "esc-Exit" btnt
		amarillo
|		sp 'exit "f1-Usadas" btnt

		sp 'verdicc dup <f9> "f9-Dicc" btnt
		sp 'makeplain dup <f10> "f10-plain.txt" btnt

		32 26 gc.vbetween fonti home
		font-vard-8 home

		blanco dumphisto

|		printwords
|		dumpcompila
|		dumperror

		cmano ;

:mainerror
	inigui
	'exit >esc<
	show clrscr
		32 gc.top $f gc.hfill
		font-vard-12-bold home cr2
		verde dup " :R%d" print
		blanco "ERROR " print

		26 gc.botton $00000f gc.hfill
		font-vard-8-bold home cr2
		rojo sp 'exit "esc-Exit" btnt
		amarillo

		32 26 gc.vbetween fonti home
		font-vard-8 home
		dumperror
		cmano ;

:main
	'nombre "./nom/editor.nom" load drop
	'nombre tokencomp
	msg 1? ( drop saverror ; ) drop
	tokenpost
	msg 1? ( drop saverror ; ) drop
	maindebug
	;

: 0 paper
	mark
	4 main
	empty ;


