| debug-code.txt
| PHREDA 2010
|---------------------------------------
^lib/reda4.txt
^lib/gui.txt
^lib/parse.txt
^lib/codecolor.txt
^lib/fontt.txt
^lib/dlgfile.txt
|^lib/trace.txt

^sort.txt
^form.txt
^r4code.txt
^r4plain.txt

#nombre )( 64
#mensaje )( 64
#consola )( 1024

:mensaje! 'mensaje strcpy ;

:mkplain
	makeplain
	"plain.txt generado." 'mensaje strcpy
	;

:mkasm
	"r4fasm.txt" run 
	;

:viewCode
	;
:viewData
	;

|-------- VER DICCIONARIO
#pagina
#actual
#grid1 4 4 4 4 4 4 4 4 4

:gridline2 | nro --
	5 << 'indicepal +
	indicepal> >? ( drop ; )
	dup 8 + @ 1 and? ( violeta "#" )( rojo ":" ) nip
	swap @+ rot
	"%s%w" gcell
	@+ "%h" gcell
	@+ "%h" gcell
	@+ "%h" gcell
	@+ "%d" gcell
	@+ "%h" gcell
	@+ "%h" gcell
	@ "%h" gcell
	;

:refrescaind
	actual -? ( 0 nip )
	cntw >? ( cntw nip )
	pagina <? ( dup 'pagina ! )
	pagina 20 + >? ( dup 20 - 'pagina ! )
	'actual !
	;

:gridindexwords
	'grid1 9 0.96 grid
	"Nro" gcellc
	"string" gcellc
	"token" gcellc
	"info" gcellc
	"mem" gcellc
	"len" gcellc
	"calls" gcellc
	"dir" gcellc
	"group" gcellc
	cr
	pagina 21 ( 1? )( 1- swap rowg
		dup actual =? ( blanco "* %d *" )( verde " %d" ) gcellc
		dup |gridline2 |
		ind2nro gridline2
		cr 1+ swap ) 2drop
	gris $grid
	;

|----------------------------------
:helpmodo
	;


#voc-system
"BYE" "HELP" "RESETVM"
( 0 )

#exe-system
'exit 'helpmodo 'resetvm
0

:nextw
    ( c@+ 32 >? )( drop )
	0? ( drop 1- )( drop )
	;

:pushnro | val --
	basen
	10 =? ( drop d.pushDec ; )
	2 =? ( drop d.pushBin ; )
	drop
	d.pushHex ;
	;

:palabraconsola | str -- str'
	( dup c@ 33 <? )( 0? ( nip ; ) drop 1+ )		| quitar espacios
|	$5e =? ( drop esinclude ; )			| $5e ^  Include
|	$7c =? ( drop escomentario ; )		| $7c |	 Comentario
|	$3A =? ( drop esdefinicion ; )		| $3a :  Definicion
|	$23 =? ( drop esvariable ; )		| $23 #  Variable
|	$22 =? ( drop escadena ; )			| $22 "	 Cadena
|	$27 =? ( drop 1+ dup 				| $27 ' Direccion
|		dup ?macro 1? ( 3drop " no tiene direccion" mensaje! 0 ; ) drop
|		?palabra 1? ( nip esdir ; ) 2drop
|		" no existe direccion" seterror 3 - 0 ; )

	drop

	dup ?numero 1? ( drop pushnro nip ; ) drop
	dup ?fnumero 1? ( drop d.pushFix nip ; ) drop
	dup 'voc-system inupp? 1? ( 1- 2 << 'exe-system + @ exec nextw ; ) drop
	dup ?macro 1? ( stepmacro nextw ; ) drop
	dup ?palabra 1? ( stepword nextw ; )
	drop
	0
	"NOTfOUND" mensaje! ;

:correconsola
	'consola ( palabraconsola 0? ) drop
	0 'consola !
	;

|----------------------------------
:maindebug
	0 dup 'pagina ! 'actual !
|	cntw 'actual ! refrescaind
|	cntwords 'cntw !

	inigui
	'exit >esc<
	[ 1 'actual +! refrescaind ; ] <dn>
	[ -1 'actual +! refrescaind ; ] <up>
	[ 20 'actual +! refrescaind ; ] <pgdn>
	[ -20 'actual +! refrescaind ; ] <pgup>

	show clrscr
		32 gc.top $f gc.hfill
		font-vard-12-bold home cr2
		verde dup " :R%d" print
		blanco "DEBUG " print
		'mensaje print
		cntw " %d palabras" print

		26 gc.botton $00000f gc.hfill
		font-vard-8-bold home cr2
		rojo sp 'exit "esc-Exit" btnt
		amarillo
		sp 'stepvm dup <f1> "f1-Step" btnt
		sp 'stepvmn dup <f2> "f2-StepN" btnt
|		sp 'viewData dup <f3> "f3-ViewData" btnt

		sp 'mkplain dup <f10> "f10-GenPlain" btnt
		sp 'mkasm dup <f11> "f11-ASM" btnt

		32 26 gc.vbetween
		home
		gridindexwords

		fonti
		rojo 'mensaje cr printx
		blanco "> " print
		'consola 32 inputline cr
		'correconsola <enter>
		blanco

|		fonti cr
|		dumpcompila cr
		verde vm.dump
|		cr dup "%d" print cr
|		actual printword cr
|		actual ind2nro printword cr
|        <<ip 0? ( "fin" nip )( @ dup 8 >> swap $ff and  "%h:%d " ) print

		cmano ;

:main
	'nombre "./nom/editor.nom" load drop
	'nombre tokencomp
	msg 1? ( drop saverror ; ) drop
	tokenpost
	msg 1? ( drop saverror ; ) drop
	startvm
	maindebug
	;

: 0 paper
	mark
	4 main
	empty ;
