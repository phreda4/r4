| debug-code.txt
| PHREDA 2010
|---------------------------------------
^lib/reda4.txt
^lib/gui.txt
^lib/parse.txt
^lib/codecolor.txt
^lib/fontt.txt
^lib/dlgfile.txt
|^lib/trace.txt

^sort.txt
^form.txt
^r4code.txt

#nombre )( 64
#mensaje )( 64

|------------------------------------------------
| genera codigo en :r4 y lo graba en "plain.txt"
| Sin includes
| Sin locales/exportadas ::->:  ##->#
|------------------------------------------------
:nro>dicn   8 >> "w%h" mprint ;		| w<nro palabra>

:cpycad | adr --
	( c@+ 1? )( 34 =? ( drop c@+ 34 <>? ( 2drop ; ) ) ,c ) 2drop ;

:coldefw nro>dicn ":%w" ,print ;
:coldefv nro>dicn "#%w" ,print ;

:colitd
:colitf
:colitb
:colith tok>cte "%d" ,print ;
:colits	34 ,c tok>str cpycad 34 ,c ;

:colwor
:colvar	nro>dicn "%w" ,print ;
:coldwo
:coldva	nro>dicn "'%w" ,print ;

#codei 0 'coldefw 'coldefv colitd colith colitb colitf colits colwor colvar coldwo coldva

:,token | a -- a.
	@+ dup $ff and
	12 <? ( 2 << 'codei + @ exec ; ) nip
	nro>macro ,s ;

||| Codigo
:gencod | adrr --
	dup @ swap 8 + @
	( 1? )( 1- swap ,sp ,token swap
		$1f nand? ( ,cr ) )
	2drop ;

||| Variables
:genvar | adrr --
	@
	( @+ dup $ff and
		1 =? ( 0 nip ) | corta con defc
		2 =? ( 0 nip ) | corta con defv
		1? )( 	 | dirv n c
		,sp
		12 <? ( 2 << 'codei + @ exec )( nip nro>macro ,s )
		$7c nand? ( ,cr )
		)
	3drop ,cr ;


:gencodigo | nro --
	5 << 'indicepal +
	dup 8 + @ 1 and? ( 'genvar "#" )( 'gencod ":" ) ,s nip
	swap
	|@+ "%w" ,print 				| nombre de palabra
	4+ pick2 "w%h" ,print      | w<nro palabra>
	swap exec | ,cr
	;

:makeplain
	mark
	"| plain.txt generator" ,s ,cr
	"|---------------------" ,s ,cr
	0 ( cntw 1- <? )(
		dup ind2nro gencodigo
		1+ )
	": " ,s ind2nro 5 << 'indicepal + 4+ gencod
	"plain.txt" savemem
	empty
	"plain.txt generado." 'mensaje strcpy
	;

|------------------------------
|------------------------------
:makeasm
	;

:viewCode
	;
:viewData
	;

|-------- VER DICCIONARIO
#pagina
#actual
#grid1 4 4 4 4 4 4 4 4 4

:gridline2 | nro --
	5 << 'indicepal +
	indicepal> >=? ( drop ; )
	dup 8 + @ 1 and? ( violeta "#" )( rojo ":" ) nip
	swap @+ rot
	"%s%w" gcell
	@+ "%h" gcell
	@+ "%h" gcell
	@+ "%h" gcell
	@+ "%d" gcell
	@+ "%h" gcell
	@+ "%h" gcell
	@ "%h" gcell
	;

:refrescaind
	actual -? ( 0 nip )
	cntw  1- >? ( cntw 1- nip )
	pagina <? ( dup 'pagina ! )
	pagina 20 + >? ( dup 20 - 'pagina ! )
	'actual !
	;

:gridindexwords
	'grid1 9 0.96 grid
	"Nro" gcellc
	"string" gcellc
	"token" gcellc
	"info" gcellc
	"mem" gcellc
	"len" gcellc
	"calls" gcellc
	"dir" gcellc
	"group" gcellc
	cr
	pagina 21 ( 1? )( 1- swap rowg
		dup actual =? ( blanco "* %d *" )( verde " %d" ) gcellc
		dup |gridline2 |
		ind2nro gridline2
		cr 1+ swap ) 2drop
	gris $grid
	;

|----------------------------------
:maindebug
	0 dup 'pagina ! 'actual !
|	cntw 'actual ! refrescaind
|	cntwords 'cntw !

	inigui
	'exit >esc<
	[ 1 'actual +! refrescaind ; ] <dn>
	[ -1 'actual +! refrescaind ; ] <up>
	[ 20 'actual +! refrescaind ; ] <pgdn>
	[ -20 'actual +! refrescaind ; ] <pgup>

	show clrscr
		32 gc.top $f gc.hfill
		font-vard-12-bold home cr2
		verde dup " :R%d" print
		blanco "DEBUG " print
		'mensaje print
		cntw " %d palabras" print

		26 gc.botton $00000f gc.hfill
		font-vard-8-bold home cr2
		rojo sp 'exit "esc-Exit" btnt
		amarillo
		sp 'stepvm dup <f1> "f1-Step" btnt
		sp 'viewCode dup <f2> "f2-ViewCode" btnt
		sp 'viewData dup <f3> "f3-ViewData" btnt

		sp 'makeplain dup <f10> "f10-GenPlain" btnt
		sp 'makeasm dup <f11> "f11-ASM" btnt

		32 26 gc.vbetween
		font-vard-8 home

		gridindexwords
		fonti cr
		dumpcompila cr

		verde vm.dump
		cr dup "%d" print cr
|		actual printword cr
		actual ind2nro printword cr
        <<ip @ dup 8 >> swap $ff and  "%h:%d " print
		cmano ;

:main
	'nombre "./nom/editor.nom" load drop
	'nombre tokencomp
	msg 1? ( drop saverror ; ) drop
	tokenpost
	msg 1? ( drop saverror ; ) drop
	startvm
	maindebug
	;

: 0 paper
	mark
	4 main
	empty ;
