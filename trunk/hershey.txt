| HERSHEY
| MCORNES 2009
|------------------------------
^reda4.txt
^libgui.txt

#dat #index
#numero #nverts


| ( char - int )
| 48 = '0', como se escribe un caracter ?
:ascii 32 =? ( drop 0 )( 48 - ) ;

| ( @ cnt -- val )
:num 0 >r ( +? )( swap c@+ ascii r> 10* + >r swap 1- ) 2drop r> ;

:start dup 5 num 'numero ! 5 + 3 num 'nverts ! ;

| problem here !!
#inc
:next dat 8 + nverts 2* + 1+ inc + 'dat ! ;

:lfremove c@+ 10 =? ( 1 'inc +! drop ; ) drop 1- ;

| ( @ -- dx dy @+2 )
:offset
	lfremove c@+ 82 - |20 *
	swap
	lfremove c@+ 82 - |20 *
	swap ;

:center_ | -- x y
	yc + swap xc + swap ;

#state | 0:up, 1:down ( x y -- )
:step center_ state 0 =? ( drop op 1 'state ! )( drop line ) ;

| ( x y -- )
| -50 0 -> lift pen
:pencmd 0? ( swap -50 =? ( 2drop 0 'state ! )( swap step ) )( step ) ;

| ignore left right limits
:draw
0 'state !
0 'inc !
dat 10 + nverts 1-
( +? )( swap offset >r pencmd r> swap 1- ) 2drop ;

|----- indice de letras
:num2 | @ cant -- @++ v
	0 >r
	( +? )(	swap
		c@+ ascii r> 10* + >r
		swap 1- )
	drop r> ;

:otro.. | adr -- adr++ ..(x y)..
	( c@+ 32 <? )( drop ) drop
	( c@+ 32 <? )( drop ) drop
	;

| pasar los n-vertices
:next.. | cnt adr -- adr
	swap ( +? )( swap
		otro..
		swap 1- ) drop
	;

|----- compilado a memoria
#index>
:,index | v --
	index> !+ 'index> ! ;

:makeindex
	index 'index> !
	dat
	( index <? )(
		( dup c@ 32 <? )( drop 1+ ) drop
		5 num2 drop | 0..4  nro char no lo uso
		3 num2 1- dup ,index | cntvertices
		swap 2 + dup ,index | cnt adr
		next..
		) drop
	;

:drawnro | nro --
	0 'state !
	0 'inc !
	3 << index +
	@+ swap @ swap
	( +? )( swap offset >r pencmd r> swap 1- )
	2drop ;


|------------------------------------------
:toxy
	cch 5 *>> ccy + swap
	ccw 5 *>> ccx + swap ;

:otroxy | adr -- adr++ x y
	c@+ ( 32 <? )( drop c@+ )
	82 - swap
	c@+ 82 -
	rot swap  ;

:sigxy | addr -- addr++
	otroxy 0 =? ( drop
		-50 =? ( drop otroxy
				toxy op swap 2 - ; )( 0 )
		)
	toxy line swap 1- ;

:draw2nro | nro --
	3 << index + @+ swap @
	otroxy
	toxy op swap 1-
	( +? )( swap sigxy )
	2drop ;

|------------------------------------------
#htoascii )( 1024 | 256 chars

#hojaini 0


:saverom
	clear

	'htoascii
	256 ( 1? )( 1- >r
		@+
		r> )
	2drop

	mem here over - "inc/fnthershey.inc" save
	;

:showdicc
	'htoascii
	256 ( 1? )( 1- >r
		@+ "%d " print
		r> )
	2drop
	;
|------------------------------------------

|------------------------------------------------
#cursorn
:cadacar
	verde
	[ 1.1 fzoom ; ] onIn
	2dup 3 << + hojaini 64 * +
	cursorn =? ( 0.1 pinpon 0.9 + fzoom gc.box )( 0.9 fzoom )
	[ dup 'cursorn !  ; ] onUp
	dup drawnro
	fonti dup "%d " print emit
	;

:hojacar
	8 8 'cadacar .table ;

:btnpag
	[ dup 'hojaini ! ; ] onUp
	hojaini =? ( amarillo )( gris 0.8 fzoom )
|	'irec v8draw
	5 sfont  cr cr
	dup 1+ 64 * 1- over 64 * "%d-%d" printc
	;

:pagcar
	4 'btnpag .vlist ;

|------------------------------------------------
:elijearchivo
	 key.push
|	savefnt
	"./f32/" dir
|	'nombre dlgfile
	"./" dir
|	loadfnt
	key.pop
	;

:accnombre
	'elijearchivo onUp
	$ff00 0 vbtn
	blanco 1 font
|	'nombre printc
	;
:acciones
	;

#guiedita
0.6 0.6 -0.1 -0.1 'hojacar
0.1 0.6 -0.45 -0.1 'pagcar
0.7 0.1 -0.15 0.45 'acciones
0.8 0.1 0.0 -0.45 'accnombre
0

:editascii
	mem dup 'dat !
	"hershey/hershey_roman.txt"
|	"hershey/hershey_japan.txt"
	load 'index !
	makeindex
	inikey
	'exit <esc>

	'exit <esc>
	show cls home verde scr fonti
		showdicc
		scr 'guiedita gui
		cmano ;

|------------------------------------------
:drawtest
	0 ( 24 <? )(
		20 over 1+ 32 * pos
		0 ( 60 <? )(
			over 60 * over + drawnro
			20 0 +pos
			1+ ) drop
		1+ ) drop
	;

:go
	mem dup 'dat !
	"hershey/hershey_roman.txt"
|	"hershey/hershey_japan.txt"
	load 'index !
	makeindex
	inikey
	'exit <esc>
	'next <f1>
	33
	show cls home verde
		dup "%d" print cr
|		index ( index 64 + <? )( >r
|			r@+ r@+ "dir:%w cnt:%d " print cr r> ) drop

		dat start
		nverts numero "numero : %d - nverts : %d" print
		scr blanco draw

		drawtest
|		fzoom 0.8 rojo |0 drawnro
		scr fonti 0 3 at
		verde
		0 draw2nro

		;

: editascii | go
	 "main.txt" run ;
