| HERSHEY
| MCORNES 2009
|------------------------------
^reda4.txt
^gui3.txt
^liboptdiv.txt

#dat #index
#numero #nverts

| ( char - int )
| 48 = '0', como se escribe un caracter ?
:ascii 32 =? ( drop 0 )( 48 - ) ;

| ( @ cnt -- val )
:num 0 >r ( +? )( swap c@+ ascii r> 10* + >r swap 1- ) 2drop r> ;

:start dup 5 num 'numero ! 5 + 3 num 'nverts ! ;

| problem here !!
#inc
:next dat 8 + nverts 2* + 1+ inc + 'dat ! ;

:lfremove c@+ 10 =? ( 1 'inc +! drop ; ) drop 1- ;

| ( @ -- dx dy @+2 )
:offset
	lfremove c@+ 82 - |20 *
	swap
	lfremove c@+ 82 - |20 *
	swap ;

:center_ | -- x y
	yc + swap xc + swap ;

#state | 0:up, 1:down ( x y -- )
:step center_ state 0 =? ( drop op 1 'state ! )( drop line ) ;

| ( x y -- )
| -50 0 -> lift pen
:pencmd 0? ( swap -50 =? ( 2drop 0 'state ! )( swap step ) )( step ) ;

| ignore left right limits
:draw
0 'state !
0 'inc !
dat 10 + nverts 1-
( +? )( swap offset >r pencmd r> swap 1- ) 2drop ;

|----- indice de letras
:num2 | @ cant -- @++ v
	0 >r
	( +? )(	swap
		c@+ ascii r> 10* + >r
		swap 1- )
	drop r> ;

:otro.. | adr -- adr++ ..(x y)..
	( c@+ 32 <? )( drop ) drop
	( c@+ 32 <? )( drop ) drop
	;

| pasar los n-vertices
:next.. | cnt adr -- adr
	swap ( +? )( swap
		otro..
		swap 1- ) drop
	;

|----- compilado a memoria
#index>
:,index | v --
	index> !+ 'index> ! ;

:makeindex
	index 'index> !
	dat
	( index <? )(
		( dup c@ 32 <? )( drop 1+ ) drop
		5 num2 drop | 0..4  nro char no lo uso
		3 num2 1- dup ,index | cntvertices
		swap 2 + dup ,index | cnt adr
		next..
		) drop
	;

:drawnro | nro --
	0 'state !
	0 'inc !
	3 << index +
	@+ swap @ swap
	( +? )( swap offset >r pencmd r> swap 1- )
	2drop ;


|------------------------------------------
:toxy
	h 5 *>> yc + swap
	w 5 *>> xc + swap ;

:otroxy | adr -- adr++ x y
	c@+ ( 32 <? )( drop c@+ )
	82 - swap
	c@+ 82 -
	rot swap  ;

:sigxy | addr -- addr++
	otroxy 0 =? ( drop
		-50 =? ( drop otroxy
				toxy op swap 2 - ; )( 0 )
		)
	toxy line swap 1- ;

:draw2nro | nro --
	3 << index + @+ swap @
	otroxy
	toxy op swap 1-
	( +? )( swap sigxy )
	2drop ;

|------------------------------------------------
#hojaini
#cursorn

:cadacar | n -- n+1
	verde
	[ 1.1 fzoom ; ] onIn
	dup hojaini 64 * +
	cursorn =? ( 0.1 pinpon 0.9 + fzoom gc.box )( 0.9 fzoom )
	[ dup 'cursorn !  ; ] onClick
	drawnro
|	fonti dup "%d " print dup emit
	1+
	;

|------------------------------------------------
:viewreal
	mem dup 'dat !
	"hershey/hershey_roman.txt"
|	"hershey/hershey_japan.txt"

	load 'index !
	makeindex
	inikey
	'exit <esc>

	[ 1 'hojaini +! ; ] <der>
	[ -1 'hojaini +! ; ] <izq>
	show
		clrscr
		0
		0.7 ( -0.7 >=? )(
			-0.7 ( 0.7 <=? )(
				0.1 0.1 fdim
				2dup swap fpos
				rot
				cadacar
				rot rot
				0.2 + ) drop
			0.2 - ) drop
		drop

		cflecha ;

|------------------------------------------
|------------------------------------------
:makeindex2
	index 'index> !
	dat
	( index <? )(
		dup ,index
		( c@+ 32 >=? )( drop ) drop
		( c@+ 32 <? )( drop ) drop 1-
		) drop
	;

|----------- parse signed int
:digito | c --  dig / -1
	$2f >? ( $3A <? ( $30 - ; ) )
	-1 nip ;

:?sint | adr -- adr' nro ; si adr=adr' => nro 0
	dup c@
	$2c =? ( drop 1+ dup c@ 	|, $2c
		$2c =? ( drop 0 ; )	|, $2c
		)
	$2b =? ( drop 1+ dup c@ )	|+ $2b
	$2d =? ( drop 1+ dup c@ [ neg ; ] >r )	| - $2d
	digito -? ( ; )
	drop
	0 swap ( c@+ digito 1+ +? )(	| 0 adr car
		1- rot 2* dup 2 << + |10*
		+ swap )
	drop 1- swap ;
	;

|--------------------------------
:otroxy2 | adr -- adr++ x y
	?sint swap ?sint rot swap
	;

:sigxy2 | addr -- addr++
	otroxy2 0 =? ( drop
		-64 =? ( drop otroxy2 toxy op swap 2 - ; )( 0 )
		)
	toxy line swap 1- ;

:drawnro2 | nro --
	2 << index + @
	?sint 2/ swap
	otroxy2 toxy op
	swap 1-
	( +? )( swap sigxy2 )
	2drop ;

:drawnro2v | n --
	2 << index + @ | inicio de car
	?sint azul
	fonti "%d" print
	verde
	?sint " %d" print
	?sint ",%d" print

	drop
	;

:cadacar2 | n -- n+1
	-? ( ; )
	dup hojaini 64 * +
	index> index - 2 >> >=? ( drop ; )
	drawnro2
|	fonti dup "%d " print dup emit
	1+
	;

:viewconv
	mem dup 'dat !
	"hershey/OrigFontData.txt"
	load 'index !
	makeindex2
	inikey
	'exit <esc>
	[ 1 'hojaini +! ; ] <der>
	[ -1 'hojaini +! ; ] <izq>
	show
		clrscr verde
		0
		0.7 ( -0.7 >=? )(
			-0.7 ( 0.7 <=? )(
				0.1 0.1 fdim
				2dup swap fpos
				rot
				cadacar2
				rot rot
				0.2 + ) drop
			0.2 - ) drop
		drop
		;

|------------------------------------------
|------------------------------------------
:makeindex3
	index 'index> !
	dat
	@+
	( 1? )( 1-
		swap dup ,index
		@+ 16 * +
		swap ) 2drop
	;
;
:convert
	$3ff0 =? ( 1 nip ; )
	$4000 =? ( 2 nip ; )
	$4008 =? ( 3 nip ; )
	$4010 =? ( 4 nip ; )
	$4014 =? ( 5 nip ; )
	$4018 =? ( 6 nip ; )
	$401c =? ( 7 nip ; )
	$4020 =? ( 8 nip ; )
	$4022 =? ( 9 nip ; )
	$4024 =? ( 10 nip ; )
	$4028 =? ( 11 nip ; )
	$402c =? ( 12 nip ; )

	-$3fb0 =? ( -64 nip ; )

	-$3fd8 =? ( -12 nip ; )
	-$3fda =? ( -11 nip ; )
	-$3fde =? ( -9 nip ; )

	-$3fe0 =? ( -8 nip ; )
	-$3fe4 =? ( -7 nip ; )

	-$3fe8 =? ( -6 nip ; )
	-$3fec =? ( -5 nip ; )
	-$3ff0 =? ( -4 nip ; )
	-$3ff8 =? ( -3 nip ; )
	-$4000 =? ( -2 nip ; )
	-$4010 =? ( -1 nip ; )

	;

:getint8 | adr .. adr`` nro
	@+ drop
	w@+ drop
	w@+ convert
	;

|--------------------------------
:otroxy3 | adr -- adr++ x y
	getint8 swap getint8 rot swap
	;

:sigxy3 | addr -- addr++
	otroxy3 0 =? ( drop
		-64 =? ( drop otroxy3 toxy op swap 2 - ; )( 0 )
		)
	toxy line swap 1- ;

:drawnro3 | nro --
	2 << index + @
	@+ swap
	otroxy3 toxy op
	swap 1-
	( +? )( swap sigxy3 )
	2drop ;

:drawnro3v | n --
	2 << index + @ | inicio de car
	@+
	fonti azul "%d" print verde cr
	getint8 "%h" print getint8 ",%h" print cr
	getint8 "%h" print getint8 ",%h" print cr
	drop
;

:cadacar3 | n -- n+1
	-? ( ; )
	dup hojaini 64 * +
	index> index - 2 >> >=? ( drop ; )
	drawnro3
|	fonti dup "%d " print dup emit
	1+
	;

:viewsmf
	mem dup 'dat !
	"hershey/Hershey.smf"
	load 'index !
	makeindex3
	inikey
	'exit <esc>
	[ 1 'hojaini +! ; ] <der>
	[ -1 'hojaini +! ; ] <izq>
	show
		clrscr verde
		0
		0.7 ( -0.7 >=? )(
			-0.7 ( 0.7 <=? )(
				0.1 0.1 fdim
				2dup swap fpos
				rot
				cadacar3
				rot rot
				0.2 + ) drop
			0.2 - ) drop
		fonti
		index> index - 2 >> "%d" print
		drop
		cflecha
		;

:
|viewreal | fuente real
|viewconv | fuente en ,,,,
viewsmf  | fuente en smf
	 "main.txt" run ;
