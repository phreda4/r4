| oldscreen
^reda4.txt
^graflib.txt
^font8x12i.txt

#:cols #:fils
#xc #yc

::oldscreen
	f12.lim 'fils ! 'cols ! 
	0 0
::gotoxy | x y --
	2dup 'yc ! 'xc !
:gxy	| sin mover cursor
	swap 3 << swap 	3 << dup 2/ + |	12 * 
	f12.at ;

::gotoxy+ | rx ry --
	swap xc 3 << + swap yc 12 * + f12.at ;

::videoinv
	f12.neg ;

:scrollup
	framev dup sw sh 12 - * 2 << + | ini fin
	sw 12 * 2 << rot | fin dif ini
	( pick2 <? )( 2dup + @ swap !+ ) 
	swap 2 >> ( 1? )( 1- 0 rot !+ swap ) 3drop ;

::cr
|	0 'xc ! yc 1+ fils >=? ( 0 nip ) 'yc ! xc yc gotoxy ;
	0 'xc ! yc 1+ fils >=? ( 1- scrollup ) 'yc ! xc yc gotoxy ;

::char | n --
	1 'xc +!
	xc cols >=? ( cr ) drop
	f12.c ;

::sprint | "" --
	( c@+ 1? )( char ) 2drop ;

|----------- ancho fijo
::lprint | "" cnt --
	( 1? )( 1- swap c@+ 0? ( drop 1- 32 ) char swap ) 2drop ;

::rprint | "" cnt --
	swap count neg rot + -? ( swap count rot + lprint ; )
:auxp
	( 1? )( 1- 32 char ) drop sprint ;

::cprint | "" cnt --
	swap count neg rot + -? ( swap count rot + lprint ; )
	dup 2/ | "" resto r2/
	dup >r - auxp
	r> ( 1? )( 1- 32 char ) drop ;

|------------
:emit | adr c -- adr  // %d %s %h %b 
	$25 <>? ( $a5 <>? ( char ; ) ) 
	drop c@+
	$7f and
	$73 =? ( drop swap sprint ; ) | s
	$64 =? ( drop swap n2str sprint ; ) | d
	$68 =? ( drop swap h2str sprint ; ) | h
	$62 =? ( drop swap b2str sprint ; ) | b
	$2e =? ( drop cr ; ) 		|%.=enter
	$25 =? ( char 1+ ; )
	char ;

::print | "" --
	( c@+ 3 >? )( emit ) 2drop ;

::fondo | cnt --
	ink@ swap gris
	3 << 12 xc 3 << yc 12 * vfill ink ; | ancho alto x y

::rpt | char cnt --
	( 1? )( 1- over f12.c ) 2drop ;

::cuadro | ancho alto --
	12 * swap 3 << swap xc 3 << yc 12 * vfill ; | ancho alto x y
::botonp | ancho alto --
	2dup cuadro
	yc + 12 * swap xc + 3 << swap xc 3 << yc 12 * cajad ;
::botonu | ancho alto --
	2dup cuadro
	yc + 12 * swap xc + 3 << swap xc 3 << yc 12 * cajau ;

|------------------- edita linea
#cmax 
#padi>	| inicio
#pad>	| cursor
#padf>	| fin

:lins  | c --
	padf> padi> - cmax >=? ( drop ; ) drop
	pad> dup 1- padf> over - 1+ cmove> 1 'padf> +!
:lover | c -- 
	$7f and
	pad> c!+ dup 'pad> !
	padf> >? ( 
		dup padi> - cmax >=? ( swap 1- swap -1 'pad> +! ) drop
		dup 'padf> ! ) drop
:0lin | --
	0 padf> ! ;
:kdel
	pad> padf> >=? ( drop ; ) drop
	1 'pad> +!
:kback
	pad> padi> <=? ( drop ; )
	dup 1- swap padf> over - 1+ cmove -1 'padf> +! -1 'pad> +! ;
:kder
	pad> padf> <? ( 1+ )  'pad> ! ; 
:kizq
	 pad> padi> >? ( 1- ) 'pad> !  ; 
	
#modo 'lins

::setinput | 'var max -- 
	'cmax ! dup 'padi> !
	( c@+ 1? )( drop ) drop 1- dup 
	'pad> ! 'padf> !
	'lins 'modo !
	[ key toasc modo exec ; ] <visible>
	[ modo 'lins =? ( 'lover )( 'lins ) 'modo ! drop  ; ] <ins>
	'kback <back>	'kdel <del>
	'kder <der>		'kizq <izq>
	[ padi> 'pad> ! ; ] <home>
	[ padf> 'pad> ! ; ] <end> 	;

::drawinput
	blink 1? ( ink@ modo 'lins =? ( rojo )( verde ) drop pad> padi> - xc + yc gxy f12.e ink ) drop
	xc yc gxy padi> sprint ;

|--------------------- edita texto
::settext
::drawtext ;

|--------------------- edita Nro
:nvis
	key toasc 
	$2d =? ( drop pad> neg dup 'pad> ! padi> ! ; )
	$30 <? ( drop ; ) $39 >? ( drop ; ) | solo numeros
	pad> abs 199999999 >=? ( drop ; ) drop | limite de 32 bits
	$30 - pad> 10 * + 
	dup 'pad> ! padi> ! ;

::setnro | 'var dec --
	'cmax ! dup 'padi> ! @ 'pad> !
	'nvis <visible>
	0 <ins>
	[ 0 dup 'pad> ! padi> ! ; ] <del>
	[ pad> 10 / dup 'pad> ! padi> ! ; ] <back>
	0 dup <der>	dup <izq>
	dup <home> <end>
	;
::drawnro 
	xc yc gxy blink 1? ( ink@ verde f12.e ink ) drop
	xc yc gxy pad> n2str cmax rprint ;

::clearinter
	0 dup <visible>
	dup <ins> dup <del> dup <back>
	dup <der>	dup <izq>
	dup <home> <end> ;
