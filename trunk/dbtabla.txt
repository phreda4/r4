| dbtabla.txt - PHREDA
| archivo de texto con los siguientes separadores
| ~ registro
| | campos
| _ multivalores
|-------------------
^parse.txt
|^trace.txt

|--- info
#:dbnombre )( 64
#:cntregs
#:cntflds

|--- control
#actreg
#indice0
#sumapos

|--- memoria
#inimem
#:inimemdb 0

|--- indice 128 campos
#flds )( 512	| nombre
#fldl )( 512	| largo
#fldc )( 512	| campos en cursor
#fldm )( 512	| memoria auxiliar

|||||||| accesos
::dbname | n -- adr	; titulo
	2 << 'flds + @ ;

::dblen | n -- largo	; largo
	2 << 'fldl + @ ;

::dbfld | n -- adr		; lugar en db
	2 << 'fldc + @ ;

::dbmfld | n -- adr		; lugar en memaux
	2 << 'fldm + @ ;

::dbreg | n -- adr
	2 << indice0 + @ ;

||||||||| recorrido
:>>.. | adr -- adr'
	( c@+ 32 <? )( 0? ( drop 1- ; ) drop ) drop 1- ;

:>>fld | reg fld -- reg'
	( 1? )( 1- swap
		>>f
		swap ) drop ;

||||||||| cargar tabla
:recorre
	( c@+ $7e <>? )(
		0? ( drop nip 1- ; )
		$7c =? ( 1 'cntflds +! rot pick2 swap !+ rot rot )
		drop ) drop nip | ind mem
	1 'cntflds +!
	;

::dbload | "app.db" --
	dup 'dbnombre strcpy
	0 dup 'cntregs ! 'cntflds !
	inimemdb 0? ( here dup 'inimemdb ! nip )
	swap load inimemdb =? ( drop ; )
	0 over ! 4+
	dup 'indice0 !
	inimemdb | <-- inicio
	dup 'flds !+ | ind mem fld
	swap					|----- campos
	recorre
	>>..
	dup rot !+ swap 		|---- registros
	( c@+ 1? )(
		$7e =? ( swap >>.. swap 1 'cntregs +! rot pick2 swap !+ rot rot )
		drop ) 2drop
	'inimem !
	0 'sumapos !
	'fldl 'flds 			|---- ancho de campos, mem aux
	0 ( cntflds <? )( >r
		@+ >>s ?0int
		sumapos inimem + r 2 << 'fldm + !
		dup 1+ 'sumapos +!
		rot !+ swap
		r> 1+ ) 3drop
	sumapos inimem + 'here !
	;


|||||||| tipos de campos
| T- Texto
| M- Memo
| S- Si/no
| 0- Entero
| 1- 1 decima
| 2- 2 decimales
| 3- 3 decimales
| 4- 4 decimales

|||||||| memoria auxiliar de registros
::clearreg
	'fldm cntflds ( 1? )( >r
		@+ 0 swap c!
		r> 1- )
	2drop ;

::getreg | nro --
	dup 'actreg !
	cntregs >=? ( drop ; )
	2 << indice0 + @
	'fldc swap
	cntflds ( 1? )( >r
		dup rot !+ swap
		>>f r> 1- )
	3drop ;

::dbcpy | dst scr --
	( c@+ 1? )(
		$5f =? ( 2drop 0 swap c! ; )
		$7c =? ( 2drop 0 swap c! ; )
		$7e =? ( 2drop 0 swap c! ; )
		rot c!+ swap ) rot c!+
	2drop ;

::dbset | str nro --
	dbmfld swap
	( c@+ 1? )( rot c!+ swap ) rot c! drop ;

::cpyreg | --
	actreg
	cntregs >=? ( drop clearreg ; )
	drop
	'fldm 'fldc
	0 ( cntflds <? )( >r
		@+ rot @+ rot dbcpy swap
		r> 1+ )
	3drop ;


|||||| copia en memoria
#p1 #p2
:,c1 p1 c!+ 'p1 ! ;
:,s1 ( dup c@ 1? )( ,c1 1+ ) 2drop ;

|||||| inserta registro
::dbinsert | --   ; inserta memoria al final del archivo
	indice0 4 - 'p1 ! | graba mem
	13 ,c1 10 ,c1
	0 ( cntflds <? )(
		1? ( "|" ,s1 )
		dup dbmfld ,s1
		1+ ) drop
	"~" ,s1 |13 ,c1 10 ,c1
	inimemdb p1 over - 'dbnombre save 	| copia a archivo
 	'dbnombre dbload | recarga??
	;

|||||| actualizacion (registro actual)
::dbupdate | --
	actreg
	cntregs >=? ( drop ; )
	2 << indice0 + @ | inicio de campo(inic)
	indice0 4 - 'p1 ! | ultimo

	here 'p2 !
	0 ( cntflds <? )(
		1? ( "|" ,s )
		dup dbmfld ,s
		1+ ) drop
	"~" ,s 13 ,c 10 ,c
	| desde
	here p2 - over +	| desde nde
	over				| desde nde de
	p1 over - 			| desde nde de cnt
	cmove> 				| desde
	p2 here over -		|
	cmove
| 	inimemdb memmap
|	inimemdb p1 over - here p2 - + 'dbnombre save
 	'dbnombre dbload | recarga??
	;

::dbdelete | nro --
	cntregs >=? ( drop ; )
	2 << indice0 + @ | inicio de campo(inic)

	drop
	;

||||||||| funciones comunes
::dbmax | campo -- valor
	0 dup >r
	( cntregs <? )(
		dup dbreg | campo nroreg reg
		pick2 >>fld | campo nroreg creg
		?0int r >? ( r> drop >r )( drop )
		1+ ) 2drop
	r> ;


||||||||| interaccion
::dbtitle | nro --
	dbname "%a" print ;

::dbtitlel | nro --
	dup dbname "%a" rot dblen boxprint ;

::dbedit | nro --
	dup dbmfld swap dblen getline ;

::dbprint | nro --
	dup dbmfld swap dblen boxprint ;

|||||||||
::printreg
	'fldc
	0 ( cntflds <? )( >r
		verde
		r dbtitle ": " print
		@+ "%a" blanco print cr
		r> 1+ )
	2drop ;

::editreg
	'fldm negro
	0 ( cntflds <? )( >r
		r dbtitle ": " print
		@+ r dblen getline cr
		r> 1+ )
	2drop ;

::editreg2
	'fldm negro
	0 ( cntflds <? )( >r
		r dbtitle ":" print cr
		@+ r dblen getline cr
		r> 1+ )
	2drop ;

||||||||||||||
|||| #lista act pag c1 c2 c3 .. 0
::dbgrilla | 'desc 'click --
	[ xymouse nip yc h 2/ - - rows h */ 1- pick2 ! ; ] onMove
	onClick

	verde oscuro linefill blanco
	dup 8 + ( @+ 1? )(
		dup $ff and dbname
		"%a" rot 8 >> boxprint
		) 2drop
	cr
	0 ( rows 2 - <? )(
		over 4+ @ over + cntregs >=? ( 3drop ; ) getreg
		over @ =? ( ink@ gris oscuro linefill ink )
		>r
		dup 8 + ( @+ 1? )(
			dup $ff and dbfld
			"%a" rot 8 >> boxprint
			) 2drop
		cr
		r> 1+ )
	2drop
	;

||||||||||||||
|||| #form c1 c2 .. 0

:tipo0 ;
:tipo1 dup $ff and dbprint ;
:tipo2 dup $ff and dbtitle cr dup $ff and dbedit ;

#tiposf 'tipo0 'tipo1 'tipo2 0 0 0 0 0 0 0 0 0 0 0 0 0 

::dbform | 'form --
	( @+ 1? )(
		dup 8 >> $f and 2 << 'tiposf + @ exec | dibujo
		$1000 and? ( cr ) drop
		)
	2drop ;

||||||||| debug
::dbdump
	'dbnombre print cr
|	cntflds "fld:%d " print cr
	0 ( cntflds <? )( 1+
		dup dbtitle "%a" pick2 dblen boxprint
		1+ ) drop
	cr
|	cntregs "reg:%d " print cr
	indice0
	0 ( cntregs <? )(
		swap @+ "%a" print cr
		swap
		1+ ) 2drop
	cr ;
