| new frame buffer
| PHREDA 2010
|-------------
^lib/gui3.txt
^lib/color.txt

#xa #ya

:.at | x y --
	'ya ! 'xa ! ;

:.fline | w --
	xa ya setxy dup 'xa +!
	( 1? )( 1- ink@ px!+ ) drop ;

:.fdeg | w --
	xa ya setxy dup 'xa +!
	( 1? )( 1- deg@+ px!+ ) drop ;

:.fbox | w h --
	( 1? )( 1-
		xa ya setxy
		over ( 1? )( 1-
			ink@ px!+
			) drop
		1 'ya +!
		) 2drop ;

:.fboxdh | w h --
	( 1? )( 1-
		xa ya setxy
		deg@+ pick2
		( 1? )( 1-
			over px!+
			) 2drop
		1 'ya +!
		) 2drop ;

:.fboxdv | w h --
	*deg
	( 1? )( 1-
		deg*
		xa ya setxy
		over
		( 1? )( 1-
			deg@+ px!+
			) drop
		1 'ya +!
		) 2drop ;

|---------------------------------
| formato de scanline
|	00 RRGGBB Entrada a paleta
|	01 UUU VVV v1 v2
|   01 RGB RGB col1 col2
|
| pixel de inicio esta ordenado
| la cantidad de pixels puede solaparse
|
|

#v1 #v2
| 1.- xini es > a xact.. rellenar lo que falta (o avanzar)
| 2.- calcular degrade (antes buscar colores)
| 3.- buscar solapamiento del siguiente
:x3	$ffffff and dup ink px!+ ;
:x1 dup $fff and 'v1 ! 12 >> $fff and 'v2 ! ;
:x2 v1 swap degrade! v2 ( 1? )( 1- deg@+ px!+ ) drop ;
:x0	$ffff and ( 1? )( 1- ink@ px!+ ) drop  ;

#xscan x0 x1 x2 x3
:renderscanline | 'scanline --
	( @+ 1? )(
		dup 22 >> $c and 'xscan + @ exec
		) 2drop ;


:render
	100 $000f00 degrade!
	100 100 .at 100 100 .fboxdh
	100 $fff0f0 degrade!
	200 100 .at 100 100 .fboxdh
	100 $c00ccc degrade!
	300 100 .at 100 100 .fboxdh

	100 $000fff degrade!

	100 400 .at 100 100 .fboxdv
	azul 200 400 .at 100 100 .fbox
	;

#scanline
$03000000
$000000f0
$01030030
$020ff000
$01040040
$020000ff
$000000f0
0

:main
	inigui
	'exit >esc<
	show clrscr
|		render

		sh $0000f0 degrade!
		0 0 .at sw sh .fboxdh
		10 ( 1? )( 1-
			0 over setxy 'scanline renderscanline
			) drop
		cmano ;

: main ;