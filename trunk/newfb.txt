| new frame buffer
| PHREDA 2010
|-------------
^lib/gui3.txt
^lib/color.txt
^lib/leebmp.txt

#xa #ya

:.at | x y --
	'ya ! 'xa ! ;

:.fline | w --
	xa ya setxy dup 'xa +!
	( 1? )( 1- ink@ px!+ ) drop ;

:.fdeg | w --
	xa ya setxy dup 'xa +!
	( 1? )( 1- deg@+ px!+ ) drop ;

:.fbox | w h --
	( 1? )( 1-
		xa ya setxy
		over ( 1? )( 1-
			ink@ px!+
			) drop
		1 'ya +!
		) 2drop ;

:.fboxdh | w h --
	( 1? )( 1-
		xa ya setxy
		deg@+ pick2
		( 1? )( 1-
			over px!+
			) 2drop
		1 'ya +!
		) 2drop ;

:.fboxdv | w h --
	*deg
	( 1? )( 1-
		deg*
		xa ya setxy
		over
		( 1? )( 1-
			deg@+ px!+
			) drop
		1 'ya +!
		) 2drop ;


|---------------------------------
| formato de scanline 2
| $0 cnt de pixels a llenar (*cnt)
| $1 UUU VVV v1 v2
| $2 RGB RGB col1 col2 (*v1)
| $3 RRGGBB Entrada a paleta (*1)
| $4 dire cant ? (*cnt)
| $5 direcc ct ? (*cnt)
| $6
| $7 fin de linea
|

#v1 #v2 #y

:r0	$ffff and ( 1? )( 1- ink@ px!+ ) drop  ;
:r1 dup $fff and 'v1 ! 12 >> $fff and 'v2 ! ;
:r2 v1 swap degrade! v2 ( 1? )( 1- deg@+ px!+ ) drop ;
:r3	$ffffff and dup ink px!+ ;
:r4 drop ;
:r5 drop ;
:r6 drop ;
:r7 drop
	0 y 1+ dup 'y ! setxy ;

#xscan r0 r1 r2 r3 r4 r5 r6 r7
:frameline | 'scanline --
	0 'y !
	( @+ 1? )(
		dup 22 >> $1c and 'xscan + @ exec
		) 2drop ;

|---------------------------------
| scanline

#scanline |)( 16384 | 16k
#scanline> 'scanline
:,scanline scanline> !+ 'scanline> ! ;
:scanline# scanline> scanline ; |- 2 >> ;
:clscanline scanline 'scanline> ! ;

|-----------------------------------
:render
	100 $000f00 degrade!
	100 100 .at 100 100 .fboxdh
	100 $fff0f0 degrade!
	200 100 .at 100 100 .fboxdh
	100 $c00ccc degrade!
	300 100 .at 100 100 .fboxdh

	100 $000fff degrade!

	100 400 .at 100 100 .fboxdv
	azul 200 400 .at 100 100 .fbox
	;


|	$00 cnt de pixels a llenar
|	01 UUU VVV v1 v2
|   10 RGB RGB col1 col2
|	11 RRGGBB Entrada a paleta
|-------------------------------------
| comprime runlength
#cnt
#colact

:px2tracer | adr+ val --
|	$f0f0f0 and
	$ffffff and | full
	colact =? ( 1 'cnt +! drop ; )
	colact $3000000 or ,scanline
	cnt 1 >? ( dup 12 << over $fff and or $1000000 or ,scanline dup ,scanline ) drop
:scanini | color --
	$ffffff and 'colact ! 1 'cnt ! ;

:scanlast
	colact $3000000 or ,scanline
	cnt 2 <? ( drop ; )
	,scanline ;
|	dup @ scanini 0 'cnt ! ;

|-------------------------------------

:px2tracer2
	 $ffffff and $3000000 or ,scanline ;

#imagen1

:testcomprime
	"bmp/cerezop.bmp" bmp.load 'imagen1 !
| 	"bmp/logo-clubpesca.bmp" bmp.load 'imagen1 !
	0 0 bmp.xyreal
	imagen1
	here 'scanline !
	clscanline
	dup @ scanini 0 'cnt !
	>r bmp.ancho bmp.alto
	( 1? )( 1-
		over ( 1? )( 1-
			r@+ px2tracer
			) drop
|		r @ scanlast
		$7000000 ,scanline
		)
	2drop rdrop
	scanlast
	0 ,scanline ;

|render
|sh $0000f0 degrade!
|0 0 .at sw sh .fboxdh

:main
	inigui
	'exit >esc<
	testcomprime
	show clrscr
		0 0 setxy scanline frameline
		0 rows 1- at
		verde scanline# "%d" print


		cflecha
;

: mark main  ;