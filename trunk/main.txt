| menu principal
| PHREDA 2010
|------------------

^r4/lib/reda4.txt
^r4/lib/fontt.txt
^r4/lib/fonth.txt
^r4/lib/font3d.txt
^r4/lib/gui.txt
^r4/lib/trazo.txt
^r4/lib/usetex.txt
^r4/lib/usebmr.txt

^r4/system/r4code.txt

^r4/lib/trace.txt

|--------- edit-code
#ncar
#nlin
#nombre )( 64

::cargaeditornl
	'ncar "mem/edit-code.mem" load drop ;

::grabaeditornl
	'ncar 72 "mem/edit-code.mem" save ;


|--------- estado
#ok " ok"
#mensaje 'ok
#lastrun )( 1024
#padin )( 1024

#actf
#actv
#ruta )( 1024
#ruta> 'ruta

#cntf
#cntv

#indexf )( 8192
#indexf> 'indexf
#indexv )( 8192
#indexv> 'indexv

:ruta.push | "" --
	ruta> strcpyl
	"/" swap 1- strcpyl
	1- 'ruta> !
	'ruta dir ;

:ruta<< | adr -- adr'
 	ruta> 2 -
	( 'ruta >? )( dup c@ $2f =? ( drop 1+ ; ) drop 1- ) drop
	'ruta ;

:ruta.pop | --
	ruta<< 0 over c! 'ruta> !
	'ruta dir ;

|----------- estado
:grabaestado
	'actf 1032 "mem/mp.mem" save ;

:restauraestado
	'actf "mem/mp.mem" load drop
	'ruta count + 'ruta> !
	'ruta dir
	;

|------------------------------
|-------- Dibujo
|------------------------------

:3dpos2gc
	0 0 0 project3d 'yc ! 'xc ! ;

:3dsize2gc
	0 0 0 project3d
	1.0 1.0 0 project3d
	rot - abs 'h ! - abs 'w ! ;

:3dbox
 	3dpos2gc
	gc.box
	gc2win
	home ;

:3dbtnd | 'acc 'dib --
	3dpos2gc
	btnd ;

:,string | "" -- ""'
	here swap ,s ,eol ;

|------------------
:filex | nro -- "name"
	2 << 'indexf + @ ;

:filev | nro -- "name"
	2 << 'indexv + @ ;

|------------------
:,cpyv | vol
	,string indexv> !+ 'indexv> ! ;

:,cpyf | file
	,string indexf> !+ 'indexf> ! ;

|---- genera indice y nombre

:refresh
	mark
	'ruta dir
	'indexv 'indexv> !
	0 ( dup vol 1? )( ,cpyv 1+ ) drop 'cntv !

	actv filev ruta.push
	'indexf 'indexf> !
	0 ( dup file 1? )( ,cpyf 1+ ) drop 'cntf !
	ruta.pop

	actf filex actv filev 'ruta
	"%s%s/%s" mprint 'lastrun strcpy
	empty
	;

|---------------

:clickf
	dup 'actf ! refresh ;

:clicknew
	;

:clickv
	dup 'actv ! refresh ;

:runprg
	grabaestado
	'lastrun run
	;

:editprg
	grabaestado
	cargaeditornl
	'lastrun 'nombre = 0? (
		'lastrun 'nombre strcpy
		0 'nlin ! 0 'ncar !
		) drop
	grabaeditornl

	"r4/system/edit-code.txt" run
	;
|----------------------------------
:actv+! | nro --
	actv +
	cntv >=? ( cntv 1- nip )
	-? ( 0 nip )
	'actv !
	refresh ;

:actf+! | nro --
	actf +
	cntf >=? ( cntf 1- nip )
	-? ( 0 nip )
	'actf !
	refresh ;

|----------------------------------
:helpmodo
	;

:memmapv
	d.get memmap
	;

#voc-system
"BYE" "HELP" "RESETVM" "MEMMAP"
( 0 )

#exe-system
'exit 'helpmodo 'resetvm 'memmapv
0

:nextw
    ( c@+ 32 >? )( drop )
	0? ( drop 1- )( drop )
	;

:pushnro | val --
	basen
	10 =? ( drop d.pushDec ; )
	2 =? ( drop d.pushBin ; )
	drop
	d.pushHex ;
	;

:palabraconsola | str -- str'
	( dup c@ 33 <? )( 0? ( nip ; ) drop 1+ )		| quitar espacios
|	$5e =? ( drop esinclude ; )			| $5e ^  Include
|	$7c =? ( drop escomentario ; )		| $7c |	 Comentario
|	$3A =? ( drop esdefinicion ; )		| $3a :  Definicion
|	$23 =? ( drop esvariable ; )		| $23 #  Variable

|	$22 =? ( drop escadena ; )			| $22 "	 Cadena

	$27 =? ( drop 1+ dup 				| $27 ' Direccion
		dup ?macro 1? ( 3drop "mACROnOTdIR" 'mensaje ! 0 ; ) drop
		?palabra 1? ( nip stepadr nextw ; ) 2drop
		"NOTdIR" seterror 3 - 0 ; )
	drop
	dup ?numero 1? ( drop pushnro nip ; ) drop
	dup ?fnumero 1? ( drop d.pushFix nip ; ) drop
	dup 'voc-system inupp? 1? ( 1- 2 << 'exe-system + @ exec nextw ; ) drop
	dup ?macro 1? ( stepmacro nextw ; ) drop
	dup ?palabra 1? ( stepword nextw ; ) drop
	2drop 0
	"??" 'mensaje !  ;

:correconsola
	'padin ( palabraconsola 0? ) drop
	0 'padin !
	;

|----------------------------------
:main
	inigui
	'exit >esc<
	'runprg <f1>
	'editprg <f2>
|	'newprg <f3>
	[ -1 actf+! ; ] <up>
	[ 1 actf+! ; ] <dn>
	[ -1 actv+! ; ] <pgup>
	[ 1 actv+! ; ] <pgdn>
	'correconsola <enter>
	refresh
	show clrscr
		scr |32 gc.top $00c gc.hfill
		font-vard-12-bold home cr2
		rojo
		sp sp 'exit "esc-Exit" btnt
		verde
		sp 'runprg "f1-Run" btnt
		sp 'editprg "f2-Edit" btnt
		violeta 'clicknew "f3-NEW" sp btnt
|		sp 'newprg "f3-New" btnt
|		violeta sp 'adddome "+Fold" btnt
|		rojo sp 'borractual "Del" btnt
|		sp sp 'runtimeerr "f9-RUNERR" btnt
|		sp 'confsis "f10-CONFIG" btnt
|		sp 'fullset "f11-FULL" btnt
|		26 gc.botton $ccc gc.hfill
		cr cr
		|---- carpetas
		0 ( cntv <? )(
			actv =? ( azul )( negro )
			'clickv
			over filev allow2cr
			8 sp btntf
			1+ ) drop cr cr

	   	|---- archivos
		0 ( cntf <? )(
			actf =? ( verde )( negro )
			'clickf
			over filex allow2cr
			16 sp btntf
			1+ ) drop

		cr cr

		blanco trazoIn

		256 gc.botton
		home verde dup " :R%d " print

		amarillo mensaje print
		blanco 'lastrun sp print
		cr ">" print 'padin 64 inputline cr

		verde vm.dump

		cmano ;

#mymem

:refreshfiles
	mymem 'here !
	texini
	'indexf
	( indexf> <? )(
		dup "media/tex/%a.tex" mprint texload
		( c@+ 1? )( drop ) drop
		)
	;

:	$0
	paper
	mark
	trazo.uso

	"r4" ruta.push
	restauraestado
	here 'mymem !
	4 main
	grabaestado
;
