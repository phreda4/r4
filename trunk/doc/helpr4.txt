;	| --	R: a -- Fin de palabra

(	)   )(  | Inicio, fin y Separador de bloque

[	]	| Inicio y Fin de definicion Anonima

0? 	| --		Es 0 el tope de la pila ?
+? 	| --		Es positivo el tope de la pila ?
-?	| --		Es negativo el tope de la pila ?
1? 	| --		Es distinto a 0 el tope de la pila ?
=?	| a b -- a	a = b ?
<?	| a b -- a	a < b ?
>?	| a b -- a	a > b ?
<=?	| a b -- a	a <= b ?
>=?	| a b -- a	a >= b ?
<>?	| a b -- a	a <> b ?
AND?	| a b -- a	a and b ?
NAND?	| a b -- a	a nand b ?

?? (   ) 			| IF
?? (   )(  )		| IF-ELSE
(   ?? )(   ) 		| WHILE
(   ?? ) 		| Un

EXEC  	| vector --  Llama al codigo del vector ( 0 no llama a nadie)

DUP 	| a -- a a
DROP 	| a --
OVER 	| a b -- a b a
PICK2 	| a b c -- a b c a
PICK3 	| a b c d -- a b c d a
PICK4 	| a b c d e -- a b c d e a
SWAP 	| a b -- b a
NIP		| a b -- b
ROT 	| a b c -- b c a
2DUP 	| a b -- a b a b
2DROP   | a b --
3DROP   | a b c --
4DROP   | a b c d --
2OVER	| a b c d -- a b c d a b
2SWAP	| a b c d -- c d a b

>R 		| a --      R: -- a
R> 		| -- a		R: a --
R		| -- a      R: a -- a
R+		| v --		R: a -- a+v
R@+		| -- v      R: a -- a+4
R!+		| v --		R: a -- a+4
RDROP	| --		R: a --

AND 	| a b -- c     c = a AND b
OR 		| a b -- c     c = a OR b
XOR 	| a b -- c     c = a XOR b
NOT  	| a b -- c     c = a NOT b
+ 		| a b -- c	c=a+b
- 		| a b -- c	c=a-b
* 		| a b -- c	c=a*b
/ 		| a b -- c	c=a/b
*/ 		| a b c -- d	d=a*b/c	resultado intermedio en 64 bits
*>>		| a b c -- d	d=(a*b)>>c	 resultado intermedio en 64 bits
<</		| a b c -- d	d(a<<c)/b  64 bits!
/MOD 	| a b -- c d	c=a/b  d=a resto b
MOD 	| a b -- c		c=a resto b
ABS		| a -- b		b=|a|
CLZ		| a -- b		count leanding zeros
SQRT	| a -- b		square root
NEG 	| a -- b		b=-a
1+ 		| a -- b		b=a+1
4+		| a -- b		b=a+4
1- 		| a -- b		b=a-1
2/ 		| a -- b		b=a/2
2* 		| a -- b		b=a*2
<< 		| a b -- c		c=a<<b
>> 		| a b -- c		b=a>>b (arrastra signo)

@ 		| a -- b		b=32(a)
C@ 		| a -- b		b=8 (a)
W@		| a -- b		b=16(a)
!		| v d --		32(d) = v
C!		| v d --		8(d) = v
W! 		| v d --		16(d) = v
+! 		| v d --		32(d)=32(d)+v
C+!		| v d --		8(d)=8(d)+v
W+!  	| v d --		16(d)=16(d)+v
@+		| d -- d+4 v	dword (32bits)
!+		| v d -- d+4
C@+		| d -- d+1 v	byte (8bits)
C!+		| v d -- d+1
W@+		| d -- d+2 v	word (16bits)
W!+		| v d -- d+2
MOVE	| de sr cnt --	Copia CNT dword de SR a DE
MOVE>   | de sr cnt --	Copia CNT dword de SR a DE (para atras)
CMOVE   | de sr cnt --	Copia CNT bytes de SR a DE
CMOVE>  | de sr cnt --	Copia CNT bytes de SR a DE (para atras)

MEM		| -- dir 				Direccion de inicio de memoria libre
DIR		| "foldername" ¬ñ-		Cambia la carpeta actual
FILE	| n -- "filename"		Nombre del archivo n
FSIZE	| n -- cnt				Tamanio del archivo
VOL		| n -- "foldername"		Nombre de la carpeta n
LOAD	| d "filename" -- e		Carga un archivo en memoria, E direccion de fin E-D bytes leidos
SAVE	| d n "filename" ¬ñ- 	Graba memoria D en un archivo, N bytes

UPDATE	| --		Actualiza las irqel raton, el teclado, sonido, etc
MSEC 	| -- a 		milisegundos del sistema
TIME 	| -- s m h 	hora minutos y segundos
DATE 	| -- d m a	dia mes y anio
END 	| --		Sale del :r4, finaliza TODO, apaga la maquina virtual

RUN  	| "nom" --	Carga, compila y ejecuta el archivo nom

SW 		| -- w		Ancho de pantalla
SH 		| -- h		Alto de pantalla
CLS		| --		Limpia pantalla
REDRAW  | --		Dibuja nuevo FRAME
FRAMEV	| -- m		Memoria de video
SETXY	| x y --    pone cursor grafico en x y
PX+!	| cant --   suma cant al cursor grafico
PX!+	| color --	pone color y avanza siguiente pixel
PX@		| -- color	obtiene color del punto

XFB 	| -- direccion
>XFB    | --		; copia a XFB
XFB>    | --		; copia de XFB

PAPER	| a ñ-		Asigna color de fondo
INK		| a --		Asigna color de dibujo
INK@	| -- a		color de dibujo
ALPHA 	| a --		Transparencia (canal alpha)

OP 		| x y ñ-	Punto de origen
LINE 	| x y ñ-	Traza linea
CURVE 	| x y x y ñ-	Traza curva
CURVE3 	| x y x y x y ñ-	Traza curva

PLINE 	| x y --	Traza l√≠nea poligono
PCURVE 	| x y x y --	Traza curva poligono
PCURVE3 | x y x y x y --	Traza curva poligono

POLI	| --		Traza pol√≠gono

FCOL	| c1 c2 --	2colores para degrade
FCEN	| x y --	centro de degrade
FMAT	| a b --	matriz de degrade

SFILL	| --		poligonos con color solido (ink)
LFILL	| --		poligono con degrade lineal
RFILL	| --		poligono con degrade radial (algo parecido..)

XYMOUSE | -- x y 	coordenadas de la pantalla del apuntador
BMOUSE	| -- b		estado del apuntado
IKEY!	| v --    	vector de irq del teclado
KEY		| -- s		ultima tecla pulsada (scancode)

CNTJOY	| -- cnt	cantidad de joysticks
GETJOY	| j -- a	direccion de los datos de joystick J

SLOAD	| "" -- pp	carga sonido .mp3,.ogg
SPLAY	| pp -- 	suena sonido
MLOAD	| "" -- mm	carga musica .xm
MPLAY	| mm --		suena musica

OPENURL	| url header buff -- buff/0		abre URL

DOCINI	| --                    prepara pagina para imprimir
DOCEND	| --                    imprime pagina
DOCMOVE	| x y --				ubica cursor
DOCLINE	| x y --				dibuja linea
DOCTEXT	| "tt" --				imprime texto
DOCSIZE	| "tt" -- w h			obtiene tama√±o de texto
DOCFONT	| size angle "font" --  elije fuente de letra
DOCBIT	| "file.bmp" x y --		imprime un bitmap (.bmp)
DOCRES	| -- xmax ymax     		retorna resolucion de impresora

SYSTEM	| "cmd" --			ejecuta cmd de sistema
