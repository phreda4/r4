| analisis profundo de cada palabra usada
| PHREDA 2010
|
| 00000000									Pila D ( -128 a 128)
|            00000000						Pila R
|                      0000000000FEDCBA		Flags
| A-01 0 accion 1 dato
| B-02 0 local 1 exportado
| C-04 0 un ; 1 varios ;
| D-08 0 sin calls 1 con calls
| E-10 0 no usas R(A) 1 usa R(A) .. R(A) es cuando R se usa como auxiliar
| F-20 0 nunca como direccion 1 alguna vez como direccion
|---------------------------------------------------------------
^r4token.txt

#nivel	0
#deltaD	0	| pila de datos
#deltaR	0	| pila de retorno
#flags	0

| dD dR ini esp
#deltainternos (
0 0 0 0 | 0
0 0 0 0 |:,,defc | n --  define codigo
0 0 0 0 |:,,defv | n --  define variable
1 0 8 0 |:,,litd | n --	numero decimal
1 0 8 0 |:,,lith | n --	numero hexa
1 0 8 0 |:,,litb | n --	numero binario
1 0 8 0 |:,,litf | n --	numero punto fijo
1 0 9 0 |:,,lits | n --	string
0 0 1 0 |:,,word | n --  word <---- debe ser calculado
1 0 3 0 |:,,var | n --  var
1 0 2 0 |:,,dword | n --  dir word
1 0 4 0 |:,,dvar | n --  dir var
)
#deltamacros (
0 0 0 0 |; | r:-1 pero veamos
0 0 6 0 |(
0 0 0 0 |)(
0 0 7 0 |)
0 0 0 0 |[
0 0 0 0 |]
0 0 0 0 |0? a -- a
0 0 0 0 |+? a -- a
0 0 0 0 |-? a -- a
0 0 0 0 |1? a -- a
-1 0 0 0 |=?  ab -- a
-1 0 0 0 |<?  ab -- a
-1 0 0 0 |>?  ab -- a
-1 0 0 0 |<=? ab -- a
-1 0 0 0 |>=? ab -- a
-1 0 0 0 |<>? ab -- a
-1 0 0 0 |AND?  ab -- a
-1 0 0 0 |NAND? ab -- a
-1 0 0 0 |EXEC  x/0 --
1 0 0 0 |DUP    a -- aa
-1 0 0 0 |DROP  a --
1 0 0 0 |OVER   ab -- aba
1 0 0 0 |PICK2  abc -- abca
1 0 0 0 |PICK3  abcd -- abcda
1 0 0 0 |PICK4  abcde -- abcdea
0 0 0 0 |SWAP   ab -- ba
-1 0 0 0 |NIP   ab -- b
0 0 0 0 |ROT	abc -- bca
2 0 0 0 |2DUP   ab -- abab
-2 0 0 0 |2DROP ab --
-3 0 0 0 |3DROP abc --
-4 0 0 0 |4DROP abcd --
2 0 0 0 |2OVER  abcd -- abcdab
0 0 0 0 |2SWAP  abcd -- cdab
-1 1 5 0 |>R    a -- R: -- a
1 -1 5 0 |R>    -- a R: a --
1 0 5 0 |R      -- a R: a -- a
-1 0 5 0 |R+    a -- R: b -- c
1 0 5 0 |R@+    -- a R: b -- c
-1 0 5 0 |R!+   a -- R: b -- c
0 -1 5 0 |RDROP	R: a --
-1 0 0 0 |AND
-1 0 0 0 |OR
-1 0 0 0 |XOR
0 0 0 0 |NOT
-1 0 0 0 |+
-1 0 0 0 |-
-1 0 0 0 |*
-1 0 0 0 |/
-2 0 0 0 |*/
-2 0 0 0 |*>>
0 0 0 0 |/MOD
0 0 0 0 |MOD
0 0 0 0 |ABS
0 0 0 0 |NEG
0 0 0 0 |1+
0 0 0 0 |4+
0 0 0 0 |1-
0 0 0 0 |2/
0 0 0 0 |2*
-1 0 0 0 |<<
-1 0 0 0 |>>
0 0 0 0 |@
0 0 0 0 |C@
0 0 0 0 |W@
-2 0 0 0 |!
-2 0 0 0 |C!
-2 0 0 0 |W!
-2 0 0 0 |+!
-2 0 0 0 |C+!
-2 0 0 0 |W+!
1 0 0 0 |@+
-1 0 0 0 |!+
1 0 0 0 |C@+
-1 0 0 0 |C!+
1 0 0 0 |W@+
-1 0 0 0 |W!+
-3 0 0 0 |MOVE
-3 0 0 0 |MOVE>
-3 0 0 0 |CMOVE
-3 0 0 0 |CMOVE>
1 0 0 0 |MEM
-1 0 0 0 |DIR
0 1 0 0 |FILE
0 1 0 0 |FSIZE
0 1 0 0 |VOL
-1 0 0 0 |LOAD
-3 0 0 0 |SAVE
0 0 0 0 |UPDATE
1 0 0 0 |MSEC
3 0 0 0 |TIME
3 0 0 0 |DATE
0 0 0 0 |END
-1 0 0 0 |RUN
1 0 0 0 |SW
1 0 0 0 |SH
0 0 0 0 |CLS
0 0 0 0 |REDRAW
1 0 0 0 |FRAMEV
-2 0 0 0 |SETXY
-1 0 0 0 |PX+!
-1 0 0 0 |PX!+
1 0 0 0 |PX@
1 0 0 0 |XFB
0 0 0 0 |>XFB
0 0 0 0 |XFB>
-1 0 0 0 |PAPER
-1 0 0 0 |INK
1 0 0 0 |INK@
-1 0 0 0 |ALPHA
-2 0 0 0 |OP
-2 0 0 0 |CP
-2 0 0 0 |LINE
-2 0 0 0 |CURVE
-2 0 0 0 |PLINE
-2 0 0 0 |PCURVE
0 0 0 0 |POLI
-2 0 0 0 |FCOL
-2 0 0 0 |FCEN
-2 0 0 0 |FMAT
0 0 0 0 |SFILL
0 0 0 0 |LFILL
0 0 0 0 |RFILL
-1 0 0 0 |TFILL
1 0 0 0 |TPEN
2 0 0 0 |XYMOUSE
1 0 0 0 |BMOUSE
-1 0 0 0 |IKEY!
1 0 0 0 |KEY
1 0 0 0 |CNTJOY
1 0 0 0 |GETJOY
0 0 0 0 |SLOAD
-1 0 0 0 |SPLAY
0 0 0 0 |MLOAD
-1 0 0 0 |MPLAY
|iSERVER	iCLIENT	iSEND	iRECV	iCLOSE

)

|------------- recorre cada palabra

#pilaint )( 1024
#pilaint> 'pilaint

:pushvars
	deltaD deltaR pilaint> !+ !+ 'pilaint> ! ;

:popvars
	pilaint> 8 - dup 'pilaint> !
	@+ 'deltaR ! @ 'deltaD !
	;

| adr adrt t tabla
:espal | palabra
	over 8 >> nro>mov @
	dup 16 << 24 >> 1+ 'nivel !
	dup 24 >> 'deltaR +!
	8 << 24 >> 'deltaD +!
	;
:esdpal | 'palabra
	1 'deltaD +!
	;
:esvar | variable
	1 'deltaD +!
	;
:esdvar | 'variable
	1 'deltaD +!
	;
:usaR
	$10 flags or 'flags ! | marca flag con R
	;

:apilae
	pushvars
	;

:desapilae
	popvars
	;

:escte | cte
	1 'deltaD +!
	;

:esctes | "cte"
	1 'deltaD +!
	;

#acct 0 'espal 'esdpal 'esvar 'esdvar 'usaR 'apilae 'desapilae 'escte 'esctes

:prosstoken | a -- a.
	@+ dup	| a. v v
	$ff and 2 << 'deltainternos +
	c@+ 'deltaD +!
	c@+ 'deltaR +!
	c@+ 2 << 'acct + @ exec
	2drop
	;

:resetvars | --
	0 'deltaD !
	0 'deltaR !
	0 'nivel !
	0 'flags !
	'pilaint 'pilaint> !
	;

:setvars | nro -- nro
	deltaR 8 <<
	deltaD $ff and or 8 <<
	nivel $ff and or 8 <<
	flags $ff and or
	over nro>mov !
	;

|----- analiza codigo
:anacode | nro cntlla -- nro
	drop
	resetvars
	dup nro>toklen
	( 1? )( 1- swap	prosstoken swap ) 2drop
	setvars
	;

|---- llamadas entre palabras
#pilapend>		| pila de pendientes

:addw | w --
	pilapend> !+ 'pilapend> ! ;

:addcall | n -- nant
	nro>calls dup @ dup 1+ rot ! ;

:useaddr | n --
	nro>info dup @ $1000 or swap ! ;

::getflags | n -- v
	nro>info @ $1000 and ;

:overcode | valor xx -- valor xx
	over 8 >> dup addcall 0? ( over addw ) 2drop ;

:overdire | valor xx -- valor xx
	over 8 >> dup addcall 0? ( over addw ) drop useaddr ;

:reccod | nrop -- nrop
	dup 5 << 'indicepal +
	dup 4+ @ swap 16 + @  | .. dir cnt
	( 1? )( 1- swap
		@+ dup $ff and
		8 =? ( overcode ) | call word
		9 =? ( overcode ) | var
		10 =? ( overdire ) | dir word
		11 =? ( overdire ) | dir var
		2drop swap ) 2drop
	;

:recdat | nrop -- nrop
	dup 5 << 'indicepal + 4+ @
	( @+ dup $ff and
		1 =? ( 0 nip ) | corta con defc
		2 =? ( 0 nip ) | corta con defv
		1? )( 	 | dirv n c
		8 =? ( overcode ) | call word
		9 =? ( overcode ) | var
		10 =? ( overdire ) | dir word
		11 =? ( overdire ) | dir var
		2drop )
	3drop
	;


|----------- indice de usadas
#indexw
#:cntw

::ind2nro | nroindex -- nroreal
	2 << indexw + @ ;

:makeindex
	here 'indexw !
	[ drop dup , ; ] diccmap
	here indexw - 2 >> 1- 'cntw !
	;

|--------- COMPILA TOKENS 2da PASADA
::tokenpost
	prog> 'here !
	|-------- arbol de llamadas
	mark
	cntwords dup addcall drop
	here !+ 'pilapend> !
	( pilapend> here >? )(
		4 - dup 'pilapend> ! @ | palabra a agregar
		dup 5 << 'indicepal + 8 + @
		1 and? ( drop recdat )( drop reccod )
		drop )
	drop
	empty
	|-------- indice de usadas
	makeindex
	|-------- analisis+profundo
	'anacode wordmap
	;
