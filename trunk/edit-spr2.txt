| Editor de nsprite
| PHREDA 2008
|--------------------------------------------------
^gui3.txt
^libsprite.txt
^trace.txt

^dlgfile2.txt
^dlgcolor2.txt

#modo 0
#etrazo 1
#policursor -1
#poini
#pofin
#lastnodo 0
#cursor 0
#colora $ff0000
#colorb $ff00
#coltipo 0
#colcen
#colmat
#zoom
#xd #yd
#xi #yi
#xl #yl
#grillamodo
#egrilla 2

#lugar
#nombre )( 64
#actual
#indpol )( $100 #indpol>
#dibujo )( $1000 #dibujo>
#trazo )( $1000 #trazo>
#hojas )( $10000 #hojas>
#indice )( $1000 #indice>

:angulo | p1 p2 -- ang
	over d>y over d>y - >r
	swap d>x swap d>y - r>
	atan2 ;

:cltrazo
	'trazo 0 over ! 'trazo> ! ;
:++trazo | p --
	trazo> 4 - @ =? ( drop ; )
	trazo> 8 - 'trazo >=? (
		@+ pick2 angulo >r
		@ over angulo r> - abs
		$a <? ( drop trazo> 4 - ! ; )
		$7f5 >? ( drop trazo> 4 - ! ; )
		)
	drop
:+trazo | p --
	trazo> !+ 0 over ! 'trazo> ! ;
:trazo!
	trazo> 4 - dup @ $f and rot or swap ! ;

:dibnodos | a--
	( @+ 1? )( >xy 2 box ) 2drop ;

:cldibujo
	'dibujo 0 over ! 'dibujo> !
	'indpol 0 over ! 'indpol> ! ;

:-dibujo | --
	-4 'dibujo> +! ;

:+dibujo | p --
	dibujo> !+ 'dibujo> ! ;
:0dibujo
	0 dibujo> ! ;

:,indpol
	indpol> !+ 'indpol> ! ;

:haceindice
	'indpol 'indpol> !
	'dibujo dup ,indpol
	( @+ 1? )( $f and
		$c >? ( over ,indpol )
		drop ) 2drop
	-4 'indpol> +!
	dibujo> indpol> !
	;

|--------------------------------------------------
#xmax #xmin #ymax #ymin

:setparam
	'trazo
	@+ d>xy
	dup 'ymin ! 'ymax !
	dup 'xmin ! 'xmax !
	( @+ 1? )( d>xy
		ymin <? ( dup 'ymin ! ) ymax >? ( dup 'ymax ! ) drop
		xmin <? ( dup 'xmin ! ) xmax >? ( dup 'xmax ! ) drop
		) 2drop
	xmax dup 2 >> - ymax dup 2 >> - xy>d 'colcen !
    xmin dup 2 >> - ymin dup 2 >> - xy>d 'colmat !
	;

:polsolido
	colcen 7 or +dibujo       | no los usa
	colmat 8 or +dibujo       | cuando genera
	colorb 4 << $c or +dibujo | deberia sacarlos
	colora 4 << $d or +dibujo
	;
:polldeg
	colcen 7 or +dibujo
	colmat 8 or +dibujo
	colorb 4 << $c or +dibujo
	colora 4 << $e or +dibujo
	;
:polrdeg
	colcen 7 or +dibujo
	colmat 8 or +dibujo
	colorb 4 << $c or +dibujo
	colora 4 << $f or +dibujo
	;

#tiposcol polsolido polldeg polrdeg

:cierropoligono
	setparam
	'trazo @ $fffffff0 and $a or +dibujo | agrego linea fantasma
	coltipo 2 << 'tiposcol + @ exec
	0dibujo ;

:cierrocurva
	setparam -dibujo
	'trazo @ $fffffff0 and $9 or +dibujo | agrego linea fantasma
	coltipo 2 << 'tiposcol + @ exec
	0dibujo ;

:cpdibujo
	1 'etrazo !
	0 'lastnodo !
	setparam
	trazo> 'trazo - 2 >> 3 <? ( drop cltrazo ; ) drop
	dibujo> indpol> !+ 0 over ! 'indpol> !
	'trazo ( @+ 1? )(
		dup $f and 5 =? ( 3 nip ) swap $fffffff0 and or
		+dibujo ) drop
	8 - @ $f and 4 =? ( cierrocurva )( cierropoligono ) drop
	dibujo> indpol> !
	cltrazo
	;

|--------------------------------------------------
#xcycwh 0 0 0 0

:savebox
	xc yc w h 'xcycwh !+ !+ !+ ! ;

:loadbox
	'xcycwh @+ 'h ! @+ 'w ! @+ 'yc ! @ 'xc ! ;

:drawdibujo
	loadbox
|	grillamodo 0? ( blanco gc.fbox ) drop
	'dibujo nsprite
	egrilla gris 2* rgrilla
	lastnodo 0? ( drop ; )
	blink 1? ( negro )( blanco ) drop
	@ >xy 4 box
	;

|--------------------------------------------------
:indot | x y x y --
	rot - dup * swap rot - dup * + | dx2+dy2
	64 <=? ( 1 )( 0 ) nip ; |

:tocanodopoli | x y -- x y nro/ 0
	poini ( pofin <? )( dup @
		dup $f and 8 >? ( 2drop )(
			drop swap >r
			>xy 2over indot 1? ( drop r> ; )
			drop r> )
		4+ )
	drop 0 ;

|--------------------------------------------------
#oxy

:nodomove
	drop dup
	d>xy yd + swap xd + swap xy>d swap $f and or over ! ;

:polimove | x y
	xy> oxy over 'oxy !
	dxy 'yd ! 'xd !
	poini ( pofin <? )(
		dup @ dup $f and
		$a >? ( 2drop )( nodomove )
		4+ ) drop
	;

:muevenodo
	>r xy> r @ $f and
	1 =? ( | si es op busco linea fantasma
		r ( @+ $f and $9 <? )( drop ) drop
		4 - pick2 over @ $f and or swap !
		)
	or r> ! ;


|-------- dibujo de cada nodo segun tipo
#ycen #xcen

:dd1 >xy 2 box ;
:dd2 >xy 3 cruz ;
:dd3 >xy 2 fbox ;
:dd4 >xy 3 cruz ;
:dd5 >xy 2 fbox ;
:dd6 >xy 3 cruz ;
:dd7 >xy 2dup 'ycen !+ ! 2 box ; | centro
:dd8 >xy 2dup 2 cruz op xcen ycen line ; | relativo

#acdd 0 dd1 dd2 dd3 dd4 dd5 dd6 dd7 dd8

:drawnodos
	poini ( pofin <? )( @+
		dup $f and 8 >? ( 2drop )( 2 << 'acdd + @ exec )
		) drop ;


|--------------------------------------------------
:medionodos | adr -- adr nv
	dup @ over 4 - @ d>xy rot
	d>xy rot + 2/ >r + 2/ r> xy>d ;

:+nodo | adr --
	dup 4+ swap dibujo> pick2 - 2 >> 1+ move>
	4 dup 'dibujo> +! 'pofin +! 0 dibujo> !
	;

:insprimero | adr --
	dup +nodo
	8 + medionodos 3 or swap 4 - ! ;

:inscurva | adr --
	dup +nodo
	dup 8 + medionodos 4 or swap 4 - !
	dup +nodo
	8 + medionodos 2 or swap 4 - !
	;

#accinsnodo 0 insprimero inscurva insprimero 0 0 0 0
|	7 =? ( 2drop inspoli ; )

:ins-nodo
	lastnodo 0? ( drop ; )
	dup @ $7 and
	2 << 'accinsnodo + @ 0? ( 2drop )( exec )
	haceindice
	;

|-------------------------
:-nodo | adr --
	dup 4+ dibujo> pick2 - 2 >> move
	-4 dup 'dibujo> +! 'pofin +! 0 dibujo> !
	;

:quitapoli | adr --
	drop
:del-poli
	poini pofin 4+ dibujo> over - 2 >> move
	pofin poini - 4+ neg 'dibujo> +! 0 dibujo> !
	0 dup dup 'poini ! 'pofin ! 'lastnodo !
	haceindice
	;

|-----------------------------------------------
:quitaylinea
	dup -nodo dup @ $fffffff0 and 3 or swap !
	;

:delnodo2 | adr --
	4+ dup @ $f and
	4 =? ( drop 4 - quitaylinea ; ) | curva real
	drop 4 - dup -nodo
	dup @ $fffffff0 and $a or swap ! | ultima
	;

:delnodo1 | adr --
	dup -nodo
	dup @ $f and
	2 =? ( over 4+ dup @ $fffffff0 and 3 or swap ! )
	8 >? ( drop quitapoli ; )
	drop
	dup @ $fffffff0 and dup 1 or pick2 ! | adr v
	swap ( @+ $f and $9 <? )( drop ) drop | v adr'
	4 - dup @ $f and rot or swap !
	;

:delnodo4
	4 - quitaylinea ;

#accdelnodo 0 delnodo1 delnodo2 -nodo delnodo4 0 0 0

:del-nodo
	lastnodo 0? ( drop ; )
	dup @ $7 and
	2 << 'accdelnodo + @
	0? ( 2drop ; )( exec )
	haceindice
	;

:deltrazo
	lastnodo 0? ( drop ; )
	0 over ! dup 'trazo> ! 4 -
	'trazo <? ( 0 nip 1 'etrazo ! )
	'lastnodo ! ;

|-------------------------
:acurva1 | adr --
	4+ dup @ $f and | el siguiente es
	2 =? ( drop quitaylinea ; ) | curva
	$a =? ( drop dup +nodo
			medionodos 2 or swap !+
			dup @ $fffffff0 and 9 or swap ! ; )
	drop dup +nodo
	medionodos 2 or swap !+
	dup @ $fffffff0 and 4 or swap !
	;

#acccurvn 0 'acurva1 'delnodo2 'acurva1 'acurva1 0 0 0

:curv-nodo | --
	lastnodo 0? ( drop ; )
	dup @ $7 and
	2 << 'acccurvn + @ 0? ( 2drop )( exec )
	haceindice
	;

|--- auxpolis
:tocopy | adr --
	'dibujo
:tocopyto | hast des --
	( over <? )( @+ , ) 2drop ;
:copyto | adr --
	( @+ 1? )( , ) , drop ;

:prevpoli | ad -- ad'
	( 'dibujo >? )( dup @ $f and
		$c >? ( drop 4+ ; )
		drop 4 - )  ;

:nextpoli | ad -- 'ad
	( dibujo> <? )( dup @ $f and $c >? ( drop ; ) drop 4+ ) ;

:abapoli
	poini 0? ( drop ; )
	'dibujo =? ( drop ; )
	dup 8 - prevpoli over =? ( 2drop ; ) | no hay otro atras
	clear
	dup tocopy	| poini pnex
	pofin 4+ pick2 tocopyto | poini pnex
	tocopyto
	pofin 4+ copyto
	0 ,
:recopy
	'dibujo mem ( @+ 1? )( rot !+ swap ) rot !+
	4 - 'dibujo> ! drop
	haceindice
	0 dup dup 'poini ! 'pofin ! 'lastnodo !
	;


|-----------------------------------------------
#curcola
#curcolb

:colordepoli
	poini 0? ( drop ; )
	( pofin <=? )( dup @ $f and
			$c =? ( over dup @ 4 >> 'colorb ! 'curcolb ! )
			$d =? ( over dup @ 4 >> 'colora ! 'curcola ! 0 'coltipo ! )
			$e =? ( over dup @ 4 >> 'colora ! 'curcola ! 1 'coltipo ! )
			$f =? ( over dup @ 4 >> 'colora ! 'curcola ! 2 'coltipo ! )
			drop 4+ ) drop ;

:elijecolor
	coltipo colora colorb
	dlgcolor
	'coltipo ! 'colora ! 'colorb !
	colora 4 << coltipo $d + or curcola 0? ( 2drop )( ! )
	colorb 4 << $c or curcolb 0? ( 2drop )( ! )
	;

:btncolor
	colorb colora vbtn
	'elijecolor onClick
	;

|--------------------------------------------------
:resetspr
	cldibujo
	cltrazo
	0 dup 'poini ! 'pofin !
	-1 'policursor !
	0 'colora !
	$ffffff 'colorb !
	1 'coltipo !
	1 'etrazo !
	0 'lastnodo !
	haceindice
	;

|--cursor ab
#xa #ya #xb #yb

:cur.clr	0 0
:cur.set	dup 'ya ! 'yb ! dup 'xa ! 'xb ! ;

|-- caja
:caja.ins
	xa xb =? ( drop ; ) ya yb =? ( 2drop ; )
	xy> 1 or +trazo
	xa yb xy> 3 or +trazo
	xb yb xy> 3 or +trazo
	xb ya xy> 3 or +trazo
	;

|-- elip
:elip.ins
	xa xb =? ( drop ; ) ya yb =? ( 2drop ; )
	yb ya - abs xb xa - abs
	>r >r r - 2dup
	2dup xy> 1 or +trazo |op
    swap r> r> dup >r swap >r  - swap 2dup xy> 2 or +trazo	|cp
	r + 2dup xy> 4 or +trazo |curve
	r + 2dup xy> 2 or +trazo |cp
	swap r> r> dup >r swap >r + swap 2dup xy> 4 or +trazo |curve
	swap r> r> dup >r swap >r + swap 2dup xy> 2 or +trazo |cp
	r - 2dup xy> 4 or +trazo |curve
	r> - xy> 2 or +trazo |cp
	xy> 4 or +trazo |curve
	rdrop
	;

|------------------------------------------------
:circlemode
	drawdibujo
	[ elip.ins cpdibujo cur.clr ; ] onClick
	[ xymouse 'yb ! 'xb ! ; ] onMove
	[ xymouse cur.set ; ] onDn
	blink 1? ( colora )( colorb ) ink drop
	xa xb =? ( drop ; ) ya yb =? ( 2drop ; )
	yb ya - abs xb xa - abs ellipse ;


|------------------------------------------------
:cajamode
	drawdibujo
	[ caja.ins cpdibujo cur.clr ; ] onClick
	[ xymouse 'yb ! 'xb ! ; ] onMove
	[ xymouse cur.set ; ] onDn
	blink 1? ( colora )( colorb ) ink drop
	xa xb =? ( drop ; ) ya yb =? ( 2drop ; )
	2dup 2dup op drop yb 2dup line nip xb swap 2dup line drop ya line line
	;

|------------------------------------------------
:trazomode
	drawdibujo
	[ cltrazo xymouse xy> 1 or +trazo ; ] onDn
	[ xymouse xy> 5 or +trazo ; ] onMove
	[ cpdibujo ; ] onClick
	blink 1? ( colora )( colorb ) ink drop
	'trazo nsprite
	;

|--------------------------------------------------
:nodomode
	drawdibujo
	[ trazo> 4 - 'lastnodo ! ; ] onClick
	[ xymouse xy> etrazo or +trazo
		etrazo 1 =? ( 5 nip ) 'etrazo !
		; ] onDn
	[ xymouse xy> trazo! ; ] onMove
	blink 1? ( colora )( colorb ) ink drop
	'trazo dup nsprite dibnodos
	;

|--------------------------------------------------
:editmode
	loadbox
	[ 0 'cursor ! ; ] onClick
	[ xymouse tocanodopoli 1? ( dup 'lastnodo ! ) 'cursor ! xy> 'oxy ! ; ] onDn
	[ xymouse cursor 1? ( muevenodo ; ) drop polimove ; ] onMove
	drawdibujo
	blink 1? ( negro )( blanco ) drop
    drawnodos
	;

|--------------------------------------------------
:vistamode
	[ xymouse 'yd ! 'xd ! ; ] onClick
	[ xymouse loadbox dup yd - 'yc +! 'yd ! dup xd - 'xc +! 'xd ! savebox ;	] onMove
	loadbox
	zoom 1.3 + sh 16 *>> dup 'w ! 'h !
	savebox
	drawdibujo
	;

|--------------------------------------------------
#tocado
#maxpoli

:policlick | n --
	dup @+ 'poini ! @ 4 - 'pofin !
	over 'policursor !
	0 'lastnodo !
	1 'modo !
	colordepoli ;

:polinuevo
	cpdibujo 1 'etrazo !
	-1 'policursor !
	0 'modo !
	haceindice ;

:nuevopoli
	'polinuevo onClick
	policursor  -1 <>? ( 0.8 blanco )( colorb colora vbtn
    	blink 1? ( verde )( amarillo ) drop
		1.0 ) fzoom drop
	2 font cr2  "*" printc ;

:cadapoli | n -- n
	maxpoli >? ( ; )
	maxpoli =? ( nuevopoli ; )
	policursor =? ( 1.0 )( 0.8 ) fzoom
	dup 2 << 'indpol +
    'policlick  onClick
	4+ @ dup 8 - @ 4 >> swap 4 - @ 4 >> vbtn | col1 col2 --
	policursor <>? ( ; )
	2 sfont cr2
	blink 0? ( negro )( blanco ) drop
	dup "%d" printc ;

:viewpolis
	| poner cantidad de poligonos
	modo 5 =? ( drop 'zoom vslide ; ) drop
	indpol> 'indpol - 2 >> dup 'maxpoli ! 1+
	5 max
	'cadapoli vlist ;

:eslinea	0 'modo ! ;
:escaja     2 'modo ! ;
:eselipse   3 'modo ! ;
:opczoom    5 'modo ! ;

:zoom1 	-0.5 'zoom ! ;
:zoom2 	-0.2 'zoom ! ;
:zoom3 	0.0 'zoom ! ;
:zoom4 	0.2 'zoom ! ;
:zoom5	0.4 'zoom !	;

|--------------------------------------------------
:btnvista
	'eslinea 'ifin btnd gc>>
	'zoom1 'imenos btnd gc>>
	'zoom2 'imenos btnd gc>>
	'zoom3 'istop btnd gc>>
	'zoom4 'imas btnd gc>>
	'zoom5 'imas btnd
	;

:btnnuevo
	rojo
	'exit 'ifin btnd gc>>
	verde
	'opczoom 'ilupa btnd gc>>
	'eslinea 'idibuja btnd gc>>
	'escaja 'istop btnd gc>>
	'eselipse 'irec btnd gc>>
	'deltrazo 'imenos btnd
	;

:btnnodos
	rojo
	'exit 'ifin btnd gc>>
	verde
	'del-nodo 'imenos btnd gc>>
	'ins-nodo 'imas btnd gc>>
	'abapoli 'iarr btnd gc>>
	'curv-nodo 'icurva btnd gc>>
	'del-poli 'imenos btnd
	;

:btntrazo 6
	rojo
	'exit 'ifin btnd gc>>
	'deltrazo 'iborrar btnd
	;

#btns 'btnnuevo 'btnnodos 'btnnuevo 'btnnuevo 'btntrazo 'btnvista

:botonherra
	modo 2 << 'btns + @ exec ;

:execescf1 | nro
	drop ;

#accmodos 'nodomode 'editmode 'cajamode 'circlemode 'trazomode 'vistamode

:viewdibujo
	modo 2 << 'accmodos + @ exec ;

:dumpdibujo
	0.8 0.9 fdim fonti
	verde
|	azul pofin poini "%d %d" print cr
	0 'dibujo ( dibujo> <? )(
		poini =? ( rojo )
		pofin =? ( verde )
		@+ "%h " print
		swap 1+ $7 nand? ( cr ) swap
		) 2drop
	cyan cr
|	;
|:aaa
	policursor "policursor:%d " print
	pofin poini "ini:%d fin%d " print cr
	coltipo colorb colora "colA:%h colB:%h tipo:%h " print cr
	modo "modo:%d" print cr
	etrazo "etrazo:%d" print cr
	lastnodo "lastnodo:%d" print cr
	indpol> 'indpol - "indpol:%d" print cr
	maxpoli "%d" print cr
	'nombre lugar "%d %s" print
 	;

:borrodib
	"Borro Dibujo ?" dlgsino
	1? ( resetspr ) drop
	;

|-----------------------------------
|0.1 0.5 -0.45 0 'viewestado

:editando
	inigui
	[ 0 execescf1 ; ] >esc<
	[ 1 execescf1 ; ] <f1>
	[ 2 execescf1 ; ] <f2>
	[ 3 execescf1 ; ] <f3>
	[ 4 execescf1 ; ] <f4>
	[ 5 execescf1 ; ] <f5>
	0 0 fpos
	-0.5 'zoom !
	zoom 1.3 + sh 16 *>> dup 'w ! 'h !
	savebox
	0 'modo !
	show clrscr
		dumpdibujo
		scr
		0.8 0.8 fdim 0 0 fpos
		viewdibujo
		0.1 0.1 fdim -0.9 0.9 fpos
		'iborrar 'borrodib btnd
		0.2 0.1 fdim 0.6 -0.9 fpos
		btncolor
		0.1 dup fdim
		-0.9 -0.9 fpos
		botonherra
		0.1 1.0 fdim 0.9 0 fpos
		viewpolis
		cflecha
		;

|--------------------------------------------------
|--------------------------------------------------
|--------------------------------------------------
|--------------------------------------------------
:load-car | --
	resetspr
	actual @ 0? ( drop ; )
	'dibujo swap zcopy 4 - 'dibujo> !
	-1 'policursor !
	1 'coltipo !
	haceindice
	;

:save-car | --
	hojas> dup actual ! 'dibujo zcopy 'hojas> ! ;

:newline 13 ,c 10 ,c ; | m#@$#!%@$#

#compnombre )( 64

:compone | ".ext" "n" -- "n.ext"
	 'compnombre swap
	( c@+ 1? )( rot c!+ swap )  2drop
	swap
	( c@+ 1? )( rot c!+ swap ) rot c!
	drop 'compnombre ;

|--- quita los tokens innecesarios ( los degrade y la matriz )
#buffopt )( $4000
#buffopt> 'buffopt

:printbuff
	0 'buffopt
	buffopt> >=? ( 2drop ; )
	"#:dib" ,s pick3 ,h 32 ,c
	( buffopt> <? )(
		@+ 0? ( " %d" )( " $%h" ) ,print
		swap 1+ 8 >? ( drop 0 newline )
		swap ) 2drop
	newline
	;

:procbuff | adr --
	'buffopt swap
	( @+ 1? )(
		dup $f and
		$d =? ( drop rot 12 - rot rot dup )
		drop
		rot !+ swap
		)
	rot !+ 'buffopt> !
	drop
	;

:save-code
	clear
	1 'indice
	( @+ 1? )(
		procbuff
		printbuff
		swap 1+ swap
		) 3drop

	newline
|	"#:cntdib " ,s dup ,n newline
|	"#:dibs" ,s 0
|	( over <? )( 1+ " 'dib" ,s dup ,h
|		dup $f and 0? ( newline ) drop
|		) drop
|	newline
	"./inc/" dir
	mem here over - ".inc" 'nombre compone save
	;

:copy-dibu
	actual @ 0? ( drop ; )
	hojas> indice> !+ 'indice> !
	hojas> swap zcopy 'hojas> ! ;

:ante-dibu
	actual 'indice =? ( drop ; )
	dup 4 - over @ over @ swap rot ! swap !
	-4 'actual +! ;

:post-dibu
	actual indice> 4 - >=? ( drop ; )
	dup 4+ over @ over @ swap rot ! swap !
	4 'actual +! ;

:borra-dibu
	actual @ 0? ( drop ; ) drop
	"Borro Dibujo ?" dlgsino
	1? ( actual dup 4+ zcopy 4 - 'indice> !
		0 'actual !
		) drop
;

|--------------------------------------------------
:cleardibujos
	'indice >r 128 ( 1? )( 0 r!+ 1- ) drop rdrop
	'dibujo 'dibujo> !
	'hojas 'hojas> !
	'indice dup 'indice> ! 'actual  ! ;

:load-dibu
	cleardibujos
	'hojas 'nombre load
	dup 'hojas> ! 0 swap 4+ !+ 0 swap !
	'indice 'hojas ( dup @ 1? )( drop dup
		rot !+ swap ( @+ 1? )( drop ) drop
		) 2drop 'indice> ! ;

:save-dibu
	clear
	'indice ( @+ 1? )( ( @+ 1? )( , ) , drop ) , drop
	mem here over - 'nombre save ;

#tactual

:editahoja
	actual 'tactual !
	load-car
	key.push
	editando
	key.pop
	save-car
	"./spr/" dir
	save-dibu load-dibu
	tactual 'actual !
	;

:eligearchivo
	save-dibu
	"./spr/" dir
	'nombre dlgfile
	load-dibu
	;


|--------------------------------------------------

:cadadib | n n -- n n
	2dup 3 << +   | x y nro
	dup
	2 << 'indice +
	actual =? ( blanco gc.fbox )
	[ dup 'actual ! ; ] onClick
	0.9 [ 1.2 nip ; ] onIn fzoom
	@ 1? ( nsprite )( drop )
	fonti verde
	1+ "%h" print
	;

:tabladib
	8 8 'cadadib table	;

:botonera
	rojo
	'exit 'ifin btnd gc>>
	verde
	'editahoja 'idibuja btnd gc>>
	'copy-dibu 'icopia	btnd gc>>
	'ante-dibu 'iizq btnd gc>>
	'post-dibu 'ider btnd gc>>
	'borra-dibu 'iborrar btnd gc>>
	'save-code 'irecicla btnd
    ;

:titulo
	$333333 $aaaaaa [ swap ; ] onIn  vbtn
	1 sfont negro "r4Spr:" print
	blanco 'nombre printc
	'eligearchivo onClick
	;

:menu-dibujos
	inigui
	'exit >esc<
	'editahoja <f1>
	'copy-dibu <f2>
	'ante-dibu <f3>
	'post-dibu <f4>
	'borra-dibu <f5>
	[ 4 'actual +! ; ] <der>
	[ actual 'indice >? ( 4 - ) 'actual ! ; ] <izq>
	'save-code <f6>
	'eligearchivo <esp>
	'editahoja <enter>
	show clrscr
		1.0 0.1 fdim
		0 0.9 fpos titulo
		0.1 dup fdim
		-0.9 -0.9 fpos botonera

		0.8 0.8 fdim
		0 0 fpos tabladib
		cmano
		;

|--------------------------------------------------
:	33 0 paper
	resetspr clear
	'nombre "./nom/edit-spr.nom" load drop
	"./spr/" dir
	load-dibu
	'indice 'actual !
	menu-dibujos
	"./spr/" dir
	save-dibu
	"./" dir
	'nombre count "./nom/edit-spr.nom" save
	"main.txt" run ;

