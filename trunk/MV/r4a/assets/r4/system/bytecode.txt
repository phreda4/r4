| Interprete de R4
| con bytecodes igual a MV en c
| PHREDA 2007
|---------------------------------
^r4/lib/trace.txt

#:idato 0	#:dato> 0
#:iprog 0	#:prog> 0
#:<<boot 0

#ierror 0
#finprog ( 79 ) | end

|--- Pilas
#PSP )( 1024
#RSP )( 1024

#TOS 0
#NOS 'PSP
#RTOS 'RSP

:errm | d d m -- 0
	nip nip 'ierror ! 0 ;

:apilaD | --
	NOS 'RSP >=? ( "Desborde Pila" errm ; ) drop ;

:desapilaD | --
	NOS 'PSP <? ( "Pila Vacia" errm ; ) drop ;

:apilaR | --
	RTOS 'TOS >=? ( "Desborde Pila R" errm ; ) drop ;

:desapilaR | --
	RTOS 'RSP <? ( "Pila R Vacia" errm ; ) drop ;

|--Pila
:iDUP	4 'NOS +! TOS NOS ! apilaD ;
:iDROP	NOS @ 'TOS !
:iNIP	-4 'NOS +! desapilaD ;
:i2DROP	NOS 4 - @ 'TOS ! -8 'NOS +! desapilaD ;
:i3DROP	NOS 8 - @ 'TOS ! -12 'NOS +! desapilaD ;
:i4DROP	NOS 12 - @ 'TOS ! -16 'NOS +! desapilaD ;
:iSWAP  NOS @ TOS NOS ! 'TOS ! ;
:iROT	TOS NOS 4 - @ 'TOS ! NOS @ NOS 4 - ! NOS ! ;
:iOVER	iDUP NOS 4 - @ 'TOS ! ;
:iPICK2	iDUP NOS 8 - @ 'TOS ! ;
:iPICK3	iDUP NOS 12 - @ 'TOS ! ;
:iPICK4	iDUP NOS 16 - @ 'TOS ! ;
:i2DUP	iOVER iOVER ;
:i2OVER	iPICK3 iPICK3 ;
:i2SWAP	TOS NOS @ NOS 4 - dup 4 - @ NOS ! @ 'TOS !  NOS 8 - ! NOS 4 - ! ;
|-- Internas
:i;		 RTOS @ nip -4 'RTOS +! desapilaR ;
:iLIT	iDUP dup @ 'TOS ! 4+ ;
:iADR	iDUP dup @ @ 'TOS ! 4+ ;
:iCALL	4 'RTOS +! dup 4+ RTOS ! @ apilaR ;
:iJMP	@ ;
|-- condicionales
:i0?	TOS 1? ( drop @ )( drop 4+ ) ;
:i+?	TOS -?  ( drop @ )( drop 4+ ) ;
:i-?	TOS 1+ +? ( drop @ )( drop 4+ ) ;
:i1?	TOS 0?  ( drop @ )( drop 4+ ) ;
:i=?	NOS @ TOS <>? ( drop @ )( drop 4+ ) iDROP ;
:i<?	NOS @ TOS >=? ( drop @ )( drop 4+ ) iDROP ;
:i>?	 NOS @ TOS <=? ( drop @ )( drop 4+ ) iDROP ;
:i<=?	NOS @ TOS >? ( drop @ )( drop 4+ ) iDROP ;
:i>=?	NOS @ TOS <? ( drop @ )( drop 4+ ) iDROP ;
:i<>?	NOS @ TOS =? ( drop @ )( drop 4+ ) iDROP ;
:iand?	NOS @ TOS nand? ( drop @ )( drop 4+ ) iDROP ;
:inand?	NOS @ TOS and? ( drop @ )( drop 4+ ) iDROP ;
|-- exec
:iEXEC	TOS iDROP 1? ( 4 'RTOS +! swap RTOS ! apilaR ; ) drop ;
:i>R		4 'RTOS +! TOS RTOS ! iDROP apilaR ;
:iR>		iDUP RTOS @ 'TOS !
:iRDROP		-4 'RTOS +! desapilaR ;
:iR		iDUP RTOS @ 'TOS ! ;
:iR+		TOS RTOS +! iDROP ;
:iR@+	iDUP RTOS @ @+ 'TOS ! RTOS ! ;
:iR!+	TOS RTOS @ !+ RTOS ! iDROP ;
:iAND	NOS @ TOS and 'TOS ! iNIP ;
:iOR		NOS @ TOS or 'TOS ! iNIP ;
:iXOR	NOS @ TOS xor 'TOS ! iNIP ;
:iNOT	TOS not 'TOS ! ;
:i+		NOS @ TOS + 'TOS ! iNIP ;
:i-		NOS @ TOS - 'TOS ! iNIP ;
:i*		NOS @ TOS * 'TOS ! iNIP ;
:i/		NOS @ TOS / 'TOS ! iNIP ;
:i*/		NOS 4 - @ NOS @ TOS */ 'TOS ! iNIP iNIP ;
:i*>>	NOS 4 - @ NOS @ TOS *>> 'TOS ! iNIP iNIP ;
:i/MOD	NOS @ TOS /mod 'TOS ! NOS ! ;
:iMOD	NOS @ TOS mod 'TOS ! iNIP ;
:iABS	TOS abs 'TOS ! ;
:iNEG	TOS neg 'TOS ! ;
:i1+		1 'TOS +! ;
:i4+		4 'TOS +! ;
:i1-		-1 'TOS +! ;
:i2/		TOS 2/ 'TOS ! ;
:i2*		TOS 2* 'TOS ! ;
:i<<	NOS @ TOS << 'TOS ! iNIP ;
:i>>	NOS @ TOS >> 'TOS ! iNIP ;
|--- mem
:i@		TOS @ 'TOS ! ;
:iC@		TOS c@ 'TOS ! ;
:iW@	TOS w@ 'TOS ! ;
:i!		NOS @ TOS ! iNIP iDROP ;
:iC!		NOS @ TOS c! iNIP iDROP ;
:iW!		NOS @ TOS w! iNIP iDROP ;
:i+!		NOS @ TOS +! iNIP iDROP ;
:iC+!	NOS @ TOS c+! iNIP iDROP ;
:iW+!	NOS @ TOS w+! iNIP iDROP ;
:i@+	iDUP 4 NOS +! TOS @ 'TOS ! ;
:i!+		NOS @ TOS ! iNIP 4 'TOS +! ;
:iC@+	iDUP 1 NOS +! TOS c@ 'TOS ! ;
:iC!+	NOS @ TOS c! iNIP 1 'TOS +! ;
:iW@+	iDUP 2 NOS +! TOS w@ 'TOS ! ;
:iW!+	NOS @ TOS w! iNIP 2 'TOS +! ;
|---sis
:iMSEC		iDUP msec 'TOS ! ;
:iTIME		iDUP iDUP iDUP TIME 'TOS ! NOS ! NOS 4 - ! ;
:iDATE		iDUP iDUP iDUP DATE 'TOS ! NOS ! NOS 4 - ! ;

:iSW		iDUP sw 2/ 'TOS ! ;
:iSH		iDUP sh 2/ 'TOS ! ;
:iFRAMEV	iDUP framev 'TOS ! ;
:iREDRAW
|			fonti src home rojo inter> 'inter - 2 >> "%d" print
			blanco  
			NOS 'RSP 'PSP "%d %d %d" print
			NOS 'RSP - 2 >> "%d" print
			redraw ;

:iEND		0 nip ;
:iRUN		0 nip ; | falta guardar nombre

:iUPDATE
	;

|:iTPEN		iDUP tpen 'TOS ! ;
:iXYMOUSE	iDUP iDUP xymouse 'TOS ! NOS ! ;
:iBMOUSE	iDUP bmouse 'TOS ! ;
:iKEY		iDUP key 'TOS ! ;
:iCNTJOY iDUP cntjoy 'TOS ! ;
:iGETJOY 	TOS getjoy 'TOS ! ;

:IJOY	iDROP ;
:ISON iDROP ;
:INET	iDROP ;
:iFFIRST	TOS ffirst 'TOS ! ;
:iFNEXT     iDUP fnext 'TOS ! ;
:iLOAD		NOS @ TOS load 'TOS ! iNIP ;
:iSAVE		NOS 4 - @ NOS @ TOS save i3DROP ;
:iAPPEND	NOS 4 - @ NOS @ TOS append i3DROP ;

:iMEM		iDUP dato> 'TOS ! ; | mem

:iOP			NOS @ TOS op i2DROP ;
:iLINE 		NOS @ TOS line i2DROP ;
:iCURVE 	NOS 8 - @ NOS 4 - @ NOS @ TOS curve i4DROP ;
:iCURVE3 	NOS 16 - @ NOS 12 - @ NOS 8 - @ NOS 4 - @ NOS @ TOS curve3 i2DROP i4DROP ;

:iPLINE 		NOS @ TOS pline i2DROP ;
:iPCURVE 	NOS 8 - @ NOS 4 - @ NOS @ TOS pcurve i4DROP ;
:iPCURVE3 	NOS 16 - @ NOS 12 - @ NOS 8 - @ NOS 4 - @ NOS @ TOS pcurve3 i2DROP  i4DROP ;

:iPOLI		poli ;
:iPAPER		TOS paper iDROP ;
:iINK		TOS ink iDROP ;
:iINKF		iDUP ink@ 'TOS ! ;
:iCLS		cls ;
:iALPHA	TOS alpha iDROP ;

:iMOVE		NOS 4 - @ NOS @ TOS move i3DROP ;
:iMOVE>	NOS 4 - @ NOS @ TOS move> i3DROP ;
:iCMOVE	NOS 4 - @ NOS @ TOS cmove i3DROP ;
:iCMOVE>	NOS 4 - @ NOS @ TOS cmove> i3DROP ;
:iSLOAD TOS sload 'TOS ! ;
:iSPLAY	TOS splay iDROP ;

#tablai 'i; 'iLIT 'iADR 'iCALL 'iJMP 'iEXEC								| 0..5
	'i0? 'i+? 'i-? 'i1? 'i=? 'i<? 'i>? 'i<=? 'i>=? 'i<>? 'iand? 'inand?	| 17
	'iDUP 'iDROP 'iOVER 'iPICK2 'iPICK3 'iPICK4 'iSWAP 'iNIP 'iROT		|18..26
	'i2DUP 'i2DROP 'i3DROP 'i4DROP 'i2OVER 'i2SWAP				|32
	'i>R 'iR> 'iR 'iR+ 'iR@+ 'iR!+ 'iRDROP							|39
	'iAND 'iOR 'iXOR 'iNOT											| 43
	'i+ 'i- 'i* 'i/ 'i*/ 'i*>> 'i/MOD 'iMOD 'iABS						| 52
	 'iNEG 'i1+ 'i4+ 'i1- 'i2/ 'i2* 'i<< 'i>>							| 60
	'i@ 'iC@ 'iW@ 'i! 'iC! 'iW! 'i+! 'iC+! 'iW+!							| 69
	'i@+ 'i!+ 'iC@+ 'iC!+ 'iW@+ 'iW!+								| 75

	'iMSEC 'iTIME 'iDATE 'iEND 'iRUN								| 80
	'iSW 'iSH 'iREDRAW 'iFRAMEV 'iUPDATE
	'iXYMOUSE 'iBMOUSE 'iKEY  'iCNTJOY 'iGETJOY
	'IJOY 'ISON 'INET
	'iPAPER 'iINK 'iINKF 'iCLS 'iALPHA
	'iOP 'iLINE 'iCURVE 'iCURVE3 'iPLINE 'iPCURVE 'iPCURVE3 'iPOLI |--- dibujo
	'iMEM 'iFFIRST 'iFNEXT
	'iLOAD 'iSAVE 'iAPPEND
	'iMOVE 'iMOVE> 'iCMOVE 'iCMOVE>
	'iSLOAD 'iSPLAY

::interpreta | -- ok / error
	'RSP 'RTOS ! 'finprog RTOS !	|....END
	'PSP 'NOS ! 0 NOS ! 0 'TOS !
	0 'ierror !
	<<boot 	( update 1? )( c@+ 2 << 'tablai + @ exec ) drop

	ierror ;
|		iprog <? ( "Sin Codigo" erri ; ) prog> >? ( "Sin Codigo" erri ; )

::dibujapila
	TOS NOS ( 'PSP >? )( swap "%d " print dup @ swap 4 - ) 2drop ;
::dibujapilar
	RTOS ( 'RSP >? )( dup @ "%h " print 4 - ) drop 	;

::dibujadato
	"%.dato:" print
	idato ( dato> <? )( c@+ "%d," print ) drop ;

::dibujaprog
	"%.prog:" print
	iprog ( prog> <? )( c@+ "%d," print ) drop ;