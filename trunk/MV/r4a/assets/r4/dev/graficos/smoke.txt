^r4/lib/gui.txt

#xres 200
#yres 200
#sizeb
#u0 #v0 #d0
#u1 #v1 #d1

:ram
	mark
	xres yres * 2 <<
	here dup 'u0 !
	over + dup 'v0 !
	over + dup 'd0 !
	over + dup 'u1 !
	over + dup 'v1 !
	over + dup 'd1 !
	'here !
	'sizeb !
	;


:render
	d0 >r
	yres ( 1? )( 1-
		0 yres pick2 - setxy
		xres ( 1? )( 1-
			r@+ px!+
			) drop
		) drop
	rdrop
	;

|-------------------------------
:caldiff | s adr --
	dup 4 - @
	over 4+ @ +
	over xres 2 << - @ +
	over xres 2 << + @ +
	0.0002 *.
	rot +
	0.0002 2 << 1.0 + 0.995 *.
	/.
	swap ! ;

:diffuse | source dest --
	xres 2 << +	4+ swap
	xres 2 << +	4+ swap
| 5*
	yres 2 - ( 1? )( 1-
		xres 2 - ( 1? )( 1-
			2swap
			2dup caldiff
			4+ swap 4+ swap
			2swap
			1- ) drop
		rot 8 + rot 8 + rot
		1- ) drop

	2drop
	;

|-------------------------------
#sou

:sxy | x y -- adr
	xres * + 2 << sou + ;

:advectuv | u v d y x -- u v d y x
	pick4 @ over 16 << swap -
	0.5 <? ( 0.5 nip ) xres 1- 16 << >? ( xres 1- 16 << nip ) | px
	pick4 @ pick3 16 << swap -
	0.5 <? ( 0.5 nip ) yres 1- 16 << >? ( yres 1- 16 << nip ) | px py
	over 16 >> over 16 >> sxy >r | px py  r:s
	$ffff and swap $ffff and swap | fx fy r:s
	r@+ 1.0 pick3 - *.
	r@+ pick3 *. +
	1.0 pick2 - *. |	(s[0] * (1 - fx) + s[1] * fx) * (1 - fy) +
	xres 2 - 2 << r+ | fx fy t
	r@+ 1.0 pick4 - *.
	>r rot r> r> @ *. +
	*. | 		(s[stride] * (1 - fx) + s[stride + 1] * fx) * fy;
	+
	pick3 !
	;

:advect | u v sou dest --  float *uu, float *vv, float *source, float *dest)
	swap 'sou !
	xres 2 << +	4+ rot
	xres 2 << +	4+ rot
	xres 2 << +	4+ rot
	1 ( yres 1- <? )(
			1 ( xres 1- <? )( | u v d y x
				advectuv
				>r >r
				4+ rot 4+ rot 4+ rot
				r> r>
			1+ ) drop
		>r 8 + rot 8 + rot 8 + rot r>
		1+ ) drop
	3drop
	;

|-------------------------------
:project | u v p div --    float *u, float *v, float *p, float *div)

	int x, y, k, l, s;
	float h;

	h = 1.0 / smoke->width;
	s = smoke->width;
	memset(p, 0, smoke->height * smoke->width);
	for (y = 1; y < smoke->height - 1; y++) {
		l = y * s;
		for (x = 1; x < smoke->width - 1; x++) {
			div[l + x] = -0.5 * h * (u[l + x + 1] - u[l + x - 1] +
						 v[l + x + s] - v[l + x - s]);
			p[l + x] = 0;
		}
	}

	for (k = 0; k < 5; k++) {
		for (y = 1; y < smoke->height - 1; y++) {
			l = y * s;
			for (x = 1; x < smoke->width - 1; x++) {
				p[l + x] = (div[l + x] +
					    p[l + x - 1] +
					    p[l + x + 1] +
					    p[l + x - s] +
					    p[l + x + s]) / 4;
			}
		}
	}

	for (y = 1; y < smoke->height - 1; y++) {
		l = y * s;
		for (x = 1; x < smoke->width - 1; x++) {
			u[l + x] -= 0.5 * (p[l + x + 1] - p[l + x - 1]) / h;
			v[l + x] -= 0.5 * (p[l + x + s] - p[l + x - s]) / h;
		}
	}

	;

|-------------------------------
:oneframe
	u0 u1 diffuse
	v0 v1 diffuse
	u1 v1 u0 v0 project
	u1 v1 u1 u0 advect
	u1 v1 v1 v0 advect
	u0 v0 u1 v1 project
	d0 d1 diffuse
	u0 v0 d1 d0 advect
	render
	;

:moves
	xymouse
	yres >? ( 2drop ; ) swap xres >? ( 2drop ; )
	swap yres * + 2 <<
	u0 over + rand8 swap +!
	v0 over + rand8 swap +!
	d0 over + rand8 swap +!
	drop ;

:main
	usogui
	show clrscr
		0 'moves guiDnMove
		oneframe
		cminiflecha
		'exit >esc< ;

: ram 33 main ;