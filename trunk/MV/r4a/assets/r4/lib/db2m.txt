| Replicador de base de datos por log v.1
| PHREDA 2011
| uso:
|	"db.db" "pathtonet/" "pathtolocalcopy/" dbrepli
|------------------------------------------
^r4/lib/db2.txt
^r4/lib/mem.txt

#pthmulti
#pthdb
#namelog )( 256
#namedbm )( 256
#namedb )( 256

:nameflag | -- "name"
	pthmulti "%sflag.user" mprint ;

:makenames | str -- str
	dup pthmulti "%s%s" mprint 'namedbm strcpy
	dup pthdb "%s%s.log" mprint 'namelog strcpy
	dup pthdb "%s%s" mprint 'namedb strcpy ;

|--------------------------
:copylm | -- ; copia local a multi
	mark
	here 'namedb load here =? ( drop empty ; ) 'here !
	'namedbm savemem
	empty ;

:copyml | -- ; copia multi a local
	mark
	here 'namedbm load here =? ( drop empty ; ) 'here !
	'namedb savemem
	empty ;

#mdb
#mlog

:nolog
	here 'namedbm load here =? ( drop copylm ; ) drop
	copyml ;

:nodbm
	copylm
	0 0 'namelog save ;

#indmem
#lasmem
#lasdb
#cntreg
#limite -1
#offset 0

:makeindex | --
	indmem mdb >>..
	dup rot !+ swap | registros 0
	( c@+ 1? )(
		$7e =? ( drop >>..
			dup rot !+ swap )( drop )
		) drop
	1- 'lasdb !
	dup indmem - 2 >> 1- 'cntreg !
	'lasmem !
	;

:insreg
	13 lasdb c!+
	pick2 2 + ?sint
	limite -? ( drop cntreg over - 'offset ! 'limite ! )( 2drop ) | correccion de insert
	dup >reg> over -
	0 pick3 pick2 + c!
	cmove
	makeindex ;

#aux

:updreg
	over 2 + ?sint
	limite -? ( drop )( >? ( offset + ) ) | ajuste por nuevos insert
	2 << indmem +
	lasmem >? ( 2drop ; ) @ | dir adr
	swap dup >reg> over - | adrn here ncnt
	pick2 dup >reg> 	| adr here ncnt adr adrf
	dup rot - 			| adr here ncnt adrf cntv
	pick2 swap -        | adr here ncnt adrf dif
	dup lasdb + 'aux !
	+? ( over + swap lasdb over - cmove> )( over + swap lasdb over - cmove )
	cmove	| memd s cnt
	0 aux c!
	makeindex ;

|-- recorre log y actualiza db
:updatedb
	-1 'limite !
	here mdb mlog - + 'indmem ! | igual espacio que log
	makeindex
	mlog ( >>..
		>fld> 1? ( dup c@
			$49 =? ( insreg ) | Insert
			$55 =? ( updreg ) | Update
			| Delete
			drop >reg> )
		0? ) drop
	mdb lasdb over - 'namedbm save
	mdb lasdb over - 'namedb save
	;

|----------------------------------------
:replicate | str -- str
	here 'mlog !
	here 'namelog load here =? ( drop nolog ; )
	0 swap !+ 'here !
	here 'mdb !
	here 'namedbm load here =? ( drop nodbm ; )
	( dup c@ $7e <>? )( drop 1- ) drop 1+
	0 swap !+ 'here !
	updatedb | copia a db
	0 0 'namelog save | borralog
	;

:waitflag | espera nameflag vacio o timeout
	0 ( here nameflag load here <>? )(
		500 update 2drop
		1+ 8 =? ( drop ; ) | timeout
		) 2drop ;

::dbrepli | db multi local --
	'pthdb ! 'pthmulti !
	waitflag
	"f" 1 nameflag save
	makenames
	mark
	replicate drop
	empty
	0 0 nameflag save ;
