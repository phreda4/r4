^r4/lib/show.txt
^r4/lib/gui.txt
^r4/lib/cursor.txt

#memini

:print2hex | nro --
	dup $f and $30 + $39 >? ( 7 + )
	swap 4 >> $f and $30 + $39 >? ( 7 + )
	emit emit ;

::memmap | inimem --
	'memini !
    show clrscr
		verde fonti home
		":r4trace " print cr cr cr cr cr blanco

		memini 0
		( rows 5 - <? )(
			over "%h" 7 cntprint ":" print
			swap
			dup 24 ( 1? )( 1- swap c@+ print2hex swap ) 2drop
			": " print
			24 ( 1? )( 1- swap c@+ 32 <? ( 33 nip ) emit swap ) drop
			cr
			swap 1+ )
 		2drop
		cflecha

		'exit >esc<
		'exit <f1>
		[ end ; ] <spc>
		[ 24 'memini +! ; ] <dn>
		[ -24 'memini +! ; ] <up>
		[ 24 rows 5 - * 'memini +! ; ] <pgdn>
		[ -24 rows 5 - * 'memini +! ; ] <pgup>
		;


#modod "( %d %d %d %d %d"
#modoh "( %h %h %h %h %h"
#modob "( %b %b %b %b %b"
#modof "( %f %f %f %f %f"

#modo 0
#modos 'modod 'modoh 'modob 'modof

::trace | --
	show
		sw 24 dim
		sw 2/ 12 pos
		negro gc.fbox
		fonti verde home
		":r4trace " print
		amarillo "F1-dec F2-hex F3-bin F4-fix F5-memmap | ESC-cont ESP-end" print cr blanco
		pick4 pick4 pick4 pick4 pick4
		modo 2 << 'modos + @
		print

	'exit <esc>
    'exit <f6>
	[ end ; ] <spc>
	[ 0 'modo ! ; ] <f1>
	[ 1 'modo ! ; ] <f2>
	[ 2 'modo ! ; ] <f3>
	[ 3 'modo ! ; ] <f4>
	[ dup memmap ; ] <f5>

		;

::=trace | nro --
	<>? ( ; ) trace ;

::log | "" --
	mprint count "log.txt" append ;