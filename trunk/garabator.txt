| Garabator :R4
| graficos vectorial
| PHReda
|---------------------------------
^reda4.txt
^medit.txt
^gui.txt
^files.txt
^sprites.txt
^inc/garabator.inc

#indice )( 512  | indice de cada hoja
#indice> 'indice
#actual 'indice
#hojas )( 65536 |32768	| todas las hojas
#hojas> 'hojas
#nombre )( 32
#dibujo )( 8192	| dibujo actual
#dibujo> 'dibujo

#poligono	)( 2048
#poligono>
#actpoligono
#tocado 0
#tocadoe 0 | nodo con cursor
|#xc #yc 
#cc
#color.act $ff00
#color.r #color.g #color.b
#etrazo
#poini	| 0 o (color4)
#pofin	
#xl #yl | limites
#hunidad 0
#xyhoja 0 0 0 0
#estad 0 
#colormouse 0
#vzoom 0 #xi 0 #yi 0

#coloresg $000000 $ff0000 $ff7f00 $ffff00 $7fff00 $00ff00 $00ff7f $00ffff $007fff $0000ff $7f00ff $ff007f $ff00ff $ff7fff $ffffff
|---- BOTONES
#iborrar ( -87 -62 -71 84 -7 118 57 86 73 -60 -7 -18 -87 -58 -78 -7 -26 73 -74 -7 -106 -87 -74 -55 -6 -47 -28 -7 12 33 -28 41 -4 1 28 41 52 25 76 -7 44 -39 76 -55 52 -15 28 -55 -4 0 )
#idibuja ( 81 -14 -90 7 -95 4 100 5 81 -12 -79 66 12 -1 86 -59 70 -73 0 )
#itrazo ( -103 66 -39 -44 33 36 73 -68 89 -52 41 76 -39 -12 -87 84 -103 68 0 )
#icaja ( -79 -78 84 85 -76 -75 0 )
#icirculo ( -78 -73 6 86 7 87 6 -74 7 0 )
#iedita ( -39 -6 -63 -90 -41 -25 -15 -18 -42 7 23 -18 -42 39 55 -10 28 54 39 23 102 -11 54 -25 -41 30 6 -65 -79 -10 -63 -18 -55 -26 -39 -2 -15 -62 -75 -116 -11 -60 0 )
#ipolis ( -39 -6 -63 -90 -41 -25 -15 -18 -42 7 23 -18 -42 39 55 -10 28 54 39 23 102 -11 54 -25 -41 30 6 -65 -79 -10 -63 -18 -55 -26 -39 -2 57 106 -75 -116 61 108 0 )
#ilupa ( -39 -110 39 -26 6 25 14 81 68 49 116 -7 44 -15 54 -33 -105 -26 -106 -33 -87 -30 30 -33 15 -26 -82 -33 -81 -26 0 )
#ireloj ( -78 -73 6 86 7 87 6 -74 7 -7 10 -47 -12 -39 -20 -7 -4 -60 13 12 -3 0 )
#ivacio ( -71 74 -66 7 79 54 45 -34 7 -33 78 -67 0 )
#illeno ( -71 74 -66 7 79 54 -71 76 0 )
#ipunto ( 98 -17 78 54 7 31 78 102 7 0 )
#icurva ( 33 -94 -95 6 33 102 -31 6 33 -90 0 )
#irecta ( -15 -94 100 21 -92 -11 0 )
#icopia ( -55 -70 -103 -4 -79 60 -27 -7 -4 -55 -68 49 -54 1 12 25 76 77 97 12 49 -52 0 )
#iizq ( 17 -30 -76 -90 7 -87 -12 -103 6 -87 22 1 100 23 86 36 85 103 22 -12 -26 87 21 0 )
#ider ( -94 89 -12 105 6 89 22 1 100 -9 86 36 -75 -89 22 -12 -26 -73 -11 -76 -90 7 0 )
#ifondo ( -103 -94 92 97 -92 -99 0 )
#isgri ( -111 -94 92 101 -92 -107 -103 -86 84 93 -84 -99 0 )
#i1gri ( -111 -94 92 101 -92 -107 -103 -86 -4 -11 -84 -99 2 84 -11 4 -99 -7 -86 93 -4 -3 -84 89 2 -3 84 93 4 0 )
#i2gri ( -103 -94 92 101 -92 -99 -95 -86 -44 -51 -84 -91 -45 -44 -3 -84 -43 3 -44 45 -84 5 91 -44 53 -84 93 -55 -38 -91 -4 -51 -36 -7 -6 -36 -43 -4 -3 41 -38 5 -4 45 -36 89 -6 53 -36 93 -4 49 34 4 93 36 53 1 2 45 36 5 4 -47 34 -3 4 -43 36 -95 2 -51 36 -91 4 -55 42 -91 84 -51 44 -7 82 -43 44 -3 84 41 42 5 84 45 44 89 82 53 44 93 84 0 )
#imueve ( -63 34 20 -11 68 -27 1 116 33 68 21 20 61 36 105 4 57 -28 -12 21 -60 37 1 -108 -31 -60 -11 -12 -59 -28 -111 4 -63 36 0 )
#isuma ( -15 -62 -12 -59 20 -11 68 21 20 69 -12 21 -60 -11 0 )
#iresta ( -47 18 -12 53 20 -43 0 )
#icurv ( -71 74 -66 7 79 54 45 -34 7 -33 78 -67 0 )
#iescala ( -79 -78 -28 -63 -44 -15 4 -63 52 -79 36 84 -27 -47 68 1 20 49 68 25 84 85 73 36 65 52 17 4 65 -44 73 -28 -76 37 49 -60 1 -12 -47 -60 -31 -76 -75 0 )
#irota ( -111 34 -71 28 -79 94 15 87 73 46 61 49 62 15 -41 -55 30 -15 36 -63 -36 -111 36 -55 -46 -67 -79 -98 -1 87 73 -26 105 -36 65 36 25 -36 57 -28 49 -66 -1 -41 -55 -42 0 )
#iarr ( -94 -95 4 -27 100 37 4 101 1 -92 0 )
#iaba ( 98 -95 4 -27 -92 37 4 101 -7 100 0 )
|----------------------------------------
#igrilla 'isgri 'i1gri 'i2gri 'i1gri 'i2gri
#inodo 'imueve 'isuma 'iresta 'icurv 'icaja 'icirculo
#ipoli 'imueve 'iescala 'irota
#iestado 'itrazo 'iedita 'ilupa 'icaja 'icirculo 'idibuja

#enodo 0
|------------------ reduce y agrega
:qs	| paxy axy -- qs
	>xy rot >xy rot - dup * >r - dup * r> + ;

:reduce | pxy --
	dibujo> 8 - 'dibujo <? ( drop ; ) 
	dup 4+ @ dup $3 and 1 =? ( 3drop ; ) drop
	swap @ dup $3 and 1 =? ( 3drop ; ) drop
	rot 2dup qs >r rot 2dup qs >r rot qs 				| pact q3    r: q1 q2
	dup dup * r> swap over dup * + r> swap over dup * + >r
	+ + dup * r> 2* - abs 	|$fffff | para d>xy
	$1ff <? ( -4 'dibujo> +! ) drop ;
	
:+trazo | nodo --    insertar
	reduce
:++trazo | n --
	dibujo> !+ 0 over ! 'dibujo> ! ;

:xytrazo | n --
	dibujo> 4 - dup @ $f and rot $fffffff0 and or swap ! ;

:refrescapoli
	'poligono >r
	'dibujo spr.clear
	'dibujo ( dibujo> <? )( @+ 
			$f and 4 =? ( over 4 - | si es cambio de color
|				dup calculacentroylimites
				r!+ ) drop
			) drop  
	r> dup 'poligono> !
	( 'poligono> <? )( 0 swap !+ )  | limpio resto entradas
	drop ;

|--------------------- Cargar&Grabar
:save-car | --
	hojas> dup actual ! 'dibujo zcopy 'hojas> ! ;
	
:newline 13 ,c 10 ,c ; | m#@$#!%@$#

#compnombre )( 64

:compone | ".ext" "n" -- "n.ext"
	 'compnombre swap
	( c@+ 1? )( rot c!+ swap )  2drop
	swap
	( c@+ 1? )( rot c!+ swap ) rot c! 
	drop 'compnombre ;

:save-code
	clear 
	0 'indice
	( "#:dibu" ,s 	swap 1+ dup ,h swap @+ 1? )(
		0 ( >r @+ 1? )( " $%h" ,print
			r> 1+ 8 >? ( drop 0 newline ) ) 
		32 ,c ,n newline drop rdrop
		) 3drop
	newline

|	"#:cntdibu " ,s dup ,n newline
|	"#:dibus" ,s 0 
|	( over <? )( 1+ " 'dibu" ,s dup ,h 
|		dup $f and 0? ( newline ) drop
|		) drop
|	newline
	"./inc/" dir
	mem here over - ".inc" 'nombre compone save 
	"./dibujos/" dir ;


|--- edita polis
#xd #yd

:indot | x y x y --
	rot - dup * swap rot - dup * + | dx2+dy2
	64 <=? ( 1 )( 0 ) nip ; | 

:toconodo | x y addr -- x y 0/point
	( @+ 1? )( 
|		dup $3 and 0? ( 2drop )( drop
		$3 nand? ( drop )( 
		swap >r >xy 2over indot 1? ( drop r> 4 - ; ) drop r> 
		) ) nip ;	

:cadanodo | adr --
	( @+ 1? )(
		|dup $3 and 0? ( 2drop )( drop >xy 2 box )
		$3 nand? ( drop )( >xy 2 box )
		) 2drop ;

:cadanodopoli | --
		poini ( pofin <? )( dup @ 
|			dup $3 and 0? ( 2drop )( drop >xy 2 box )
			$3 nand? ( drop )( >xy 2 box )
			4+ ) drop ;

:colorpoli | ad -- 'adc
	( 'dibujo >? )( dup @ $f and 4 =? ( drop ; ) drop 4 - ) ;

|----------------- cada poligono
:prevpoli | ad -- ad'
	( 'dibujo >? )( dup @ $3 and 0? ( drop ; ) drop 4 - )  ;
:nextpoli | ad -- 'ad
	( dibujo> <? )( dup @ $3 and 0? ( drop ; ) drop 4+ ) ;

:prevtrazo | ad -- ad'
	( 'dibujo >? )( dup @ $2 and 0? ( drop  ; ) drop 4 - ) 4+ ;
:nexttrazo | ad -- 'ad
	( dibujo> <? )( dup @ $2 and 0? ( drop ; ) drop 4+ ) ;

|---------
:poli.set | nodo --
	dup prevpoli dup 'poini ! @ 4 >> 'color.act ! 
	4+ nextpoli 'pofin ! ;	

:del-poli 
	poini 0? ( drop ; )
	pofin zcopy 4 - 
	0 over ! 'dibujo> !
	actpoligono 0? ( 'poini ! 0 'etrazo ! 0 'estad ! ; )
	1- dup 'actpoligono ! 2 << 'poligono + @ 4+ poli.set  
	;

:clearselpoli
	0 dup 2dup 'poini ! 'pofin ! 'tocado ! 'tocadoe ! ;

:copy-poli 
	pofin 0? ( drop ; )
	poini 2dup dibujo> over - 2 >> move> - 'dibujo> +! 0 dibujo> !
	poini poli.set ;

:erase-draw  | --
	0 'etrazo !
	0 'estad !
	'dibujo 0 over ! 'dibujo> ! 
	0 'tocado ! 
	clearselpoli
	color.act 4 << 4 or ++trazo 
	poligono> 'actpoligono ! 
	;

:load-car | --
	actual @ 0? ( drop erase-draw ; )
	'dibujo swap zcopy 4 - 'dibujo> ! 
	clearselpoli
	0 'tocado !
	-1 'color.act !
	'dibujo ( @+ 1? )( dup $f and 4 =? ( drop 4 >> 'color.act ! )( 2drop ) ) 2drop
	color.act -1 =? ( $ff dup 'color.act ! 4 << 4 or ++trazo ) drop	
	;

|--- auxpolis
:tocopy | adr -- 
	'dibujo 
:tocopyto | hast des --
	( over <? )( @+ , ) 2drop ;
:copyto | adr --
	( @+ 1? )( , ) , drop ;

#npoini 
:abapoli
	poini 0? ( drop ; )
	'dibujo =? ( drop ; )
	dup 4 - prevpoli over =? ( 2drop ; ) | no hay otro atras
	-1 'actpoligono +!
	dup 'npoini !
	clear | poini prev
	dup tocopy	| poini pnex
	pofin pick2 tocopyto | poini pnex
	tocopyto 
	pofin copyto
	0 ,
:recopy
	'dibujo mem ( @+ 1? )( rot !+ swap ) rot !+ 4 -  'dibujo> ! drop
	npoini poli.set
	;


:tocanodopoli | x y -- x y nro/ 0
	poini ( pofin <? )( dup @ 
		dup $3 and 0? ( 2drop )( drop
		swap >r
		>xy 2over indot 1? ( drop r> ; ) drop r> )
		4+ ) 
	drop 0 ;

:tocapoli | -- pro/0 no
	 'poligono poligono> 1- 2 << +
	poligono> ( 1? )( 1- >r
		dup @ 1? (  4 >> colormouse =? ( drop rdrop ; ) ) drop
		4 - r> ) 2drop 0 ;

#oxy
|---------------------------
:poli.move | x y
	xy> oxy over 'oxy !
	dxy 'yd ! 'xd !
	poini ( pofin <? )( 
		dup @ dup 3 and 0? ( 2drop )( drop dup
		d>xy yd + swap xd + swap xy>d swap $f and or over ! )
		4+ ) drop
	;

|--- Color
:2.h | n --
	$10 <? ( "0" print ) "%h" print ;

:clcolor
	*? 1? ( -2 )( -1 ) nip dup +dim
	color.act ink gc.frod
	8 6 ttext 2 5 at |negro 4 1 ptofill	negro "." prints 
	color.r rojo 2.h color.g verde 2.h color.b azul 2.h ;

|--- trazo
:coldraw | nro --
	2 << 'coloresg + @ ink gc.fbox ;
	
:colclick | nro --
	2 << 'coloresg + @ dup $ff and 'color.b ! dup 8 >> $ff and 'color.g ! 16 >> $ff and 'color.r ! ;

|-------------Grilla y dibujo de edicion
:vista.draw ;
	
:vista.calc | x y ev --  | 0=up 1=move 2=down
	0? ( 3drop ; ) 
	1- 0? ( drop dup yd - 'yi +! 'yd ! dup xd - 'xi +! 'xd ! ; ) drop
	'yd ! 'xd ! ;

:hajusta
	0 'vzoom ! 
	13 sh 16 */ dup 'hunidad !
	sw 2/ 'xi ! sh 2/ 'yi ! 2/ xi over - 'xl ! yi swap - 'yl ! ;
	
:hset 
	hunidad vzoom 10 + 10 */ dup >r 
	2/ yi over - yl >? ( yl - neg 'yi +! yl )
	xi rot - xl >? ( xl - neg 'xi +! xl )
	over r + yl hunidad + <? ( yl hunidad + - neg 'yi +! yl hunidad + )
	over r> + xl hunidad + <? ( xl hunidad + - neg 'xi +! xl hunidad + )
	2swap 'xyhoja !+ !+ !+ ! ;

#grillamodo 0
#egrilla 0

:drawmem
	refrescapoli
	hset 'xyhoja mem>dimpos
	grillamodo 0? ( blanco gc.fbox ) drop
	'dibujo sprite
	egrilla gris 2* rgrilla 
	;

:elijecolor
	0 'etrazo !
	.page
	color.act dup $ff and 'color.b ! dup 8 >> $ff and 'color.g ! 16 >> $ff and 'color.r !
	estad 1 <>? ( 0 'tocado ! ) drop
	'xyhoja .pos 'vista.calc 'vista.draw .ug	
	12 12 .table
	0 6 .at 8 6 .to 'clcolor 0 .xbtn 
	1 7 .at 6 1 .to 'coldraw 'colclick 15 1 .btabla	
	0 11 .at
	rojo oscuro 'ifin 'exit dup >esc< .sbtn .>
|	verde oscuro 'cllipo  'xlipo dup <f1> .xbtn
	1 8 .at 6 1 .to 
	rojo $ff 'color.r .hsli .\ verde $ff 'color.g .hsli .\ azul $ff 'color.b .hsli
	.show cls drawmem
		color.r 16 << color.g 8 << color.b or or 
		dup 'color.act ! 4 << 4 or poini 1? ( ! )( 2drop ) ;
		
:xcolor
	elijecolor 
	poini 1? ( color.act 4 << 4 or swap ! ; ) drop
	dibujo> 4 - @ $f and 4 =? ( -4 'dibujo> +! ) drop
	color.act 4 << 4 or ++trazo 
	; 

:polis.calc | x y ev --  | 0=up 1=move 2=down
	0? ( 3drop ; )
	1- 0? ( drop poli.move ; ) |xy> tocado 0? ( 2drop ; ) @ $f and or tocado ! ; )
	drop 
	tocapoli 1? ( poli.set )( drop )
	xy> 'oxy !
	 ;
	
:polis.draw
	|'dibujo cadanodo
	blink 1? ( negro )( blanco ) drop
|	pofin poini spriteborder | adrf adr --
	;	

| botones de colores por poligono
:oscu | n - n
	2/ $7f7f7f and ;
:acla | n - n
	2* $010101 or ;

:getcolor | nro -- color
	dup 2 >> 2 << 'coloresg + @ 
	swap 
	1 and? ( swap oscu swap )
	2 and? ( swap oscu oscu swap  ) 
	drop
	;

:drawcolor | nr --
	getcolor ink gc.fbox ;

:clickcolor | nro
	getcolor 'color.act ! 
	estad  1 =? ( drop 
		poini 1? ( color.act 4 << 4 or swap !  )( drop )
		; ) drop
:addcolor
	0 'etrazo !
	dibujo> 4 - @ $f and 4 =? ( -4 'dibujo> +! ) drop
	color.act 4 << 4 or ++trazo  	
	poligono> 'actpoligono ! ;

:delast 
	dibujo> 
	'dibujo <=? ( drop ; ) 
	4 - 0 over ! 'dibujo> ! 
|	dibujo>  | control de donde quedo 	
	poligono> 'actpoligono ! 
	;

:delastpol
	dibujo> 
	'dibujo <=? ( drop ; ) 
	4 - ( dup @ $2 and 1? )( drop 4 - ) drop | busco 1 o 0 $2 and 0?
	'dibujo <? ( 'dibujo nip )
	0 over ! 'dibujo> !  	
	poligono> 'actpoligono ! 
	;

|----------------------------------------------
:drawpolig | n --
	poligono> >? ( drop ; )

	actpoligono =? ( blink 0? ( 
		[ estad 0? ( 'dibu11 )(  'dibu6 ) nip  sprite ; ] >r 
		) drop )

	2 << 'poligono + @ 
	0? ( drop ; )
	@ 4 >> ink gc.fbox
	;

:modorec
	poligono> 'actpoligono !
	0 'tocado ! 0 'estad ! addcolor ;

:clickpolig | nro --
	0 'tocadoe !
	poligono> >? ( drop modorec ; ) 
	dup
	'actpoligono ! 2 << 'poligono + @ 0? ( drop ; )
	4+ poli.set  
	pofin dibujo> >? ( drop modorec ; ) drop
	1 'estad ! ;


|-- trazo continuo
:trazo.cal | x y ev --  | 0=up 1=move 2=down
	0? ( 3drop ; ) | up
	1- 0? ( drop xy> 2 4 + or +trazo ; )   | move
	drop xy> 1 4 + or ++trazo ; | down
	
:trazo.draw ;

|--------------------- Editar
:alinea
	dup @ $fffffffc and $2 or over ! ;
	
:line-nodo | --
	tocadoe 0? ( drop ; ) 
	alinea 4+ dup @ $3 and 3 <>? ( 2drop ; ) drop
	alinea drop ;

:acurva | adr -- adr
	dup @ 3 or over ! ;
	
:curv-nodo | --
	tocadoe	0? ( drop ; )
	dup @ 
	$3 and 2 <>? ( 2drop line-nodo ; ) drop
	dup 4+ dup @ $3 and 2 <>? ( 3drop ; ) drop
	acurva drop acurva drop ;	

:alfin	|  -- cnt
	dibujo> tocadoe - 2 >> ;

:del-nodo | --
	tocadoe 0? ( drop ; )
	dup @ $3 and swap
	dup 4+ alfin move -4 'tocadoe +! -4 'dibujo> +! 0 dibujo> !
	1 =? ( tocadoe 4+ dup @ $fffffffc and $1 or swap ! 0 'tocadoe ! ) drop  	
	0 'tocadoe !
|	tocadoe poli.set 	
	;

:ins-nodo | -- 
	tocadoe 0? ( drop ; )
	dup 4+ swap alfin 1+ move>
	4 'dibujo> +!  
	tocadoe @ $3 and 
	1 =?  ( tocadoe @ 3 xor tocadoe 4+ ! ) drop 	
	tocadoe poli.set 	;

:get-nodo | adr --
|	 @ dup $f and 'cc ! >xy 'yc ! 'xc ! ;
	 @ $f and 'cc ! ;

|---------------------------------------------------

|--cursor ab
#xa #ya #xb #yb

:cur.clr	0 0
:cur.set	dup 'ya ! 'yb ! dup 'xa ! 'xb ! ;

|-- caja
:caja.ins
	xa xb =? ( drop ; ) ya yb =? ( 2drop ; )
	xy> 1 4 + or ++trazo xa yb xy> 2 4 + or ++trazo 
	xb yb xy> 2 4 + or ++trazo xb ya xy> 2 4 + or ++trazo
	4 0? ( xa ya xy> 2 or ++trazo ) drop ;
	
|-- circulo
:circ.ins
	xa xb =? ( drop ; ) ya yb =? ( 2drop ; )
	yb + 2/ xy> dup 1 4 + or ++trazo xa yb xy> 3 4 + or ++trazo 
	xa xb + 2/ yb xy> 3 4 + or ++trazo xb yb xy> 3 4 + or ++trazo 
	xb ya yb + 2/ xy> 3 4 + or ++trazo xb ya xy> 3 4 + or ++trazo
	xa xb + 2/ ya xy> 3 4 + or ++trazo xa ya xy> 3 4 + or ++trazo
	3 4 + or ++trazo ;

|-- elip
:elip.ins
	xa xb =? ( drop ; ) ya yb =? ( 2drop ; )
	yb ya - abs xb xa - abs 

	>r >r r - 2dup 2dup
	 xy> 1 4 + or ++trazo |op	
	swap r> r> dup >r swap >r  - swap 2dup 
	 xy> 3 4 + or ++trazo  |cp
	r + 2dup 
	 xy> 3 4 + or ++trazo |curve	
	r + 2dup 
	 xy> 3 4 + or ++trazo |cp 
	swap r> r> dup >r swap >r + swap 2dup 
	 xy> 3 4 + or ++trazo |curve
	swap r> r> dup >r swap >r + swap 2dup 
	 xy> 3 4 + or ++trazo |cp 
	r - 2dup 
	 xy> 3 4 + or ++trazo |curve 
	r> - 
	 xy> 3 4 + or ++trazo |cp 
	 xy> 3 4 + or ++trazo |curve 
	rdrop 
	;

:circ.calc
	0? (			| up
		3drop elip.ins cur.clr ; ) 
	1- 0? ( drop	| move
		'yb ! 'xb ! ; ) 
	drop		| down
	cur.set ; 

:circ.draw	
	msec $80 and? ( blanco )( negro ) drop
	xa xb =? ( drop ; ) ya yb =? ( 2drop ; )
	yb ya - abs xb xa - abs ellipse ; 

:caja.draw	
	msec $80 and? ( blanco )( negro ) drop
	xa xb =? ( drop ; ) ya yb =? ( 2drop ; ) 
	2dup 2dup op drop yb 2dup line nip xb swap 2dup line drop ya line line ;

:caja.calc
	0? (			| up
		3drop caja.ins  cur.clr  ; ) 
	1- 0? ( drop	| move
		'yb ! 'xb ! ; ) 
	drop		| down
	cur.set ; 

|---------------------------------------------------
:grabando.cal | x y ev --  | 0=up 1=move 2=down
	0? (			| up
		enodo 
			4 =? ( 4drop caja.ins cur.clr ; ) | en otro lado
			5 =? ( 4drop circ.ins cur.clr ; ) | en otro lado
		 drop 'tocado ! 2drop ; ) 
	1- 0? ( drop	| move
		enodo 3 >? ( drop 'yb ! 'xb ! ; ) drop
		xy> tocado 0? ( drop xytrazo ; ) 
		@ $f and or tocado !
		; ) 
	drop		| down
	enodo 3 >? ( drop cur.set ; ) drop
	xy> etrazo 1+ 4 + or ++trazo 
	etrazo 0? ( 1 'etrazo ! dibujo> 4 - @ $fffffff0 and 2 4 + or ++trazo ) drop
	;

:grabando.draw
	enodo 
		4 =? ( caja.draw )
		5 =? ( circ.draw )
	drop 
	;

|----------------------------------------------------
:editando.calc | x y ev --  | 0=up 1=move 2=down
	0? ( 'tocado ! 2drop ; )
	1- 0? ( drop 
		tocado 1? ( >r xy> r> @ $f and or tocado ! ; ) drop
		poli.move ; )
	drop 
	tocanodopoli 1? ( dup 'tocado ! 'tocadoe ! 2drop ; ) drop
|	tocapoli 1? ( poli.set )( drop )
	xy> 'oxy !
	 ;


:editando.draw
	blink 0? ( negro )( blanco ) drop
	cadanodopoli
	tocadoe 0? ( drop ; )
	@ >xy verde |mcursor
|::mcursor | x y --
	dup xc w 2/ - swap op xc w 2/ + swap line
	dup yc h 2/ - op yc h 2/ + line
	;

:normalizarpoli
	'dibujo spr.stat 
	'dibujo spr.center
	'dibujo spr.< ;

:achicapoli
	'dibujo spr.> ;

|--- Interaccion de dibujo
::garabator
	hajusta
	2 'egrilla !
	0 'etrazo ! 
	clearselpoli
	poligono>  'actpoligono !
	0 'tocado ! 
	0 'estad ! 
	addcolor
	.page
	'xyhoja .pos 
	'estad 0 1 .cond 'grabando.cal 'grabando.draw .ug
	'estad 1 1 .cond 'editando.calc 'editando.draw .ug		
	'estad 2 1 .cond 'vista.calc 'vista.draw .ug		
	'estad 3 1 .cond 'caja.calc 'caja.draw .ug
	'estad 4 1 .cond 'circ.calc 'circ.draw .ug
	'estad 5 1 .cond 'trazo.cal 'trazo.draw .ug
	12 12 .table 
	10 1 .at 2 10 .to 'drawcolor 'clickcolor 	4 15 .btabla	| colores
	0 0 .at 12 1 .to 'drawpolig 'clickpolig  32 3 .btabla	|  poligono
	9 11 .at cyan 
	'ifondo [ grillamodo not 'grillamodo ! ; ] .sbtn .>
	'igrilla 'egrilla 5 .opcbtn .> 
	violeta 'iborrar [ "Borro Dibujo ?" dlgsino 1? ( erase-draw ) drop ; ] .sbtn 
	rojo 0 11 .at 	'ifin 'exit dup >esc< .sbtn .>
	'clcolor 'xcolor dup <f1> .xbtn 
	cyan
	0 1 .at 1 6 .to 'iestado 'estad 6 .vtool | .opcbtn
	2 11 .at  cyan 
	'estad 0 3 .cond
|		'dibu1 'delast dup <f5> .rbtn .>
		'dibua [ 0 'etrazo ! ; ] .rbtn .>
		"<" 'normalizarpoli .2btn .>
		">" 'achicapoli .2btn .>
	2 11 .at 
	'estad 1 6 .cond
		"+" 'copy-poli .2btn .>	
		"-" 'del-poli .2btn .>
|		'iarr 'arr-poli .sbtn |.>
		'iaba 'abapoli .sbtn .>
		"(+)" 'ins-nodo .2btn .>	
		"(-)" 'del-nodo .2btn .>	
		"CL" 'curv-nodo .2btn .>	
	2 11 .at 
	'estad 2 1 .cond 
		3 11 .at  5 1 .to 190 'vzoom .hsli
|	2 11 .at 
|	'estad 3 1 .cond 
|		'dibu1 'delastpol dup <f5> .rbtn .>
|	2 11 .at 
|	'estad 4 1 .cond 
|		'dibu1 'delastpol dup <f5> .rbtn .>
|	2 11 .at 
|	'estad 5 1 .cond 
|		'dibu1 'delastpol dup <f5> .rbtn .>
	.show cls drawmem
		xymouse sw * + 2 << framev + @ 'colormouse !
		32 font blanco
		0 28 at dup etrazo "%d (%d)" print
		;
:debugg
		0 4 at spr.miy spr.mix spr.may spr.max "%d:%d %d:%d" print
|		32 dup screen 20 0 at
|		verde dup "r%d" print
		32 font 0 6 at
		verde colormouse "%h" print
		0 4 at tocado dup 1? ( 'dibujo - 2 >> swap @ ) "%h %d" print
		0 5 at poini pofin dibujo> "%h %h %h" print
		
|		azul
|		0 6 at 'dibujo ( dibujo> <? )( @+ dup $f and 4 =? ( over 4 >> ink "]" print ) 2drop ) drop pcr
		azul
		64 font
		0 12 at
		'dibujo ( dibujo> <? )( @+ 
			dup dup $f and 4 =? ( over 4 >> ink ) 2drop 
			"%h " print 
			poini =? ( "( " print ) 
			pofin =? ( ") " print )
|			drop "*"print
			) drop cr
		mem ( @+ 1? )( 
			dup dup $f and 4 =? ( over 4 >> ink ) 2drop
			|drop "#"print
			"%h " print 
			) 2drop
		;


:cleardibujos
	'indice >r 128 ( 1? )( 0 r!+ 1- ) drop rdrop
	'dibujo 'dibujo> ! 'hojas 'hojas> !
	'indice dup 'indice> ! 'actual  ! ;
	
:load-dibu
	cleardibujos
	'hojas 'nombre load
	dup 'hojas> ! 0 swap 4+ !+ 0 swap !	
	'indice 'hojas ( dup @ 1? )( drop dup 
		rot !+ swap ( @+ 1? )( drop ) drop
		) 2drop 'indice> ! ;

:add-dibu
	hojas> dup 'nombre load 
	dup 'hojas> ! 0 swap 4+ !+ 0 swap !	
	indice> swap ( dup @ 1? )( drop dup 
		rot !+ swap ( @+ 1? )( drop ) drop
		) 2drop 'indice> ! ;

:save-dibu
	clear 'indice ( @+ 1? )( ( @+ 1? )( , ) , drop ) , drop
	mem here over - 'nombre save ;

#tactual

:editahoja
	1 .cursor
	actual 'tactual !
	load-car
	garabator
	save-car
	save-dibu load-dibu
	tactual 'actual !
	0 .cursor
	;

:copy-dibu
	actual @ 0? ( drop ; )
	hojas> indice> !+ 'indice> !
	hojas> swap zcopy 'hojas> ! ;

:ante-dibu
	actual 'indice =? ( drop ; )
	dup 4 - over @ over @ swap rot ! swap !
	-4 'actual +! ;

:post-dibu
	actual indice> 4 - >=? ( drop ; )
	dup 4+ over @ over @ swap rot ! swap !
	4 'actual +! ;

:borra-dibu
	actual @ 0? ( drop ; ) drop
	"Borro Dibujo ?" dlgsino 
	1? ( actual dup 4+ zcopy 4 - 'indice> !
		0 'actual !
		) drop ;

#nombreant )( 64
:otro-code
	save-dibu
	".//r4dibujo//" dir
	'nombre explore
	load-dibu
	;

:insert-dibu
	".//r4dibujo//" dir
	'nombre explore
	add-dibu
	;
|---------- Lista de dibujos
:hdraw | nro --
	dup 2 << 'indice + actual =? ( blanco )( gris ) gc.fbox
	@ 1? ( sprite )( drop ) 
	azul oscuro 4 4 ttext 1+ "%h" print ;
	
:hclick | nro --
	2 << 'indice + indice> >? ( drop indice> )	'actual ! ;

|----------------------------	
:menu-dibujos
	.page
	12 12 .table 0 11 .at 1 1 .to
	rojo  'ifin 'exit dup >esc< .sbtn .>
	azul 'idibuja 'editahoja dup <f1> .sbtn .>
	'icopia 'copy-dibu dup <f2> .sbtn .>
	'iizq 'ante-dibu dup <f3> .sbtn .>
	'ider 'post-dibu dup <f4> .sbtn .>
	'iborrar 'borra-dibu dup <f5> .sbtn .>
	'isuma 'insert-dibu dup <f6> .sbtn .>
	[ 4 'actual +! ; ] <der>
	[ actual 'indice >? ( 4 - ) 'actual ! ; ] <izq>
	verde
	"F5" "Genera" 'save-code dup <f6> .fbtn
	cyan 0 0 .at 4 1 .to 'nombre 'otro-code dup <esp> .8btn
	10 10 .table 1 1 .at 8 8 .to 'hdraw 'hclick 8 8 .btabla
	.show cls scr
		32 font 20 0 at dup "%d" blanco print  |"RMation" print
|		0 4 at azul
|		dup indice> 'indice - hojas> 'hojas - dibujo> 'dibujo -
|		"d:%db%.h:%db%.i:%db%.%d" print
		;

|*****************************
: 33 0 paper
	'nombre "./nom/r4dibujo.nom" load drop
	".//r4dibujo//" dir
	load-dibu
	'indice 'actual !
	menu-dibujos
	save-dibu
	".//" dir
	'nombre count "./nom/r4dibujo.nom" save
	"main.txt" run
	;
