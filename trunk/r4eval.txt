| eval-code.txt
| PHREDA 2007
|---------------------------------------
^lib/reda4.txt
^lib/gui.txt
^r4code.txt
^form.txt

#nombre )( 64
#linea )( 1024	| error y mem aux

:pantalla
	cls scr font-vard-12-bold home
	azul 2 linesfill cr2
	verde dup " :R%d" print
	blanco "EVAL " print
	'nombre print
	font-vard-8-bold
	cr cr  ;

#primerword
#:hojapal 0

#pilavars )( 1024
#pilavars> 'pilavars

::+variable | nroword --
	pilavars> !+ 'pilavars> ! ;

::-executa | --
	-4 'pilavars> +! ;

|-------- infopal
:printwordal | n --
	4 << |'indicepal +
	@+ "%w " print @+ " %h  " print @+ " %h  " print @+ " %h  " print cr
	drop ;

:printwordin | n --
	4 << |'indicepal +
	@+ "%w " verde print
	@+ drop |"%h " cyan print
	blanco
	@+ "%h " print

|	dup 24 >> "R:%d " print
|	dup 8 << 24 >> "D:%d " print
|	$ff and "F:%b " print

	@+ "%h " print cr
	drop ;

|----------------- muestra lista palabras
::printwordname | n --
|	dup "%d." blanco print | nro de palabra
	4 << |'indicepal +
|	indicepal> >=? ( drop ; )
	dup 8 + @ 1 and? ( drop @ "#%w " violeta print ; ) drop
	@+ ":%w " rojo print
	drop
	;
:ll
	verde
	@+ drop |"%d " print direccion
	@+
	dup 24 >> "%d" print
	dup 8 << 24 >> "%d" print
	$fff and  "%b" print
| 	"%h" print
	@ "%d" print
	;

:drawtoken
	primerword
	rows ( 1? )( 1- swap
|		actword =? ( vidi )
		dup printwordin
|		dup printwordname cr
|		actword =? ( vidi )
		1+ swap  )
	2drop
	;

|------------------ definicion con ayuda
:tokeninfolist | cnt adr --
	( swap 1? )( 1- swap | cnt adr
		|dup "%h :" print
		<<ip =? ( blink 1? ( negro )( blanco ) drop ">" print )
|		dup 4 - movstackprint
|		tokenprint
		<<ip 4+ =? ( blink 1? ( negro )( blanco ) drop "<" print )
		" " print
		lout? 1? ( cr ) drop
		) 2drop ;


:esvar | adr --
	@ "#%w " violeta print ;

:exprintword | n --
	4 << 'indicepal +
	indicepal> >=? ( drop ; )
	dup 8 + @ 1 and? ( drop esvar ; ) drop
	dup @ ":%w " rojo print
	dup 12 + @
	swap 4+ @
	tokeninfolist ;

:drawtrace
|	dumpvm
	'pilaexe
	( pilaexe> <? )( @+ exprintword cr ) drop
	;

|||||||||||||||||||||||||

|------------------ dibuja la memoria
:printvariable | n --
	4 << 'indicepal +
	indicepal> >=? ( drop ; )
	dup 8 + @ 1 nand? ( 2drop ; ) drop
	@+ "#%w " violeta print amarillo
	@ @ " %d " print
	drop
	;

:drawmemvar
	'pilavars
	( pilavars> <? )(
		@+ printvariable cr ) drop
	;

|------------------ estado MV
:drawstat
|	cntvars cntword "pal:%d vars:%d " print cr amarillo
|	str> str - 	cte> cte - 2 >> prog> prog - 2 >> "tok:%d cons:%d str:%d" print cr
	<<ip "IP:%h " verde print rojo
	<<ip @ dup $ff and swap 8 >> swap "%d-%d" print
	;

|----------------------------------------
#pagina 0
#actual 0

#FILAS

:refresca
	actual -? ( 0 nip )
	pagina <? ( dup 'pagina ! )
	pagina 20 + >? ( dup 20 - 'pagina ! )
	'actual !
	;

:printlineword | n --
	4 << 'indicepal +
	indicepal> >=? ( drop ; )
	dup 8 + @ 1 and? ( violeta "#" )( rojo ":" ) nip
	swap @+ rot
	"%s%w" gcell
	@+ drop |"%d " print direccion
	@+
	dup 24 >> "%d" gcell		| pilaR
	dup 8 << 24 >> "%d" gcell	| pilaD
	$fff and "%b" gcell		| flags
	@ "%d" gcell | largo en bytes
	;

#grid1 4  21  5  5  12  7  7  2

:vercod
	0 dup 'pagina ! 'actual !
	inigui
	'exit >esc<
	[ 1 'actual +! refresca ; ] <dn>
	[ -1 'actual +! refresca ; ] <up>
	[ 20 'actual +! refresca ; ] <pgdn>
	[ -20 'actual +! refresca ; ] <pgup>
	show clrscr pantalla
		verde
		'grid1 8 0.9 grid
		"Nro" gcellc "Nombre" gcellc "RS" gcellc "DS" gcellc
		"Flags" gcellc "Tokens" gcellc "Calls" gcellc " '" gcellc
		cr
		pagina 20 ( 1? )( 1- swap
			verde
			rowg
			dup actual =? ( ">%h" )( " %h" ) gcellc
			dup printlineword
|			dup getllamadas 1? ( "%d" )( "" nip ) gcellc
|			dup getflags 1? ( "%d" )( "" nip ) gcellc
			cr
			1+ swap ) 2drop
		blanco $grid
		cr
     	verde
|		actual printword
		cmano ;

|----------------------------------------
|----------------------------------------
:consola
|	indicepal< 'indicepal - 4 >> | iniciodicc
|	'primerword !

|	indicepal> 'indicepal - 4 >> | fin dicc
	|1- dup +executa

|	( primerword 1- >? )(
	|	dup	4 << 'indicepal +
|		8 + @ 1 and? ( over +variable ) drop
|		1- ) drop

|	indicepal> 12 - @ 'actual> !
|	ajusta

	inigui
	'exit >esc<
	'stepvm <f1>
	'stepvmf <f2>
	startvm | cambia las direcciones de variable!!
	show clrscr	fonti home | 	25 fonth
		"r4Eval: " print blanco 'nombre print cr
|		msg 1? ( rojo print cr )( drop )
		drawstat cr
		|drawtoken		|drawmemvar
		drawtrace
		cr cr
		0 rows 2 - at
		blanco
		'exit "ESC" sp btnt sp
		'stepvm "F1-Step" btnt sp
		'playvm "F2-Play" btnt sp
|		'savecode |[ savestat ; ]
|			"F4-Graba" btnt sp
		cmano ;


|----- Sistema
:errorcompila
	mark
|	saverror
	"debug.err" savemem
	empty
|	savestat
	end ;

:errorpost
	;

|----------- principal
:main
	'nombre "./nom/editor.nom" load drop

	cls scr
	pantalla
	blanco "Analizando..." print
	redraw

|	'nombre tokencomp
|	msg 1? ( drop errorcompila ; ) drop
|	tokenpost
|	msg 1? ( drop errorpost ; ) drop

	inigui
	'exit >esc<

	'consola <f1>
	'vercod <f2>
	show clrscr pantalla
		blanco
		"F1-Debuger" print cr
		"F2-Ver Diccionario" print cr
		;

: 0 paper mark 4 main ;