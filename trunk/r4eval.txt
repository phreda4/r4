| eval-code.txt
| PHREDA 2007
|---------------------------------------
^reda4.txt
^libgui.txt
^r4code.txt
^medit.txt

#nombre )( 64

#linea )( 1024	| error y mem aux
#pad )( 1024	| entrada texto

#pantaini>
#pantafin>

#primerword
#:hojapal 0

#pilaexec )( 1024
#pilaexec> 'pilaexec


:printpageword | n
	4 << 'indicepal +
	10 ( 1? )( 1- >r
		@+ "%w " print @+ " %h  " print @+ " %h  " print @+ " %h  " print cr
		r> )
	2drop ;

|----------------- muestra lista palabras
::printwordname | n --
|	dup "%d." blanco print | nro de palabra
	4 << 'indicepal +
	indicepal> >=? ( drop ; )
	dup 8 + @ 1 and? ( 2drop ; ) drop |drop @ "#%w " violeta print ; ) drop
	@+ ":%w " rojo print
	drop
	;
:ll
	verde
	@+ drop |"%d " print direccion
	@+
	dup 24 >> "%d" 3 cntprint
	dup 8 << 24 >> "%d" 3 cntprint
	$fff and  "%b" 12 cntprint
| 	"%h" 8 cntprint
	@ "%d" 4 cntprint
	;

:drawtoken
	fonti
	primerword
	fils ( 1? )( 1- swap
		actword =? ( vidi )
		dup printwordname cr
		actword =? ( vidi )
		1+ swap  )
	2drop
	;

|------------------ definicion con ayuda
:tokeninfolist | cnt adr --
	( swap 1? )( 1- swap | cnt adr
		|dup "%h :" print
		<<ip =? ( vidi )
|		dup 4 - movstackprint
		tokenprint
		<<ip 4+ =? ( vidi )
		" " print ) 2drop ;


:esvar | adr --
	@ "#%w " violeta print cr
 	;

:exprintword | n --
	4 << 'indicepal +
	indicepal> >=? ( drop ; )
	dup 8 + @ 1 and? ( drop esvar ; ) drop
	dup @ ":%w " rojo print
	dup 12 + @
	swap 4+ @ prog +
	tokeninfolist ;

:drawtrace
	fonti
	dumpvm
	actword exprintword
	;

|------------------ dibuja la memoria
:printvarname
	4 << 'indicepal +
	indicepal> >=? ( drop ; )
	dup 8 + @ 1 nand? ( 2drop ; ) drop
	@+ "#%w " violeta print
	drop
	;

:drawmemvar
	fonti
	primerword
	fils ( 1? )( 1- swap
		dup printvarname cr
		1+ swap  )
	2drop
	;
|------------------ estado MV
:drawstat
	fonti

	cntvars cntword "pal:%d vars:%d " print cr amarillo
	str> str - 	cte> cte - 2 >> prog> prog - 2 >> "tok:%d cons:%d str:%d" print cr
	<<ip "IP:%h " verde print rojo
	<<ip @ dup $ff and swap 8 >> swap "%d-%d" print
	;

:realplay
	'nombre run  ;

|"ESC" 'ifin 'exit dup >esc< .fsbtn .>
|"F3" ">." 'stepvm dup <f3> .fbtn .>
|"F4" ">-" 'wordvm dup <f4> .fbtn .>
|"F5" "Reset" 'resetvm dup <f5> .fbtn .>
|"F1" "eval" 'evaluador dup <f1> .fbtn .>
|"F5" "Reset" 'resetvm dup <f5> .fbtn .>
|"F9" "Stat" 'savestat dup <f9> .fbtn .>

#newbotonera 7
$ff0000 'ifin   'exit
$00ff00	'iplay	'stepvm
$00ff00	'iff	'playvm
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
$ffff00	'icopia		'exit
$ffff00	'iizq		'exit
$ffff00	'ider		'exit
$ff0000	'iborrar	'exit
$00ff00	'icopia		'exit

:botonera
	'newbotonera escf1..
	;

:titulo
	$444444 $cccccc vbtn
	1 sfont amarillo "r4Eval: " print
	blanco 'nombre print
    msg 1? ( cr rojo print )( drop )
|	'eligearchivo onUp
	;

:consolag
	2 font blanco m.draw ;
#guiconsola
0.96 0.06 0 -0.46 'titulo
0.5 0.1 -0.25 0.45 'botonera

0.5 0.5 -0.25 -0.15  'drawtoken
0.5 0.5 0.25 -0.15  'drawmemvar

0.9 0.4 0 0.2 'drawtrace
0.5 0.1 0.25 0.45 'drawstat
0

:consola
	mem 'pantaini> !

	indicepal< 'indicepal - 4 >> 'primerword ! | iniciodicc

	indicepal> 'indicepal - 4 >> | fin dicc
	1- 'actword !

|	indicepal> 12 - @ 'actual> !
|	ajusta
	inikey
	'exit >esc<
	'stepvm <f1>
	'playvm <f2>

	startvm

|	'execpad <enter>
|	'pad 128 m.input
|	"" m.copy

	show cls scr
		'guiconsola gui
		cmano ;

|----------------------------
:evaluador
	;

|----- Sistema
:llamaeditor
	'linea dup >, saverror count "debug.err" save
	"edit-code.txt" run ;

|----------- principal
:main
	'nombre "./nom/editor.nom" load drop
	clear
	'nombre tokencomp
	msg 1? ( drop llamaeditor ; ) drop
	tokenpost |savestat
|	msg 1? ( drop evaluador ; ) drop
	consola
	;

: 0 paper 4 main "edit-code.txt" run  ;