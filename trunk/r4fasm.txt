| Compilador
| PHREDA 2009
|---------------
^lib/gui.txt
^r4token.txt
^r4i86.txt

#nombreimg )( 64

#msgOK "OK."
#mensaje 'msgOk

|----------------------------------------------
:getcte		tomem ?numero drop nip ;
:getstr     tomem ;

:nro>dicn2   8 >> 4 << 'indicepal + @ ; | nombre
:nro>dicn   8 >> "w%h" mprint ;			| numero de palabra

|----------------------------------------------
:coldefw nro>dicn ":%w" ,print ;
:coldefv nro>dicn "#%w" ,print ;
:colitd
:colith
:colitb
:colitf
	getcte "%d" ,print
	;

:cpycad | adr --
	( c@+ 1? )( 34 =? ( drop c@+ 34 <>? ( 2drop ; ) ) ,c ) 2drop ;

:colits	34 ,c tomem 1+ cpycad 34 ,c ",0" ,s ;
:colwor
:colvar
	nro>dicn ,s ;
:coldwo
:coldva
	"'" ,s nro>dicn ,s ;

#codei 0 'coldefw 'coldefv colitd colith colitb colitf colits colwor colvar coldwo coldva

|----------------------------------------------
:genvar | nro llamadas -- nro llamadas
	over "v%h  " ,print
	over 4 << 'indicepal + 4+ @
	( @+ dup $ff and
		1 =? ( 0 nip ) | corta con defc
		2 =? ( 0 nip ) | corta con defv
		1? )( 	 | dirv n c
		12 <? ( 2 << 'codei + @ exec )( 2drop )
		,sp
		)
	3drop
	,cr ;

:compiladato
	mark
	";---:r4 compiler dat.asm" ,s ,cr
	0 ( cntword cntvars + <? )(
		dup 4 << 'indicepal + 8 + @
		1 nand? ( drop )( drop
			dup getllamadas 1? ( genvar ) drop
			)
		1+ ) drop
	0 ,c
	"r4asm/dat.asm" savemem
	empty ;

|----------------------------------------------
:,token | a -- a.
	@+ dup $ff and
	12 <? ( 2 << 'codei + @ exec ; ) nip
	nro>macro ,s ;

:gencodigo | nro llamadas -- nro llamadas
	over "w%h: " ,print
	over 4 << 'indicepal +
	dup @ "; %w" ,print ,cr
	dup 4+ @ swap 12 + @
	( 1? )( 1- swap
		,sp ,token swap
		$f nand? ( ,cr ) )
	2drop
	,cr
	;

:compilacodigo
	mark
	";---:r4 compiler cod.asm" ,s ,cr
	0 ( cntword cntvars + <? )(
		dup 4 << 'indicepal + 8 + @
		1 and? ( drop )( drop
			dup getllamadas 1? ( gencodigo ) drop
			)
		1+ ) drop
	0 ,c
	"r4asm/cod.asm" savemem
	empty ;

|-----------------------
:cargaimagen
	'nombreimg "./nom/editor.nom" load drop
	'nombreimg tokencomp
	tokenpost
	;

|-----------------------
:main
	mark
	cargaimagen | genera en realidad

	compiladato
    compilacodigo

	inigui
	'exit >esc<
	show clrscr
		fonti home verde
		mensaje print cr
		'nombreimg "programa: %s " print
		prog> prog - 2 >> " %d tokens " print
		cntvars cntword "Palabras: %d  Variables: %d" print cr
		blanco
        verde
		dumpcompila
		;

: 33 main ;