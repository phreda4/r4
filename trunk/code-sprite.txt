| Editor de nsprite
| PHREDA 2008
|--------------------------------------------------
^libgui.txt
^libsprite.txt
|^trace.txt

^dlgsino.txt
^dlgcolor.txt

#indpol )( $100 #indpol>
#dibujo )( $1000 #dibujo>
#trazo )( $1000 #trazo>

#modo 0
#etrazo 1

#policursor -1
#poini
#pofin

#lastnodo 0
#cursor 0

#colora $ff0000
#colorb $ff00
#coltipo 0
#colcen
#colmat

#zoom

#xd #yd
#xi #yi
#xl #yl

#grillamodo
#egrilla 2

#nrolinea 0
#nombre )( 64

:angulo | p1 p2 -- ang
	over d>y over d>y - >r
	swap d>x swap d>y - r>
	atan2 ;

:cltrazo
	'trazo 0 over ! 'trazo> ! ;
:++trazo | p --
	trazo> 4 - @ =? ( drop ; )
	trazo> 8 - 'trazo >=? (
		@+ pick2 angulo >r
		@ over angulo r> - abs
		$a <? ( drop trazo> 4 - ! ; )
		$7f5 >? ( drop trazo> 4 - ! ; )
		)
	drop
:+trazo | p --
	trazo> !+ 0 over ! 'trazo> ! ;
:trazo!
	trazo> 4 - dup @ $f and rot or swap ! ;

:dibnodos | a--
	( @+ 1? )( >xy 2 box ) 2drop ;

:cldibujo
	'dibujo 0 over ! 'dibujo> !
	'indpol 0 over ! 'indpol> ! ;

:+dibujo | p --
	dibujo> !+ 'dibujo> ! ;
:0dibujo
	0 dibujo> ! ;

:,indpol
	indpol> !+ 'indpol> ! ;

:haceindice
	'indpol 'indpol> !
	'dibujo dup ,indpol
	( @+ 1? )( $f and
		$c >? ( over ,indpol )
		drop ) 2drop
	-4 'indpol> +!
	dibujo> indpol> !
	;

|--------------------------------------------------
#xmax #xmin #ymax #ymin

:setparam
	'trazo
	@+ d>xy
	dup 'ymin ! 'ymax !
	dup 'xmin ! 'xmax !
	( @+ 1? )( d>xy
		ymin <? ( dup 'ymin ! ) ymax >? ( dup 'ymax ! ) drop
		xmin <? ( dup 'xmin ! ) xmax >? ( dup 'xmax ! ) drop
		) 2drop
	xmax xmin + 2/ ymax ymin + 2/ xy>d 'colcen !
    xmin ymin xy>d 'colmat !
	;

:polsolido
	colcen 7 or +dibujo       | no los usa
	colmat 8 or +dibujo       | cuando genera
	colorb 4 << $c or +dibujo | deberia sacarlos
	colora 4 << $d or +dibujo
	;
:polldeg
	colcen 7 or +dibujo
	colmat 8 or +dibujo
	colorb 4 << $c or +dibujo
	colora 4 << $e or +dibujo
	;
:polrdeg
	colcen 7 or +dibujo
	colmat 8 or +dibujo
	colorb 4 << $c or +dibujo
	colora 4 << $f or +dibujo
	;
#tiposcol polsolido polldeg polrdeg

:cpdibujo
	1 'etrazo !
	0 'lastnodo !
	setparam
	trazo> 'trazo - 2 >> 3 <? ( drop cltrazo ; ) drop
	dibujo> indpol> !+ 0 over ! 'indpol> !
	'trazo ( @+ 1? )(
		dup $f and 5 =? ( 3 nip ) swap $fffffff0 and or
		+dibujo ) 2drop

	'trazo @ $fffffff0 and $a or +dibujo | agrego linea fantasma
	coltipo 2 << 'tiposcol + @ exec
	0dibujo

	dibujo> indpol> !
	cltrazo
	;

|--------------------------------------------------
#xcycwh 0 0 0 0

:savebox
	xc yc w h 'xcycwh !+ !+ !+ ! ;

:loadbox
	'xcycwh @+ 'h ! @+ 'w ! @+ 'yc ! @ 'xc ! ;

:drawdibujo
	loadbox
	grillamodo 0? ( blanco gc.fbox ) drop
	'dibujo nsprite
	egrilla gris 2* rgrilla
	lastnodo 0? ( drop ; )
	blink 1? ( negro )( blanco ) drop
	@ >xy 4 box
	;

|--------------------------------------------------
:indot | x y x y --
	rot - dup * swap rot - dup * + | dx2+dy2
	64 <=? ( 1 )( 0 ) nip ; |

:tocanodopoli | x y -- x y nro/ 0
	poini ( pofin <? )( dup @
		dup $f and 8 >? ( 2drop )(
			drop swap >r
			>xy 2over indot 1? ( drop r> ; )
			drop r> )
		4+ )
	drop 0 ;


|--------------------------------------------------
#oxy

:nodomove
	drop dup
	d>xy yd + swap xd + swap xy>d swap $f and or over ! ;

:polimove | x y
	xy> oxy over 'oxy !
	dxy 'yd ! 'xd !
	poini ( pofin <? )(
		dup @ dup $f and
		$a >? ( 2drop )( nodomove )
		4+ ) drop
	;

:muevenodo
	>r xy> r @ $f and
	1 =? ( | si es op busco linea fantasma
		r ( @+ $f and $9 <? )( drop ) drop
		4 - pick2 over @ $f and or swap !
		)
	or r> ! ;


|-------- dibujo de cada nodo segun tipo
#ycen #xcen

:dd1 >xy 2 box ;
:dd2 >xy 3 cruz ;
:dd3 >xy 2 fbox ;
:dd4 >xy 3 cruz ;
:dd5 >xy 2 fbox ;
:dd6 >xy 3 cruz ;
:dd7 >xy 2dup 'ycen !+ ! 2 box ; | centro
:dd8 >xy 2dup 2 cruz op xcen ycen line ; | relativo

#acdd 0 dd1 dd2 dd3 dd4 dd5 dd6 dd7 dd8

:editmode
	drawdibujo
	blink 1? ( negro )( blanco ) drop

	poini ( pofin <? )( @+
		dup $f and 8 >? ( 2drop )( 2 << 'acdd + @ exec )
		) drop
	[ 0 'cursor ! ; ] onUp
	[ xymouse tocanodopoli 1? ( dup 'lastnodo ! ) 'cursor ! xy> 'oxy ! ; ] onDn
	[ xymouse cursor 1? ( muevenodo ; ) drop polimove ; ] onMove
	;

|--------------------------------------------------
:vistamode
	[ xymouse 'yd ! 'xd ! ; ] onDn
	[ xymouse loadbox dup yd - 'yc +! 'yd ! dup xd - 'xc +! 'xd ! savebox ; ] onMove
	loadbox
	zoom 1.3 + sh 16 *>> dup 'w ! 'h !
	savebox
	drawdibujo
|	scr 8 font blanco zoom "%d" print
	;

|--------------------------------------------------
:nodomode
	loadbox
	[ trazo> 4 - 'lastnodo ! ; ] onUp
	[ xymouse xy> trazo! ; ] onMove
	[ xymouse xy> etrazo or +trazo
	etrazo 1 =? ( 5 nip ) 'etrazo !
	; ] onDn

    drawdibujo
	|colora ink
	|trazo nsprite
	blink 1? ( negro )( blanco ) drop
	fonti "nodo" print
	;



:nodocalc | x y ev --  | 0=up 1=move 2=down
	0? ( 3drop trazo> 4 - 'lastnodo ! ; ) | up
	1- 0? ( drop xy> trazo! ; )   | move
	drop xy> etrazo or +trazo
	etrazo 1 =? ( 5 nip ) 'etrazo !
	; | down


|--------------------------------------------------
:medionodos | adr -- adr nv
	dup @ over 4 - @ d>xy rot
	d>xy rot + 2/ >r + 2/ r> xy>d ;

:+nodo | adr --
	dup 4+ swap dibujo> pick2 - 2 >> 1+ move>
	4 dup 'dibujo> +! 'pofin +! 0 dibujo> !
	;

:insprimero | adr --
	dup +nodo
	8 + medionodos 3 or swap 4 - ! ;

:inscurva | adr --
	dup +nodo
	dup 8 + medionodos 4 or swap 4 - !
	dup +nodo
	8 + medionodos 2 or swap 4 - !
	;

#accinsnodo 0 insprimero inscurva insprimero 0 0 0 0
|	7 =? ( 2drop inspoli ; )

:ins-nodo
	lastnodo dup @ $7 and
	2 << 'accinsnodo + @ 0? ( 2drop )( exec )
	haceindice
	;

|-------------------------
:-nodo | adr --
	dup 4+ dibujo> pick2 - 2 >> move
	-4 dup 'dibujo> +! 'pofin +! 0 dibujo> !
	;

:quitapoli | adr --
	drop
	poini pofin 4+ dibujo> over - 2 >> move
	pofin poini - 4+ neg 'dibujo> +! 0 dibujo> !
	0 dup dup 'poini ! 'pofin ! 'lastnodo !
	;

:quitaylinea
	dup -nodo dup @ $fffffff0 and 3 or swap !
	;

:delnodo2 | adr --
	4+ dup @ $f and
	4 =? ( drop 4 - quitaylinea ; ) | curva real
	drop 4 - dup -nodo
	dup @ $fffffff0 and $a or swap ! | ultima
	;

:delnodo1 | adr --
	dup -nodo
	dup @ $f and
	2 =? ( over 4+ dup @ $fffffff0 and 3 or swap ! )
	8 >? ( drop quitapoli ; )
	drop
	dup @ $fffffff0 and dup 1 or pick2 ! | adr v
	swap ( @+ $f and $9 <? )( drop ) drop | v adr'
	4 - dup @ $f and rot or swap !
	;

:delnodo4
	4 - quitaylinea ;

#accdelnodo 0 delnodo1 delnodo2 -nodo delnodo4 0 0 quitapoli

:del-nodo
	lastnodo dup @ $7 and
	2 << 'accdelnodo + @ 0? ( 2drop )( exec )
	haceindice
	;

:deltrazo
	lastnodo 0? ( drop ; )
	0 over ! dup 'trazo> ! 4 -
	'trazo <? ( 0 nip 1 'etrazo ! )
	'lastnodo ! ;

|-------------------------
:acurva1 | adr --
	4+ dup @ $f and | el siguiente es
	2 =? ( drop quitaylinea ; ) | curva
	$a =? ( drop dup +nodo
			medionodos 2 or swap !+
			dup @ $fffffff0 and 9 or swap ! ; )
	drop dup +nodo
	medionodos 2 or swap !+
	dup @ $fffffff0 and 4 or swap !
	;

#acccurvn 0 'acurva1 'delnodo2 'acurva1 'acurva1 0 0 0

:curv-nodo | --
	lastnodo dup @ $7 and
	2 << 'acccurvn + @ 0? ( 2drop )( exec )
	haceindice
	;

|--- auxpolis
:tocopy | adr --
	dibujo
:tocopyto | hast des --
	( over <? )( @+ , ) 2drop ;
:copyto | adr --
	( @+ 1? )( , ) , drop ;

:prevpoli | ad -- ad'
	( 'dibujo >? )( dup @ $f and
		$c >? ( drop 4+ ; )
		drop 4 - )  ;

:nextpoli | ad -- 'ad
	( dibujo> <? )( dup @ $f and $c >? ( drop ; ) drop 4+ ) ;

:abapoli
	poini 0? ( drop ; )
	'dibujo =? ( drop ; )
	dup 8 - prevpoli over =? ( 2drop ; ) | no hay otro atras
	clear
	dup tocopy	| poini pnex
	pofin 4+ pick2 tocopyto | poini pnex
	tocopyto
	pofin 4+ copyto
	0 ,
:recopy
	'dibujo mem ( @+ 1? )( rot !+ swap ) rot !+
	4 - 'dibujo> ! drop
	haceindice
	0 dup dup 'poini ! 'pofin ! 'lastnodo !
	;

|---------
:del-poli
	poini 0? ( drop ; )
	pofin 4+
	dibujo> >=? ( drop 0 over ! 4 - 'dibujo> ! haceindice ; )
	zcopy 4 - 'dibujo> !
	haceindice
	;

|--------------------------------------------------
:trazomode
	loadbox
	[ cltrazo xymouse xy> 1 or +trazo ; ] onDn
	[ xymouse xy> 5 or +trazo ; ] onMove
	[ cpdibujo ;  ] onUp
	-1 'policursor !
	drawdibujo
	colora ink 'trazo nsprite
	;

|--------------------------------------------------

#tocado
#emodo 1

:nuevopunto
	xymouse xy> emodo or +dibujo
	emodo 1 =? ( dibujo> 4 - 'tocado ! 3 'emodo ! drop 0dibujo ; ) drop

	tocado @ $fffffff0 and $a or +dibujo | agrego linea fantasma
	coltipo 2 << 'tiposcol + @ exec
	0dibujo

	-20 'dibujo> +!
	;

:lineasmode
	loadbox
	'nuevopunto onDn
	[ dibujo> 4 - xymouse xy> over @ $f and or swap ! ; ] onMove
	[ ;  ] onUp
	-1 'policursor !
	drawdibujo
	colora ink poli
	;

|	0? (			| up
|		enodo
|			4 =? ( 4drop caja.ins cur.clr ; ) | en otro lado
|			5 =? ( 4drop circ.ins cur.clr ; ) | en otro lado
|		 drop 'tocado ! 2drop ; )
|	1- 0? ( drop	| move
|		enodo 3 >? ( drop 'yb ! 'xb ! ; ) drop
|		xy> tocado 0? ( drop xytrazo ; )
|		@ $f and or tocado !
|		; )
|	drop		| down
|	enodo 3 >? ( drop cur.set ; ) drop
|	xy> etrazo 1+ 4 + or ++trazo
|	etrazo 0? ( 1 'etrazo ! dibujo> 4 - @ $fffffff0 and 2 4 + or ++trazo ) drop

|--------------------------------------------------
:capaclick | n --
	indpol> >=? (  ; )
	dup @+ 'poini ! @ 4 - 'pofin !
	over 'policursor !
	0 'lastnodo !
	1 'modo !
	;

:cadapoli | n -- n
	policursor =? ( 1.0 )( 0.8 ) fzoom
	dup 2 << 'indpol +
    'capaclick  onUp
	4+ @ 0? ( drop ; ) | no hay
	dup 8 - @ 4 >> swap 4 - @ 4 >> | co11 col2
	vbtn | col1 col2 --
	policursor <>? ( ; )
	1 sfont blanco dup "%d" printc
	;

:zonaderecha
	| poner cantidad de poligonos
	modo 3 =? ( drop 'zoom .vslide ; ) drop
	indpol> 'indpol - 2 >> 0? ( drop ; )
	'cadapoli .vlist ;

|-----------------------------------------------
#curcola
#curcolb

:elijecolor
	modo 1 =? (
		poini ( pofin <=? )( dup @ $f and
			$c =? ( over dup @ 4 >> 'colorb ! 'curcolb ! )
			$d =? ( over dup @ 4 >> 'colora ! 'curcola ! 0 'coltipo ! )
			$e =? ( over dup @ 4 >> 'colora ! 'curcola ! 1 'coltipo ! )
			$f =? ( over dup @ 4 >> 'colora ! 'curcola ! 2 'coltipo ! )
			drop 4+ ) drop
		) drop
	coltipo colora colorb
	dlgcolor
	'coltipo ! 'colora ! 'colorb !
	colora 4 << coltipo $d + or curcola 0? ( 2drop )( ! )
	colorb 4 << $c or curcolb 0? ( 2drop )( ! )
	;

:btncolor
	colora colorb gc.hdeg gc.fbox
	'elijecolor onUp
	;

|--------------------------------------------------
#guitrazo 4
$ff00 'iborrar 'deltrazo
0 0 0
0 0 0
0 0 0

#guinodo 5
$ff00 'iborrar 'del-poli
$ff00 'imenos 'del-nodo
$ff00 'imas 'ins-nodo
$ff00 'iaba 'abapoli
$ff00 'istop 'curv-nodo

|--------------------------------------------------
:resetspr
	cldibujo
	cltrazo
	0 dup 'poini ! 'pofin !
	-1 'policursor !
	0 'modo ! ;
	1 'coltipo !
	1 'etrazo !
	0 'lastnodo !
	;

:borrodib
	"Borro Dibujo ?" dlgsino 1? ( resetspr ) drop
	;

#editbotgui 5
$ff0000 'ifin 'exit
$ff00ff 'iborrar 'borrodib
$ffffff 'itacho 'btncolor
0 0 0
0 0 0

:botonedit
	'editbotgui .hbtns ;

:botonherra
	modo
	0? ( drop 'guitrazo .hbtns ; )
	1- 0? ( drop 'guinodo .hbtns ; )
	1-
|	1- 0? ( drop 'zoom .hslide ; )
	drop
	;

#modogui 4 'itrazo 'idibuja 'istop 'ilupa

:modoestado
	'modo 'modogui .vradio drop ;

:edititulo
	verde fonti
	modo "modo:%d" print cr
	over "%d" print cr
	policursor "%d " print ;

|------------------------------------------------
#accmodos 'lineasmode 'trazomode 'editmode 'nodomode 'vistamode

:ventanadibujo
    modo $3 and 2 << 'accmodos + @ >r ;

#editgui
0.8 0.8 0 0 'ventanadibujo
0.4 0.1 0.2 0.45 'botonherra
0.4 0.1 -0.3 0.45 'botonedit
0.1 0.4 -0.45 0 'modoestado
0.1 1.0 0.45 0 'zonaderecha
0

:dumpdibujo
	fonti |	azul pofin poini "%d %d" print cr
	verde 
	0 'dibujo ( dibujo> <? )(
		poini =? ( rojo )
		pofin =? ( verde )
		@+ "%h " print
		swap 1+ $7 nand? ( cr ) swap
		) 2drop
 	;

|-----------------------------------

:editando
	inikey
	'exit <esc>
	0 0 fpos
	zoom 1.3 + sh 16 *>> dup 'w ! 'h !
	savebox
	show cls
		scr dumpdibujo
		scr 'editgui gui
		cflecha
		;

|--------------------------------------------------
|--------------------------------------------------
|--------------------------------------------------
|--------------------------------------------------
:newline 13 ,c 10 ,c ; | m#@$#!%@$#

|--- quita los tokens innecesarios ( los degrade y la matriz )
#buffopt )( $4000
#buffopt> 'buffopt

:printbuff
	0 'buffopt
	buffopt> >=? ( 2drop ; )
	"#:dib" ,s pick3 ,h 32 ,c
	( buffopt> <? )(
		@+ " $%h" ,print
		swap 1+ 8 >? ( drop 0 newline )
		swap ) 2drop
	newline
	;

:procbuff | adr --
	'buffopt swap
	( @+ 1? )(
		dup $f and
		$d =? ( drop rot 12 - rot rot dup )
		drop
		rot !+ swap
		)
	rot !+ 'buffopt> !
	drop
	;

:copiamem
	procbuff
	printbuff
	newline
	;

:copiaantes
	;

:copiadespues
	;

:save-code
	copiaantes
	copiamem
	copiadespues
	mem here over - 'nombre save
	;

:load-code
	clear
	mem 'nombre load 'here !

	;


|--------------------------------------------------
:	33
	"./" dir
	'nombre "./nom/code-sprite.mem" load drop
	load-code
	editando
	save-code
	'nombre count "./nom/code-sprite.mem" save
	"main.txt" run ;

