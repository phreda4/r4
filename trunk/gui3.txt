| gui3
| idea en esta version:
|  cada palabra se dibuja y actua sola (no esta "compilada")
|  el teclado esta incluido en la interaccion
|
^libprint.txt
^libsprite.txt
^libgc.txt
^memscr.txt
^font.txt
^fonth.txt

#bmouse..
#click..
#focus.. 1
#idf
#idl
#sucio 1

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
::clrscr
	idf 'idl !	| ultimo
	0 'idf !	| primero
	cls scr home
	bmouse bmouse.. =? ( drop ; )
	0? ( 1 )( 0 ) 'click.. !
	'bmouse.. !
	;

::onIn | 'vec --
	xymouse whin 1? ( drop exec ; ) 2drop ;

::onInOut | 'vecin 'vecout --
	xymouse whin 1? ( 2drop )( drop nip ) exec ;

::onClick | 'vec --
	click.. 1? ( drop xymouse whin 1? ( 0 'click.. ! drop exec ; ) 2drop ; )
	2drop ;

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
| botones sin foco
::btns | acc "str" --
	gc.push
	ink@ dup >r $222222
	[ swap ; ] [ 0.95 fzoom ; ] onInOut
	vbtn
	1 font
	blanco printc r> ink
	onClick
	gc.pop ;

::btnh | acc "str" --
	gc.push
	ink@ dup >r $222222
	[ swap ; ] [ 0.95 fzoom ; ] onInOut
	vbtn
	1 fonthb
	blanco printc r> ink
	onClick
	gc.pop ;

::btnd | acc 'v8d --
	gc.push
	ink@ dup >r $222222
	[ swap ; ] [ 0.95 fzoom ; ] onInOut
	vbtn
	blanco v8draw r> ink
	onClick
	gc.pop ;

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
::ccruz
	xymouse bmouse 2 << 8 + cruz ;

#flecha  $9B8FEFC1 $FA3BEC91 $19C1B2B3 $2F4D1B43 $5839C8D3 $74B160B3 $4560BA93 $6DDC7533 $FA3BEC9A
 $D $7102111 $51DC7753 $35F0AD43 $65995A93 $56A18D03 $2A84DAF3 $1CBD42F3 $710211A
 $FFFFFFD $0

::cflecha
	xymouse 'yc ! 'xc !
	sw 3 >>	bmouse 2 << + dup 'w ! 'h !
	'flecha nsprite ;

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|------------------- edita linea
#cmax
#padi>	| inicio
#pad>	| cursor
#padf>	| fin

:lins  | c --
	padf> padi> - cmax >=? ( 2drop ; ) drop
	pad> dup 1- padf> over - 1+ cmove> 1 'padf> +!
:lover | c --
	pad> c!+ dup 'pad> !
	padf> >? (
		dup padi> - cmax >=? ( swap 1- swap -1 'pad> +! ) drop
		dup 'padf> ! ) drop
:0lin | --
	0 padf> c! ;
:kdel
	pad> padf> >=? ( drop ; ) drop
	1 'pad> +!
:kback
	pad> padi> <=? ( drop ; )
	dup 1- swap padf> over - 1+ cmove -1 'padf> +! -1 'pad> +! ;
:kder
	pad> padf> <? ( 1+ )  'pad> ! ;
:kizq
	 pad> padi> >? ( 1- ) 'pad> !  ;

#modo 'lins

|------- manejo de foco
:nextfoco
	focus.. 1+ idl >? ( 1 nip ) 'focus.. !
	1 'sucio ! ;

:prevfoco
	focus.. 1- 0 <=? ( idl nip ) 'focus.. !
	1 'sucio ! ;

:ktab
	mshift 0? ( nextfoco )( prevfoco ) drop ;

|------- teclado para linea de texto
:setinput | 'var max --
	'cmax ! dup 'padi> !
	( c@+ 1? )( drop ) drop 1- dup
	'pad> ! 'padf> !
	'lins 'modo !
	[ key toasc modo exec ; ] <visible>
	[ modo 'lins =? ( 'lover )( 'lins ) 'modo ! drop  ; ] <ins>
	'kback <back>	'kdel <del>
	'kder <der>		'kizq <izq>
	[ padi> 'pad> ! ; ] <home>
	[ padf> 'pad> ! ; ] <end>
	'ktab dup <tab> <enter>
	'nextfoco <aba> 'prevfoco <arr>
	;

|-------- teclado para boton
:setinputb | 'var --  ; boton con foco
	<enter>
	0 <visible>
	0 <ins> 0 <back> 0 <del>
	0 <home> 0 <end>
	'ktab <tab>
	'nextfoco <der> 'prevfoco <izq>
	'nextfoco <aba> 'prevfoco <arr>
	;

|-------- teclado para slide
:setinputs | 'var --  ; boton con foco
	0 <enter>
	0 <visible>
	0 <ins> 0 <back> 0 <del>
	[ 0.01 over +! ; ] <der> [ -0.01 over +! ; ] <izq>
	[ -0.5 over ! ; ] <home> [ 0.5 over ! ; ] <end>
	'ktab <tab>
	'nextfoco <aba> 'prevfoco <arr>
	drop
	;

|------------------------------
:dcursor
	blink 1? ( drop ; ) drop
	ink@ >r
	modo 'lins =? ( azul )( rojo ) drop
	printcur 1-
	r> ink ;

:drawinput | --
	cmax cntprintbox ink@ blanco gc.fbox ink
	padi> ( pad> =? ( dcursor )
		c@+ 1? )( emit ) 2drop ;

||||||||||||||||||||||||||||
| con foco
|---- ENTRADA
::getline | 'dir cnt --
	1 'idf +!
	focus..
	idf =? (
		sucio 1? ( 0 'sucio ! pick3 pick3 setinput ) drop
		3drop drawinput ; )
	drop
	cntprintbox |gc.box
	xc w 2/ - yc h 2/ + 2dup op
	swap w + swap line
	cntprint
	;

|---- BOTONES
:bordefoco
	ink@ blink 1? ( blanco )( negro ) gc.rod drop ink
	;

::fbtns | 'acc "tex" --
	gc.push
	ink@ dup >r $222222
	[ swap ; ] [ 0.95 fzoom ; ] onInOut
	vbtn
	1 font
	blanco printc r> ink
	1 'idf +!
	focus..
	idf =? (
		sucio 1? ( 0 'sucio ! pick2 setinputb ) drop
		bordefoco )
	drop
	onClick
	gc.pop ;

::fbtnh | 'acc "tex" --
	gc.push
	ink@ dup >r $222222
	[ swap ; ] [ 0.95 fzoom ; ] onInOut
	vbtn
	1 fonthb
	blanco printc r> ink
	1 'idf +!
	focus..
	idf =? (
		sucio 1? ( 0 'sucio ! pick2 setinputb ) drop
		bordefoco )
	drop
	onClick
	gc.pop ;

::fbtnd | acc 'v8d --
	gc.push
	ink@ dup >r $222222
	[ swap ; ] [ 0.95 fzoom ; ] onInOut
	vbtn
	1 fonthb
	blanco v8draw r> ink
	1 'idf +!
	focus..
	idf =? (
		sucio 1? ( 0 'sucio ! pick2 setinputb ) drop
		bordefoco )
	drop
	onClick
	gc.pop ;

|---- SLIDE
::hslide | 'var --
	[ bmouse 1? ( xymouse drop xc - 16 << w / pick2 ! ) drop ; ] onIn
	gc.push 0.98 0.2 fscala
	gc.frod gc.pop
	@ w 16 *>> 'xc +!
 	0.1 0.98 fscala
	$dddddd $222222 vbtn
	;

::vslide | 'var --
	[ bmouse 1? ( xymouse nip yc - 16 << h / pick2 ! ) drop ; ] onIn
	gc.push 0.2 0.98 fscala
	gc.frod gc.pop
	@ h 16 *>> 'yc +!
 	0.98 0.1 fscala
	$dddddd $222222 hbtn
	;

|---- aux
::dumpgui
	scr fonti
	focus.. "foco..:%d " print
	idf "idf:%d " print
	;

::inigui
	key.push
	inikey
	1 dup 'focus.. ! 'sucio !
	;

::exit
	1 '.exit !
	key.pop
	1 dup 'focus.. ! 'sucio !
	;

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||| Dialogos

#tt

:dlgsinor | -- 0/1
	inigui
	[ 0 exit ; ] >esc<
	[ 1 exit ; ] >esp<
	show
		clrscr
		screencopy
		0 0 fpos
		0.6 0.5 fdim
		$ff $11 vbtn |azul gc.frod
		0.15 dup fdim
		-0.2 -0.3 fpos
		rojo oscuro
		[ 0 exit ; ] 'ifin fbtnd
		0.2 -0.3 fpos
		verde oscuro
		[ 1 exit ; ] 'iok fbtnd
		0.6 dup fdim 0 0 fpos
		7 fonthb cr cr
		negro tt printc
		-2 dup 'xc +! 'ccy +! | porque printc lo centra
		blanco tt printc
		cflecha ;

::dlgsino | "" -- 0/1
	'tt !
	oscurecetodo
	screenmark
	key.push
	dlgsinor
	key.pop
	screenempty
	;
