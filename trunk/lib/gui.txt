|------------------------------
| gui - PHREDA
| Immediate mode gui for :r4
|
|------------------------------
^lib/gc.txt
^lib/grpix.txt
^lib/font.txt
^lib/sprite.txt
^lib/cursor.txt

#bmouse..
#click..

#foco
#lastfoco

#idf	| id actual
#idl	| id ultimo

||  Edita linea
#cmax
#padi>	| inicio
#pad>	| cursor
#padf>	| fin

|---------
:dumpgui
	fonti home cr cr cr cr
	bmouse.. "bmouse..%d " print cr
	click.. "click..%d " print cr
	foco "foco%d " print cr
	lastfoco "lastfoco%d " print cr
	cmax "cmax%d " print cr
	padi> "padi>	| inicio%d " print cr
	pad> "pad>| cursor%d " print cr
	padf> "padf>| fin%d " print cr
	;

::clrscr
	idf 'idl !	| ultimo
	0 'idf !	| primero
	cls scr
	bmouse bmouse.. =? ( drop 0 'click.. ! | dumpgui 
	; )
	0? ( 1 )( -1 ) 'click.. !
	'bmouse.. ! ;

::xfb>scr
	idf 'idl !	| ultimo
	0 'idf !	| primero
	xfb> scr
	bmouse bmouse.. =? ( drop 0 'click.. ! ; )
	0? ( 1 )( -1 ) 'click.. !
	'bmouse.. !
	;

::inigui
	key.push inikey
	0 'foco  ! -1 'lastfoco !
	;

::exit
	1 '.exit !
	0 'foco  ! -1 'lastfoco !
	key.pop ;

::onIn | 'vec --
	xymouse whin 0? ( 2drop ; ) drop
	exec ;

::onMove | 'vec --
	xymouse whin 0? ( 2drop ; ) drop
	bmouse 0? ( 2drop ; ) drop
	exec ;

::onInOut | 'vecin 'vecout --
	xymouse whin 1? ( 2drop )( drop nip )
	exec ;

::onClick | 'vec --
	click.. 0? ( 2drop ; ) -? ( 2drop ; ) drop
	xymouse whin 0? ( 2drop ; ) drop
	0 'click.. ! exec ;

::onDn | 'vec --
	click.. 0? ( 2drop ; ) +? ( 2drop ; ) drop
	xymouse whin 0? ( 2drop ; ) drop
	0 'click.. ! exec ;

::onLineMove | 'vec --
	xymouse whin 0? ( 2drop ; ) drop
	bmouse 0? ( 2drop ; ) drop
	xymouse nip
	ccy <? ( 2drop ; )
	ccy cch + >? ( 2drop ; )
	drop
	exec ;

|---------------------------------------------------
| manejo de foco (teclado)

::nextfoco
	foco 1+ idl >? ( 1 nip ) 'foco ! ;

::prevfoco
	foco 1- 0 <=? ( idl nip ) 'foco ! ;

::setfoco | nro --
	foco ! ;

::ktab
	mshift 0? ( nextfoco )( prevfoco ) drop ;

:clickfoco
	idf foco =? ( drop ; ) 'foco ! ;

::w/foco | 'fvect 'svect --
	idf 1+
	foco 0? ( drop dup dup 'foco ! )
	<>? ( 'idf ! 2drop ; )
	lastfoco <>? ( dup 'lastfoco ! swap exec )( nip )
	'idf !
	exec ;

 | no puedo retroceder!
::lostfoco | 'acc --
	idf 1+ foco <>? ( 'idf ! drop ; ) 'idf !
	exec
	nextfoco ;

:32to12
	dup 4 >> $f and | $f0 -> $f
	over 8 >> $f0 and or
	swap 12 >> $f00 and or ;

::4+gc
	4 dup 'w +! 'h +! ;

::4-gc
	-4 dup 'w +! 'h +! ;

:swap12bits
	dup 12 << swap 12 >> $fff and or ;

::botonsimple
	xc w 2/ - yc h 2/ - .at
	h ink@ 32to12 $111000 or
	'swap12bits onIn
	degrade!
	w h .fboxdh
	;

|-----------------
::gcbtn | acc --
	xc w 2/ - yc h 2/ - .at
	h [ $fff000 ; ] [ $000fff ; ] onInOut degrade!
	w h .fboxdh
	onClick
	;

|--------
::btnt | 'event "texto" --
	gc.push
	ccw 2/ 'ccx +!
	print2gc
	ccw 'w +!
	cch 2/ 'h +!
	botonsimple
	ink@ >r blanco printx r> ink
	onClick
	ccw 2/ 'ccx +!
	gc.pop ;

::btnm | 'vec "label" cnt --
	gc.push
	tx2 tx1 - ccw pick2 * dup 2/ + - 2/ tx1 + 'ccx !
	cntprintbox drop
	ccw 'w +!
	cch 2/ 'h +!
	botonsimple
	ink@ >r blanco printc r> ink
|	'bordefoco 'keys-btn *foco*
	onClick
	ccw 'ccx +!
	gc.pop ;

::btnh  | 'vec "label" cnt --
	gc.push
	tx2 tx1 - ccw pick2 * dup 2/ + - 2/ tx1 + 'ccx !
	cntprintbox drop
	ccw 'w +!
	cch 2/ 'h +!
	botonsimple
	ink@ >r blanco print r> ink
|	'bordefoco 'keys-btn *foco*
	onClick
	ccw 'ccx +!
	gc.pop ;

::btnd | 'event 'dibujo --
	gc.push
	botonsimple
	blanco v8draw
	onClick
	gc.pop ;

::btnbox | 'event "texto" --
	gc.push
	ccw 2/ 'ccx +!
	print2gc
	ccw 'w +!
	cch 2/ 'h +!

	xc w 2/ - yc h 2/ - .at w h .fbox

	ink@ >r blanco printx r> ink
	onClick
	ccw 2/ 'ccx +!
	gc.pop ;

::btntxt | 'event "texto" --
	gc.push
	print2gc
	[ gc.box ; ] onIn
	printx
	onClick
	gc.pop ;


|-------- teclado para boton
:keys-btn | 'acc xx --  ; boton con foco
	over <enter>
	0 <visible>
	0 <ins> 0 <back> 0 <del>
	0 <home> 0 <end>
	'ktab <tab>
	'nextfoco dup <dn> <le>
	'prevfoco dup <up> <ri>
	;

:bordefoco
	ink@ azul
	4 dup 'w +! 'h +!
	-1 'yc +!
	gc.rod
	ink ;

::.btnt
	gc.push
	ccw 'ccx +!
	print2gc
	ccw 2* 'w +!
	cch 2/ 'h +!
	botonsimple
	ink@ >r blanco printx r> ink
	'bordefoco 'keys-btn w/foco
	onClick
	ccw 'ccx +!
	gc.pop ;


|-------  Edita linea

:lins  | c --
	padf> padi> - cmax >=? ( 2drop ; ) drop
	pad> dup 1- padf> over - 1+ cmove> 1 'padf> +!
:lover | c --
	pad> c!+ dup 'pad> !
	padf> >? (
		dup padi> - cmax >=? ( swap 1- swap -1 'pad> +! ) drop
		dup 'padf> ! ) drop
:0lin | --
	0 padf> c! ;
:kdel
	pad> padf> >=? ( drop ; ) drop
	1 'pad> +!
:kback
	pad> padi> <=? ( drop ; )
	dup 1- swap padf> over - 1+ cmove -1 'padf> +! -1 'pad> +! ;
:kder
	pad> padf> <? ( 1+ )  'pad> ! ;
:kizq
	 pad> padi> >? ( 1- ) 'pad> !  ;

#modo 'lins

|---------------------------
:dcursor
	blink 1? ( drop ; ) drop
	modo 'lins =? ( azul )( rojo ) drop
	printcur 1- ;

:bordebox
	ink@ azul
	gc.box
	ink ;

:inigetline | 'var max 'dr IDF -- 'var max 'dr IDF
	pick2 'cmax !
	pick3 dup 'padi> !
	( c@+ 1? )( drop ) drop 1- dup
	'pad> ! 'padf> !
	'lins 'modo !

	[ key toasc modo exec ; ] <visible>
	[ modo 'lins =? ( 'lover )( 'lins ) 'modo ! drop  ; ] <ins>
	'kback <back>	'kdel <del>
	'kder <ri>		'kizq <le>
	[ padi> 'pad> ! ; ] <home>
	[ padf> 'pad> ! ; ] <end>
	'ktab dup <tab> <enter>
	'nextfoco <dn> 'prevfoco <up>
	;

:drgetline | --
	blanco 4 dup 'w +! 'h +! gc.fbox
	ccx
	padi> ( pad> =? ( dcursor ) c@+ 1? )( emit ) 2drop
	'ccx !
	negro ;

|------- GETLINE
::getline | 'var max --
	gc.push
	blanco
	cntprintbox
	'drgetline 'inigetline w/foco
	'clickfoco onClick
	drop printx
	gc.pop ;

|------- INPUTLINE (si foco)
:inigetlines | 'var max 'dr IDF -- 'var max 'dr IDF
	pick2 'cmax !
	pick3 dup 'padi> !
	( c@+ 1? )( drop ) drop 1- dup
	'pad> ! 'padf> !
	'lins 'modo !

	[ key toasc modo exec ; ] <visible>
	[ modo 'lins =? ( 'lover )( 'lins ) 'modo ! drop  ; ] <ins>
	'kback <back>	'kdel <del>
	'kder <ri>		'kizq <le>
	[ padi> 'pad> ! ; ] <home>
	[ padf> 'pad> ! ; ] <end>
	;

::inputline | 'var max --
	'drgetline 0 inigetlines
	3drop
	( pad> =? ( dcursor ) c@+ 1? )( emit )
	2drop ;

|-------- SLIDES
::hslide | 'var --
	[ xymouse drop xc - 16 << w / over ! ; ] onMove
	gc.push 0.98 0.2 fscala
	gc.frod gc.popush
	@ w 16 *>> 'xc +!
 	0.1 0.98 fscala ink@
	$dddddd $222222 vbtn
	gc.pop ink
	;

::vslide | 'var --
	[ xymouse nip yc - 16 << h / over ! ; ] onMove
	gc.push 0.2 0.98 fscala
	gc.frod gc.popush
	@ h 16 *>> 'yc +!
 	0.98 0.1 fscala ink@
	$dddddd $222222 hbtn
	gc.pop ink
	;

