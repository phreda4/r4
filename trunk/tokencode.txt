| Interprete de R4
| PHREDA 2007
|---------------------------------
^reda4.txt
^text.txt
^tokencomp.txt
^trace.txt

#inter )( 64
#inter> 'inter 

#irqkey 0
#irqmou 0

:+interrupcion | inter --
	0? ( drop ; )
	inter> !+ 'inter> >=? ( "Bucle infinito" 'msg ! 0 ; )
	'inter> ! ;

|--- Pilas
#dpila )( 1024	#dpila> 'dpila		
#rpila )( 1024	#rpila> 'rpila

|------------ Pila de ejecucion
#:pilaexe )( 1024	 | 256 palabras
#:pilaexe> 'pilaexe

:reserpal
	'pilaexe 'pilaexe> ! ;
:addpal | add --
	'pilaexe ( @+ 1? )( pick2 =? ( 3drop ; ) drop ) 2drop
	pilaexe> !+ 'pilaexe> ! ;
:delpal | 
	-4 'pilaexe> +! ;

|------------ test
:pila?	'dpila <? ( "Pila vacia" 'msg ! 0 nip rdrop ; ) ;  
:?pila	'dpila> >=? ( "Pila llena" 'msg ! 0 nip rdrop ; ) ;
:?.pila	'dpila> >=? ( "Pila llena" 'msg ! 0 nip nip rdrop ; ) ;
:pilar?	'rpila <? ( "Pila R vacia" 'msg ! 0 nip rdrop ; ) ;
:pilar.?	'rpila <? ( "Pila R vacia" 'msg ! 0 nip nip rdrop ; ) ;
:?PILAR	'rpila> >=? ( "Pila R llena" 'msg ! 0 nip rdrop ; ) ;

:pmem? | adr -- adr/0
	prog >=? ( prog> <=? ( ; ) )
	"fuera de mem" 'msg ! 0 nip rdrop ;

:dmem? | adr -- adr/0
	dato >=? ( ; )
	"fuera de mem" 'msg ! 0 nip rdrop ; 

|--- pilas
:d.ini 'dpila 'dpila> ! ;
::d.push dpila> !+ 'dpila> ! ;
::d.pop  -4 'dpila> +! dpila> @ ;
:d.cnt dpila> 'dpila - ;

:r.ini	'rpila 'rpila> ! ;
:r.push	rpila> !+ 'rpila> ! ;
:r.pop	-4 'rpila> +! rpila> @ ;
:r.cnt	rpila> 'rpila - ;

|---------------
:jmp	drop 5 + @ ;

:i;		r.cnt 0? ( nip ; ) 2drop r.pop ; |delpal ; | quita r y salta
:i)( 		
:i) 		@+ 1? ( swap ) drop ;
:i(		4+ ;
:i[ 		dup @ 1? ( swap 4+ d.push )( drop ) ;
:i] 		4+ ;
:iEXEC	4+ d.pop 1? ( swap r.push ; ) drop ;
:i0?		dpila> 4 - pila? @ 1? ( jmp ; ) drop 9 + ;		|-- condicionales
:i+?		dpila> 4 - pila? @ 0 <?  ( jmp ; ) drop 9 + ;
:i-?		dpila> 4 - pila? @ 0 >=? ( jmp ; ) drop 9 + ;
:i1?		dpila> 4 - pila? @ 0? ( jmp ; ) drop 9 + ;
:i=?		dpila> 8 - pila? @+ swap dup 'dpila> ! @ <>? ( jmp ; ) drop 9 + ;
:i<?		dpila> 8 - pila? @+ swap dup 'dpila> ! @ >=? ( jmp ; ) drop 9 + ;
:i>?		dpila> 8 - pila? @+ swap dup 'dpila> ! @ <=? ( jmp ; ) drop 9 + ;
:i<=?	dpila> 8 - pila? @+ swap dup 'dpila> ! @ >? ( jmp ; ) drop 9 + ;
:i>=?	dpila> 8 - pila? @+ swap dup 'dpila> ! @ <? ( jmp ; ) drop 9 + ;
:i<>?	dpila> 8 - pila? @+ swap dup 'dpila> ! @ =? ( jmp ; ) drop 9 + ;
:iAND?	dpila> 8 - pila? @+ swap dup 'dpila> ! @ nand? ( jmp ; ) drop 9 + ;
:iNAND?	dpila> 8 - pila? @+ swap dup 'dpila> ! @ and? ( jmp ; ) drop 9 + ;

:iDROP	dpila> 4 - pila? 'dpila> ! 4+ ;
:i2DROP dpila> 8 - pila? 'dpila> ! 4+ ;
:i3DROP dpila> 12 - pila? 'dpila> ! 4+ ;
:i4DROP	dpila> 16 - pila? 'dpila> ! 4+ ;
:iDUP	dpila> 4 - pila? @+ swap !+ ?pila 'dpila> ! 4+ ;
:i2DUP	dpila> 8 - pila? @+ swap @+ rot rot !+ !+ ?pila 'dpila> ! 4+ ;
:iOVER	dpila> 8 - pila? @+ swap 4+ !+ ?pila 'dpila> ! 4+ ;
:iPICK2	dpila> 12 - pila? @+ swap 8 + !+ ?pila 'dpila> ! 4+ ;
:iPICK3	dpila> 16 - pila? @+ swap 12 + !+ ?pila 'dpila> ! 4+ ;
:iPICK4	dpila> 20 - pila? @+ swap 16 + !+ ?pila 'dpila> ! 4+ ;
:iSWAP	dpila> 8 - pila? dup @+ swap @ rot !+ ! 4+ ; 
:iNIP	dpila> 8 - pila? dup 4+ @ swap !+ 'dpila> ! 4+ ; 
:iROT	dpila> 12 - pila? dup >r @+ swap @+ r!+ @ r!+ r> ! 4+ ;
:i2OVER	dpila> 16 - pila?  @+ swap @+ rot rot 8 + !+ !+ ?pila 'dpila> ! 4 + ;
:i2SWAP dpila> 16 - pila? >r r@+ r@+ r@+ r@+ -16 r+ swap r!+ r!+ swap r!+ r> ! 4+ ;
:i>R		dpila> 4 - pila? dup 'dpila> ! @ rpila> !+ ?pilar 'rpila> ! 4+ ;		|--- pila de direccion
:iR>		rpila> 4 - pilar? dup 'rpila> ! @ dpila> !+ ?pila 'dpila> ! 4+ ;
:iR		rpila> 4 - pilar? @ dpila> !+ ?pila 'dpila> ! 4+ ;
:iR+		dpila> 4 - pila? dup 'dpila> ! @ rpila> 4 - pilar.? +! 4+ ;
:iR@+	rpila> 4 - pilar? dup @ @ dpila> !+ ?.pila 'dpila> ! 4 swap +! 4+ ; 
:iR!+	dpila> 4 - pila? dup 'dpila> ! @ rpila> 4 - pilar.? 4 over +! @ ! 4+ ;
:iRDROP	rpila> 4 - pilar? 'rpila> ! 4+ ;
:iAND	dpila> 8 - pila? dup @+ swap @ and swap !+ 'dpila> ! 4+ ;			|--- logica y aritmetica
:iOR		dpila> 8 - pila? dup @+ swap @ or swap !+ 'dpila> ! 4+ ;
:iXOR	dpila> 8 - pila? dup @+ swap @ xor swap !+ 'dpila> ! 4+ ;
:iNOT	dpila> 4 - pila? dup @ not swap ! 4+ ;
:i+		dpila> 8 - pila? dup @+ swap @ + swap !+ 'dpila> ! 4+ ;  
:i-		dpila> 8 - pila? dup @+ swap @ - swap !+ 'dpila> ! 4+ ;
:i*		dpila> 8 - pila? dup @+ swap @ * swap !+ 'dpila> ! 4+ ;
:i/		dpila> 8 - pila? dup @+ swap @ / swap !+ 'dpila> ! 4+ ; | "division por 0"
:i*/		dpila> 12 - pila? dup @+ swap @+ swap @ */ swap !+ 'dpila> ! 4+ ; | "division por 0"
:i*>>	dpila> 12 - pila? dup @+ swap @+ swap @ *>> swap !+ 'dpila> ! 4+ ;
:i/MOD	dpila> 8 - pila? dup @+ swap @ /mod swap rot !+ !+ 'dpila> ! 4+ ;
:iMOD	dpila> 8 - pila? dup @+ swap @ mod swap !+ 'dpila> ! 4+ ;
:iABS	dpila> 4 - pila? dup @ abs swap ! 4+ ;
:iNEG	dpila> 4 - pila? dup @ neg swap ! 4+ ;
:i2/		dpila> 4 - pila? dup @ 2/ swap ! 4+ ;
:i2*		dpila> 4 - pila? dup @ 2* swap ! 4+ ;
:i<<	dpila> 8 - pila? dup @+ swap @ << swap !+ 'dpila> ! 4+ ;
:i>>	dpila> 8 - pila? dup @+ swap @ >> swap !+ 'dpila> ! 4+ ;
:i1-		dpila> 4 - pila? dup @ 1- swap ! 4+ ;
:i1+		dpila> 4 - pila? dup @ 1+ swap ! 4+ ;
:i4+		dpila> 4 - pila? dup @ 4+ swap ! 4+ ;
:i@		dpila> 4 - pila? dup @ @ swap ! 4+ ;			|--- mem
:iC@		dpila> 4 - pila? dup @ c@ swap ! 4+ ;
:iW@	dpila> 4 - pila? dup @ w@ swap ! 4+ ;
:i!		dpila> 8 - pila? dup 'dpila> ! @+ swap @ ! 4+ ; 
:iC!		dpila> 8 - pila? dup 'dpila> ! @+ swap @ c! 4+ ;
:iW!		dpila> 8 - pila? dup 'dpila> ! @+ swap @ w! 4+ ; 
:i+!		dpila> 8 - pila? dup 'dpila> ! @+ swap @ +! 4+ ;
:iC+!	dpila> 8 - pila? dup 'dpila> ! @+ swap @ c+! 4+ ;
:iW+!	dpila> 8 - pila? dup 'dpila> ! @+ swap @ w+! 4+ ;
:i@+	dpila> 4 - pila? dup @+ @ swap !+ 'dpila> ! 4 swap +! 4+ ; | no test
:iC@+	dpila> 4 - pila? dup @+ c@ swap !+ 'dpila> ! 1 swap +! 4+ ; | no test
:iW@+	dpila> 4 - pila? dup @+ w@ swap !+ 'dpila> ! 2 swap +! 4+ ; | no test
:i!+		dpila> 8 - pila? dup @+ swap @ !+ swap !+ 'dpila> ! 4+ ; | nose
:iC!+	dpila> 8 - pila? dup @+ swap @ c!+ swap !+ 'dpila> ! 4+ ; | nose
:iW!+	dpila> 8 - pila? dup @+ swap @ w!+ swap !+ 'dpila> ! 4+ ; | nose

|---- pantalla
|:iXYFRAME	dpila> 8 - pila? dup @+ swap @ xyframe swap !+ 'dpila> ! 4+ ; | nose

:iSW	sw dpila> !+ ?pila 'dpila> ! 4+ ;
:iSH		sh dpila> !+ ?pila 'dpila> ! 4+ ;
:iFRAMEV	framev dpila> !+ ?pila 'dpila> ! 4+ ;
:iREDRAW	redraw 4+ ;
:iUPDATE	|update | hace interrupciones
	inter> 'inter =? ( drop 4+ ; )
	4 - dup 'inter> ! @ |0? ( drop ; )
	swap rpila> !+ 'rpila> !
	4+ ;
|---- dibujo
:iOP		dpila> 8 - pila? dup 'dpila> ! @+ swap @ op 4+ ;
:iCP 		dpila> 8 - pila? dup 'dpila> ! @+ swap @ cp 4+ ;
:iLINE 	dpila> 8 - pila? dup 'dpila> ! @+ swap @ line 4+ ;
:iCURVE 	dpila> 8 - pila? dup 'dpila> ! @+ swap @ curve 4+ ;
:iPLINE 	dpila> 8 - pila? dup 'dpila> ! @+ swap @ pline 4+ ;
:iPCURVE dpila> 8 - pila? dup 'dpila> ! @+ swap @ pcurve 4+ ;
:iPOLI	poli 4+ ;
:iFCOL	dpila> 8 - pila? dup 'dpila> ! @+ swap @ fcol 4+ ;
:iFCEN	dpila> 8 - pila? dup 'dpila> ! @+ swap @ fcen 4+ ;
:iFMAT	dpila> 8 - pila? dup 'dpila> ! @+ swap @ fmat 4+ ;
:iSFILL  sfill 4+ ;
:iLFILL  lfill 4+ ;
:iRFILL  rfill 4+ ;
:iSETXY		dpila> 8 - pila? dup 'dpila> ! @+ swap @  setxy 4+ ;
:iPX+!	dpila> 4 - pila? dup 'dpila> ! @ px+! 4+ ;
:iPX!+	dpila> 4 - pila? dup 'dpila> ! @ px!+ 4+ ;
:iPX@	px@ dpila> !+ ?pila 'dpila> ! 4+ ;
:iPAPER	dpila> 4 - pila? dup 'dpila> ! @ paper 4+ ;
:iINK	dpila> 4 - pila? dup 'dpila> ! @ ink 4+ ;
:iINKF	ink@ dpila> !+ ?pila 'dpila> ! 4+ ;
:iALPHA	dpila> 4 - pila? dup 'dpila> ! @ ALPHA 4+ ;
:iCLS	cls 4+ ;
|----- sis
:iMSEC	msec dpila> !+ ?pila 'dpila> ! 4+ ;
:iTIME	time rot d.push swap d.push d.push 4+ ;
:iDATE	date rot d.push swap d.push d.push 4+ ;
:iEND	0 ;
:iRUNi	0 ;
|-----  Interrupciones
:iRPEN!	dpila> 4 - pila? dup 'dpila> ! @ 'irqkey ! 4+ ; | n --
:iRKEY!	dpila> 4 - pila? dup 'dpila> ! @ 'irqmou ! 4+ ; | n --
|-----mouse
:iXYMOUSE	xymouse swap d.push d.push 4+ ;
:iBMOUSE	bmouse d.push 4+ ;
|-----teclado
:iKEY		key d.push 4+ ;
|-----joystick
:iCNTJOY	cntjoy d.push 4+ ;
:iAJOY	d.pop AJOY d.push 4+ ;
:iBJOY	d.pop BJOY d.push 4+ ;
|--- archivos
:iDIR	dpila> 4 - pila? dup 'dpila> ! @ dir 4+ ;	| "path" --
:iVOL	d.pop VOL d.push 4+ ;  | nro -- "nombre" o 0
:iFILE	dpila> 4 - pila? dup @ file swap ! 4+ ;  | nro -- "nombre" o 0
:iFSIZE	d.pop FSIZE d.push 4+ ;  | nro --  size o 0
:iLOAD	dpila> 8 - pila? dup @+ swap @ load swap !+ 'dpila> ! 4+ ;  | 'from "filename" -- 'to
:iSAVE	dpila> 12 - pila? dup @+ swap @+ swap @ save 'dpila> ! 4+ ;   |  'from cnt "filename" --
:iMEM	dato> dpila> !+ ?pila 'dpila> ! 4+ ; | mem
|--- mueve mem
:iMOVE		dpila> 12 - pila? dup @+ swap @+ swap @ move 'dpila> ! 4+ ;
:iMOVE>		dpila> 12 - pila? dup @+ swap @+ swap @ move> 'dpila> ! 4+ ;
:iCMOVE		dpila> 12 - pila? dup @+ swap @+ swap @ cmove 'dpila> ! 4+ ;
:iCMOVE>	dpila> 12 - pila? dup @+ swap @+ swap @ cmove> 'dpila> ! 4+ ;
|--- sonido
:iSLOAD	d.pop  d.push 4+ ;  | "" -- n
:iSPLAY	d.pop drop 4+ ;  | n/0 --

|--------
:i-1 | nro dec
:i-2 | nro bin
:i-3	@+ d.push ; | nro hex
:i-4 	@+ d.push ; | cadena
:i-5	@+ 4+ @ @ d.push ; | variable
:i-6	@+ dup addpal  | palabra actual
	4+ @ swap r.push ; | palabra
:i-7 	@+ 	4+ @ d.push ; | direccion

#tablai	| tabla de saltos de inctrucciones
|0		1		2		3		4		5		6			7			8			9			A			B		C		D		E		F
|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

 i;		i(		i)(		i)		i[		i]		 i0?		i+?			i-?			i1?			i=?			i<?		i>?		i<=?	i>=?	i<>?	| 0
 iAND?	iNAND?	iEXEC	iDUP	iDROP	iOVER	 iPICK2		iPICK3		iPICK4		iSWAP		iNIP			iROT	i2DUP	i2DROP	i3DROP	i4DROP	| 1
 i2OVER	i2SWAP  i>R		iR>		iR		iR+		 iR@+		iR!+			iRDROP		iAND		iOR			iXOR	iNOT	i+		i-		i*		| 2
 i/		i*/		i*>>	i/MOD	iMOD	iABS	 iNEG		i1+			i4+			i1-			i2/			i2*		i<<		i>>		i@		iC@		| 3
 iW@	i!		iC!		iW!		i+!		iC+!	iW+!		i@+			i!+			iC@+		iC!+			iW@+	iW!+	iMSEC	iTIME	iDATE	| 4
 iEND	iRUNi	0		iSW		iSH		iCLS		iREDRAW	iFRAMEV	iUPDATE		iXYMOUSE	iBMOUSE	iKEY		iCNTJOY	iAJOY	iBJOY	iRPEN!	| 5
 iRKEY!	iSETXY	iPX+!	iPX!+	iPX@	iPAPER	iINK	iINKF	iALPHA	iOP		iCP			iLINE		iCURVE		iPLINE		iPCURVE		iPOLI
iFCOL  iFCEN	iFMAT	iSFILL	iLFILL	iRFILL	iMEM	iDIR	iFILE	iFSIZE	iVOL		iLOAD		iSAVE		iMOVE		iMOVE>		iCMOVE
iCMOVE>	iSLOAD	iSPLAY	0		0		0		0			0			0			0			0			0		0		0		0		0		| 8
0		0		0		0		0		0		0			0			0			0			0			0		0		0		0		0		| 9
0		0		0		0		0		0		0			0			0			0			0			0		0		0		0		0		| A
0		0		0		0		0		0		0			0			0			0			0			0		0		0		0		0		| B
0		0		0		0		0		0		0			0			0			0			0			0		0		0		0		0		| C
0		0		0		0		0		0		0			0			0			0			0			0		0		0		0		0		| D
0		0		0		0		0		0		0			0			0			0			0			0		0		0		0		0		| E
0		0		0		0		0		0		0			0			0			i-7			i-6			i-5		i-4		i-3		i-2		i-1		| F
|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

|------- funcionamiento
::resetvm | --
	0 dup 'irqmou ! 'irqkey !  | interrupciones
	'inter 'inter> !
	d.ini r.ini
	<<boot '<<ip !
	indicepal> 16 - addpal | agrega palabra boot
	;

::vmsteppal	| addr -- adrr		; ejecuta 1 palabra completa
	0? ( ; )	| direccion 0 no ejecuta
	dup |@ addpal
	addpal
	4+ @ dup '<<ip !
	( 1? )( c@+ $ff and 2 << 'tablai + @ exec ) drop
	'<<ip ! ;

::expalabra | dir --
	dup |@ addpal  | palabra actual
	addpal
	4+ @ dup '<<ip !
	( 1? )( c@+ $ff and 2 << 'tablai + @ exec ) 
	'<<ip ! ;

::stepvm | --
	<<ip 0? ( drop ; )
	c@+ $ff and 2 << 'tablai + @ exec 
	'<<ip ! ;

::exmacro | dir nrom -- dirn/0
	1- 2 << 'tablai + @ >r ;

#corte
::wordvm | --
	r.cnt 'corte !
	<<ip
	( 1? )( c@+ $ff and 2 << 'tablai + @ exec 
		r.cnt corte <? ( drop '<<ip ! ; ) drop 
		) 
	'<<ip ! ;

::playvm | --
	.page
|	[ "a" trace key 0? ( ; ) drop irqkey +interrupcion ; ] ikey! 
|	[ irqmou +interrupcion ; ] ipen!
	[ 0 ; ] >esc<
	<<ip ( update 1? )( 
		c@+ $ff and 2 << 'tablai + @ exec 
		) drop
|	'<<ip !
	.unpage	;

|-------------------------------
::dibujapila
	d.cnt 1? ( amarillo "(" print 'dpila ( dpila> <? )( @+ " %h" print  ) drop ) drop ;

::dibujapilar
	r.cnt 1? ( cyan "(" print 'rpila ( rpila> <? )( @+ " %h" print  ) drop ) drop ;

::dumpvm
	dibujapila cr 
	dibujapilar cr 
	blanco
	<<ip 0? ( drop " FIN"  )( dup c@+ swap @ dup  " %d $%h [%d] IP:%h" ) 
	print ;